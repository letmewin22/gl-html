{"version":3,"file":"app.module.js","sources":["../node_modules/ogl/src/math/functions/Vec3Func.js","../node_modules/ogl/src/math/Vec3.js","../node_modules/ogl/src/core/Geometry.js","../node_modules/ogl/src/core/Program.js","../node_modules/ogl/src/core/Renderer.js","../node_modules/ogl/src/math/functions/Vec4Func.js","../node_modules/ogl/src/math/functions/QuatFunc.js","../node_modules/ogl/src/math/Quat.js","../node_modules/ogl/src/math/functions/Mat4Func.js","../node_modules/ogl/src/math/Mat4.js","../node_modules/ogl/src/math/Euler.js","../node_modules/ogl/src/math/functions/EulerFunc.js","../node_modules/ogl/src/core/Transform.js","../node_modules/ogl/src/core/Camera.js","../node_modules/ogl/src/math/functions/Mat3Func.js","../node_modules/ogl/src/math/Mat3.js","../node_modules/ogl/src/core/Mesh.js","../node_modules/ogl/src/core/Texture.js","../node_modules/ogl/src/core/RenderTarget.js","../node_modules/ogl/src/math/functions/ColorFunc.js","../node_modules/ogl/src/math/Color.js","../node_modules/ogl/src/math/functions/Vec2Func.js","../node_modules/ogl/src/math/Vec2.js","../node_modules/ogl/src/extras/Plane.js","../node_modules/ogl/src/extras/Triangle.js","../node_modules/ogl/src/extras/Orbit.js","../node_modules/ogl/src/extras/Raycast.js","../node_modules/ogl/src/extras/Curve.js","../node_modules/ogl/src/extras/Post.js","../node_modules/ogl/src/extras/Animation.js","../node_modules/ogl/src/extras/Skin.js","../node_modules/ogl/src/extras/NormalProgram.js","../node_modules/ogl/src/extras/Flowmap.js","../node_modules/ogl/src/extras/Polyline.js","../node_modules/ogl/src/extras/Shadow.js","../node_modules/ogl/src/extras/KTXTexture.js","../node_modules/ogl/src/extras/TextureLoader.js","../node_modules/ogl/src/extras/GLTFAnimation.js","../node_modules/ogl/src/extras/GLTFSkin.js","../node_modules/ogl/src/extras/GLTFLoader.js","../node_modules/ogl/src/math/Vec4.js","../node_modules/ogl/src/extras/Box.js","../node_modules/ogl/src/extras/Sphere.js","../node_modules/ogl/src/extras/Cylinder.js","../node_modules/ogl/src/extras/Torus.js","../node_modules/ogl/src/extras/Text.js","../node_modules/ogl/src/extras/GPGPU.js","../src/TextureLoader/Cache.js","../src/TextureLoader/LoadingManager.js","../src/TextureLoader/Loader.js","../src/TextureLoader/ImageLoader.js","../src/TextureLoader/TextureLoader.js","../src/Figure.js","../src/BaseFigure.js","../src/utils/generateID.js","../node_modules/@emotionagency/utils/build/raf/raf.js","../node_modules/debounce/index.js","../node_modules/@emotionagency/utils/build/resize/resize.js","../node_modules/@emotionagency/utils/build/math.js","../node_modules/@emotionagency/utils/build/createNewElement.js","../node_modules/@emotionagency/utils/build/mutationObserver.js","../node_modules/@emotionagency/utils/build/matrixTransform.js","../node_modules/@emotionagency/utils/build/index.js","../src/DefaultScetch.js","../src/Scetch.js"],"sourcesContent":["const EPSILON = 0.000001;\n\n/**\n * Calculates the length of a vec3\n *\n * @param {vec3} a vector to calculate length of\n * @returns {Number} length of a\n */\nexport function length(a) {\n    let x = a[0];\n    let y = a[1];\n    let z = a[2];\n    return Math.sqrt(x * x + y * y + z * z);\n}\n\n/**\n * Copy the values from one vec3 to another\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the source vector\n * @returns {vec3} out\n */\nexport function copy(out, a) {\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    return out;\n}\n\n/**\n * Set the components of a vec3 to the given values\n *\n * @param {vec3} out the receiving vector\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @returns {vec3} out\n */\nexport function set(out, x, y, z) {\n    out[0] = x;\n    out[1] = y;\n    out[2] = z;\n    return out;\n}\n\n/**\n * Adds two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nexport function add(out, a, b) {\n    out[0] = a[0] + b[0];\n    out[1] = a[1] + b[1];\n    out[2] = a[2] + b[2];\n    return out;\n}\n\n/**\n * Subtracts vector b from vector a\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nexport function subtract(out, a, b) {\n    out[0] = a[0] - b[0];\n    out[1] = a[1] - b[1];\n    out[2] = a[2] - b[2];\n    return out;\n}\n\n/**\n * Multiplies two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nexport function multiply(out, a, b) {\n    out[0] = a[0] * b[0];\n    out[1] = a[1] * b[1];\n    out[2] = a[2] * b[2];\n    return out;\n}\n\n/**\n * Divides two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nexport function divide(out, a, b) {\n    out[0] = a[0] / b[0];\n    out[1] = a[1] / b[1];\n    out[2] = a[2] / b[2];\n    return out;\n}\n\n/**\n * Scales a vec3 by a scalar number\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {vec3} out\n */\nexport function scale(out, a, b) {\n    out[0] = a[0] * b;\n    out[1] = a[1] * b;\n    out[2] = a[2] * b;\n    return out;\n}\n\n/**\n * Calculates the euclidian distance between two vec3's\n *\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {Number} distance between a and b\n */\nexport function distance(a, b) {\n    let x = b[0] - a[0];\n    let y = b[1] - a[1];\n    let z = b[2] - a[2];\n    return Math.sqrt(x * x + y * y + z * z);\n}\n\n/**\n * Calculates the squared euclidian distance between two vec3's\n *\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {Number} squared distance between a and b\n */\nexport function squaredDistance(a, b) {\n    let x = b[0] - a[0];\n    let y = b[1] - a[1];\n    let z = b[2] - a[2];\n    return x * x + y * y + z * z;\n}\n\n/**\n * Calculates the squared length of a vec3\n *\n * @param {vec3} a vector to calculate squared length of\n * @returns {Number} squared length of a\n */\nexport function squaredLength(a) {\n    let x = a[0];\n    let y = a[1];\n    let z = a[2];\n    return x * x + y * y + z * z;\n}\n\n/**\n * Negates the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a vector to negate\n * @returns {vec3} out\n */\nexport function negate(out, a) {\n    out[0] = -a[0];\n    out[1] = -a[1];\n    out[2] = -a[2];\n    return out;\n}\n\n/**\n * Returns the inverse of the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a vector to invert\n * @returns {vec3} out\n */\nexport function inverse(out, a) {\n    out[0] = 1.0 / a[0];\n    out[1] = 1.0 / a[1];\n    out[2] = 1.0 / a[2];\n    return out;\n}\n\n/**\n * Normalize a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a vector to normalize\n * @returns {vec3} out\n */\nexport function normalize(out, a) {\n    let x = a[0];\n    let y = a[1];\n    let z = a[2];\n    let len = x * x + y * y + z * z;\n    if (len > 0) {\n        //TODO: evaluate use of glm_invsqrt here?\n        len = 1 / Math.sqrt(len);\n    }\n    out[0] = a[0] * len;\n    out[1] = a[1] * len;\n    out[2] = a[2] * len;\n    return out;\n}\n\n/**\n * Calculates the dot product of two vec3's\n *\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {Number} dot product of a and b\n */\nexport function dot(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n\n/**\n * Computes the cross product of two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nexport function cross(out, a, b) {\n    let ax = a[0],\n        ay = a[1],\n        az = a[2];\n    let bx = b[0],\n        by = b[1],\n        bz = b[2];\n\n    out[0] = ay * bz - az * by;\n    out[1] = az * bx - ax * bz;\n    out[2] = ax * by - ay * bx;\n    return out;\n}\n\n/**\n * Performs a linear interpolation between two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @param {Number} t interpolation amount between the two inputs\n * @returns {vec3} out\n */\nexport function lerp(out, a, b, t) {\n    let ax = a[0];\n    let ay = a[1];\n    let az = a[2];\n    out[0] = ax + t * (b[0] - ax);\n    out[1] = ay + t * (b[1] - ay);\n    out[2] = az + t * (b[2] - az);\n    return out;\n}\n\n/**\n * Transforms the vec3 with a mat4.\n * 4th vector component is implicitly '1'\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the vector to transform\n * @param {mat4} m matrix to transform with\n * @returns {vec3} out\n */\nexport function transformMat4(out, a, m) {\n    let x = a[0],\n        y = a[1],\n        z = a[2];\n    let w = m[3] * x + m[7] * y + m[11] * z + m[15];\n    w = w || 1.0;\n    out[0] = (m[0] * x + m[4] * y + m[8] * z + m[12]) / w;\n    out[1] = (m[1] * x + m[5] * y + m[9] * z + m[13]) / w;\n    out[2] = (m[2] * x + m[6] * y + m[10] * z + m[14]) / w;\n    return out;\n}\n\n/**\n * Same as above but doesn't apply translation.\n * Useful for rays.\n */\nexport function scaleRotateMat4(out, a, m) {\n    let x = a[0],\n        y = a[1],\n        z = a[2];\n    let w = m[3] * x + m[7] * y + m[11] * z + m[15];\n    w = w || 1.0;\n    out[0] = (m[0] * x + m[4] * y + m[8] * z) / w;\n    out[1] = (m[1] * x + m[5] * y + m[9] * z) / w;\n    out[2] = (m[2] * x + m[6] * y + m[10] * z) / w;\n    return out;\n}\n\n/**\n * Transforms the vec3 with a mat3.\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the vector to transform\n * @param {mat3} m the 3x3 matrix to transform with\n * @returns {vec3} out\n */\nexport function transformMat3(out, a, m) {\n    let x = a[0],\n        y = a[1],\n        z = a[2];\n    out[0] = x * m[0] + y * m[3] + z * m[6];\n    out[1] = x * m[1] + y * m[4] + z * m[7];\n    out[2] = x * m[2] + y * m[5] + z * m[8];\n    return out;\n}\n\n/**\n * Transforms the vec3 with a quat\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the vector to transform\n * @param {quat} q quaternion to transform with\n * @returns {vec3} out\n */\nexport function transformQuat(out, a, q) {\n    // benchmarks: https://jsperf.com/quaternion-transform-vec3-implementations-fixed\n\n    let x = a[0],\n        y = a[1],\n        z = a[2];\n    let qx = q[0],\n        qy = q[1],\n        qz = q[2],\n        qw = q[3];\n\n    let uvx = qy * z - qz * y;\n    let uvy = qz * x - qx * z;\n    let uvz = qx * y - qy * x;\n\n    let uuvx = qy * uvz - qz * uvy;\n    let uuvy = qz * uvx - qx * uvz;\n    let uuvz = qx * uvy - qy * uvx;\n\n    let w2 = qw * 2;\n    uvx *= w2;\n    uvy *= w2;\n    uvz *= w2;\n\n    uuvx *= 2;\n    uuvy *= 2;\n    uuvz *= 2;\n\n    out[0] = x + uvx + uuvx;\n    out[1] = y + uvy + uuvy;\n    out[2] = z + uvz + uuvz;\n    return out;\n}\n\n/**\n * Get the angle between two 3D vectors\n * @param {vec3} a The first operand\n * @param {vec3} b The second operand\n * @returns {Number} The angle in radians\n */\nexport const angle = (function () {\n    const tempA = [0, 0, 0];\n    const tempB = [0, 0, 0];\n\n    return function (a, b) {\n        copy(tempA, a);\n        copy(tempB, b);\n\n        normalize(tempA, tempA);\n        normalize(tempB, tempB);\n\n        let cosine = dot(tempA, tempB);\n\n        if (cosine > 1.0) {\n            return 0;\n        } else if (cosine < -1.0) {\n            return Math.PI;\n        } else {\n            return Math.acos(cosine);\n        }\n    };\n})();\n\n/**\n * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\n *\n * @param {vec3} a The first vector.\n * @param {vec3} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\nexport function exactEquals(a, b) {\n    return a[0] === b[0] && a[1] === b[1] && a[2] === b[2];\n}\n","import * as Vec3Func from './functions/Vec3Func.js';\n\nexport class Vec3 extends Array {\n    constructor(x = 0, y = x, z = x) {\n        super(x, y, z);\n        return this;\n    }\n\n    get x() {\n        return this[0];\n    }\n\n    get y() {\n        return this[1];\n    }\n\n    get z() {\n        return this[2];\n    }\n\n    set x(v) {\n        this[0] = v;\n    }\n\n    set y(v) {\n        this[1] = v;\n    }\n\n    set z(v) {\n        this[2] = v;\n    }\n\n    set(x, y = x, z = x) {\n        if (x.length) return this.copy(x);\n        Vec3Func.set(this, x, y, z);\n        return this;\n    }\n\n    copy(v) {\n        Vec3Func.copy(this, v);\n        return this;\n    }\n\n    add(va, vb) {\n        if (vb) Vec3Func.add(this, va, vb);\n        else Vec3Func.add(this, this, va);\n        return this;\n    }\n\n    sub(va, vb) {\n        if (vb) Vec3Func.subtract(this, va, vb);\n        else Vec3Func.subtract(this, this, va);\n        return this;\n    }\n\n    multiply(v) {\n        if (v.length) Vec3Func.multiply(this, this, v);\n        else Vec3Func.scale(this, this, v);\n        return this;\n    }\n\n    divide(v) {\n        if (v.length) Vec3Func.divide(this, this, v);\n        else Vec3Func.scale(this, this, 1 / v);\n        return this;\n    }\n\n    inverse(v = this) {\n        Vec3Func.inverse(this, v);\n        return this;\n    }\n\n    // Can't use 'length' as Array.prototype uses it\n    len() {\n        return Vec3Func.length(this);\n    }\n\n    distance(v) {\n        if (v) return Vec3Func.distance(this, v);\n        else return Vec3Func.length(this);\n    }\n\n    squaredLen() {\n        return Vec3Func.squaredLength(this);\n    }\n\n    squaredDistance(v) {\n        if (v) return Vec3Func.squaredDistance(this, v);\n        else return Vec3Func.squaredLength(this);\n    }\n\n    negate(v = this) {\n        Vec3Func.negate(this, v);\n        return this;\n    }\n\n    cross(va, vb) {\n        if (vb) Vec3Func.cross(this, va, vb);\n        else Vec3Func.cross(this, this, va);\n        return this;\n    }\n\n    scale(v) {\n        Vec3Func.scale(this, this, v);\n        return this;\n    }\n\n    normalize() {\n        Vec3Func.normalize(this, this);\n        return this;\n    }\n\n    dot(v) {\n        return Vec3Func.dot(this, v);\n    }\n\n    equals(v) {\n        return Vec3Func.exactEquals(this, v);\n    }\n\n    applyMatrix4(mat4) {\n        Vec3Func.transformMat4(this, this, mat4);\n        return this;\n    }\n\n    scaleRotateMatrix4(mat4) {\n        Vec3Func.scaleRotateMat4(this, this, mat4);\n        return this;\n    }\n\n    applyQuaternion(q) {\n        Vec3Func.transformQuat(this, this, q);\n        return this;\n    }\n\n    angle(v) {\n        return Vec3Func.angle(this, v);\n    }\n\n    lerp(v, t) {\n        Vec3Func.lerp(this, this, v, t);\n        return this;\n    }\n\n    clone() {\n        return new Vec3(this[0], this[1], this[2]);\n    }\n\n    fromArray(a, o = 0) {\n        this[0] = a[o];\n        this[1] = a[o + 1];\n        this[2] = a[o + 2];\n        return this;\n    }\n\n    toArray(a = [], o = 0) {\n        a[o] = this[0];\n        a[o + 1] = this[1];\n        a[o + 2] = this[2];\n        return a;\n    }\n\n    transformDirection(mat4) {\n        const x = this[0];\n        const y = this[1];\n        const z = this[2];\n\n        this[0] = mat4[0] * x + mat4[4] * y + mat4[8] * z;\n        this[1] = mat4[1] * x + mat4[5] * y + mat4[9] * z;\n        this[2] = mat4[2] * x + mat4[6] * y + mat4[10] * z;\n\n        return this.normalize();\n    }\n}\n","// attribute params\n// {\n//     data - typed array eg UInt16Array for indices, Float32Array\n//     size - int default 1\n//     instanced - default null. Pass divisor amount\n//     type - gl enum default gl.UNSIGNED_SHORT for 'index', gl.FLOAT for others\n//     normalized - boolean default false\n\n//     buffer - gl buffer, if buffer exists, don't need to provide data\n//     stride - default 0 - for when passing in buffer\n//     offset - default 0 - for when passing in buffer\n//     count - default null - for when passing in buffer\n//     min - array - for when passing in buffer\n//     max - array - for when passing in buffer\n// }\n\n// TODO: fit in transform feedback\n// TODO: when would I disableVertexAttribArray ?\n// TODO: use offset/stride if exists\n\nimport { Vec3 } from '../math/Vec3.js';\n\nconst tempVec3 = new Vec3();\n\nlet ID = 1;\nlet ATTR_ID = 1;\n\n// To stop inifinite warnings\nlet isBoundsWarned = false;\n\nexport class Geometry {\n    constructor(gl, attributes = {}) {\n        if (!gl.canvas) console.error('gl not passed as first argument to Geometry');\n        this.gl = gl;\n        this.attributes = attributes;\n        this.id = ID++;\n\n        // Store one VAO per program attribute locations order\n        this.VAOs = {};\n\n        this.drawRange = { start: 0, count: 0 };\n        this.instancedCount = 0;\n\n        // Unbind current VAO so that new buffers don't get added to active mesh\n        this.gl.renderer.bindVertexArray(null);\n        this.gl.renderer.currentGeometry = null;\n\n        // Alias for state store to avoid redundant calls for global state\n        this.glState = this.gl.renderer.state;\n\n        // create the buffers\n        for (let key in attributes) {\n            this.addAttribute(key, attributes[key]);\n        }\n    }\n\n    addAttribute(key, attr) {\n        this.attributes[key] = attr;\n\n        // Set options\n        attr.id = ATTR_ID++; // TODO: currently unused, remove?\n        attr.size = attr.size || 1;\n        attr.type =\n            attr.type ||\n            (attr.data.constructor === Float32Array\n                ? this.gl.FLOAT\n                : attr.data.constructor === Uint16Array\n                ? this.gl.UNSIGNED_SHORT\n                : this.gl.UNSIGNED_INT); // Uint32Array\n        attr.target = key === 'index' ? this.gl.ELEMENT_ARRAY_BUFFER : this.gl.ARRAY_BUFFER;\n        attr.normalized = attr.normalized || false;\n        attr.stride = attr.stride || 0;\n        attr.offset = attr.offset || 0;\n        attr.count = attr.count || (attr.stride ? attr.data.byteLength / attr.stride : attr.data.length / attr.size);\n        attr.divisor = attr.instanced || 0;\n        attr.needsUpdate = false;\n\n        if (!attr.buffer) {\n            attr.buffer = this.gl.createBuffer();\n\n            // Push data to buffer\n            this.updateAttribute(attr);\n        }\n\n        // Update geometry counts. If indexed, ignore regular attributes\n        if (attr.divisor) {\n            this.isInstanced = true;\n            if (this.instancedCount && this.instancedCount !== attr.count * attr.divisor) {\n                console.warn('geometry has multiple instanced buffers of different length');\n                return (this.instancedCount = Math.min(this.instancedCount, attr.count * attr.divisor));\n            }\n            this.instancedCount = attr.count * attr.divisor;\n        } else if (key === 'index') {\n            this.drawRange.count = attr.count;\n        } else if (!this.attributes.index) {\n            this.drawRange.count = Math.max(this.drawRange.count, attr.count);\n        }\n    }\n\n    updateAttribute(attr) {\n        if (this.glState.boundBuffer !== attr.buffer) {\n            this.gl.bindBuffer(attr.target, attr.buffer);\n            this.glState.boundBuffer = attr.buffer;\n        }\n        this.gl.bufferData(attr.target, attr.data, this.gl.STATIC_DRAW);\n        attr.needsUpdate = false;\n    }\n\n    setIndex(value) {\n        this.addAttribute('index', value);\n    }\n\n    setDrawRange(start, count) {\n        this.drawRange.start = start;\n        this.drawRange.count = count;\n    }\n\n    setInstancedCount(value) {\n        this.instancedCount = value;\n    }\n\n    createVAO(program) {\n        this.VAOs[program.attributeOrder] = this.gl.renderer.createVertexArray();\n        this.gl.renderer.bindVertexArray(this.VAOs[program.attributeOrder]);\n        this.bindAttributes(program);\n    }\n\n    bindAttributes(program) {\n        // Link all attributes to program using gl.vertexAttribPointer\n        program.attributeLocations.forEach((location, { name, type }) => {\n            // If geometry missing a required shader attribute\n            if (!this.attributes[name]) {\n                console.warn(`active attribute ${name} not being supplied`);\n                return;\n            }\n\n            const attr = this.attributes[name];\n\n            this.gl.bindBuffer(attr.target, attr.buffer);\n            this.glState.boundBuffer = attr.buffer;\n\n            // For matrix attributes, buffer needs to be defined per column\n            let numLoc = 1;\n            if (type === 35674) numLoc = 2; // mat2\n            if (type === 35675) numLoc = 3; // mat3\n            if (type === 35676) numLoc = 4; // mat4\n\n            const size = attr.size / numLoc;\n            const stride = numLoc === 1 ? 0 : numLoc * numLoc * numLoc;\n            const offset = numLoc === 1 ? 0 : numLoc * numLoc;\n\n            for (let i = 0; i < numLoc; i++) {\n                this.gl.vertexAttribPointer(location + i, size, attr.type, attr.normalized, attr.stride + stride, attr.offset + i * offset);\n                this.gl.enableVertexAttribArray(location + i);\n\n                // For instanced attributes, divisor needs to be set.\n                // For firefox, need to set back to 0 if non-instanced drawn after instanced. Else won't render\n                this.gl.renderer.vertexAttribDivisor(location + i, attr.divisor);\n            }\n        });\n\n        // Bind indices if geometry indexed\n        if (this.attributes.index) this.gl.bindBuffer(this.gl.ELEMENT_ARRAY_BUFFER, this.attributes.index.buffer);\n    }\n\n    draw({ program, mode = this.gl.TRIANGLES }) {\n        if (this.gl.renderer.currentGeometry !== `${this.id}_${program.attributeOrder}`) {\n            if (!this.VAOs[program.attributeOrder]) this.createVAO(program);\n            this.gl.renderer.bindVertexArray(this.VAOs[program.attributeOrder]);\n            this.gl.renderer.currentGeometry = `${this.id}_${program.attributeOrder}`;\n        }\n\n        // Check if any attributes need updating\n        program.attributeLocations.forEach((location, { name }) => {\n            const attr = this.attributes[name];\n            if (attr.needsUpdate) this.updateAttribute(attr);\n        });\n\n        if (this.isInstanced) {\n            if (this.attributes.index) {\n                this.gl.renderer.drawElementsInstanced(\n                    mode,\n                    this.drawRange.count,\n                    this.attributes.index.type,\n                    this.attributes.index.offset + this.drawRange.start * 2,\n                    this.instancedCount\n                );\n            } else {\n                this.gl.renderer.drawArraysInstanced(mode, this.drawRange.start, this.drawRange.count, this.instancedCount);\n            }\n        } else {\n            if (this.attributes.index) {\n                this.gl.drawElements(mode, this.drawRange.count, this.attributes.index.type, this.attributes.index.offset + this.drawRange.start * 2);\n            } else {\n                this.gl.drawArrays(mode, this.drawRange.start, this.drawRange.count);\n            }\n        }\n    }\n\n    getPosition() {\n        // Use position buffer, or min/max if available\n        const attr = this.attributes.position;\n        // if (attr.min) return [...attr.min, ...attr.max];\n        if (attr.data) return attr;\n        if (isBoundsWarned) return;\n        console.warn('No position buffer data found to compute bounds');\n        return (isBoundsWarned = true);\n    }\n\n    computeBoundingBox(attr) {\n        if (!attr) attr = this.getPosition();\n        const array = attr.data;\n        const offset = attr.offset || 0;\n        const stride = attr.stride || attr.size;\n\n        if (!this.bounds) {\n            this.bounds = {\n                min: new Vec3(),\n                max: new Vec3(),\n                center: new Vec3(),\n                scale: new Vec3(),\n                radius: Infinity,\n            };\n        }\n\n        const min = this.bounds.min;\n        const max = this.bounds.max;\n        const center = this.bounds.center;\n        const scale = this.bounds.scale;\n\n        min.set(+Infinity);\n        max.set(-Infinity);\n\n        // TODO: check size of position (eg triangle with Vec2)\n        for (let i = offset, l = array.length; i < l; i += stride) {\n            const x = array[i];\n            const y = array[i + 1];\n            const z = array[i + 2];\n\n            min.x = Math.min(x, min.x);\n            min.y = Math.min(y, min.y);\n            min.z = Math.min(z, min.z);\n\n            max.x = Math.max(x, max.x);\n            max.y = Math.max(y, max.y);\n            max.z = Math.max(z, max.z);\n        }\n\n        scale.sub(max, min);\n        center.add(min, max).divide(2);\n    }\n\n    computeBoundingSphere(attr) {\n        if (!attr) attr = this.getPosition();\n        const array = attr.data;\n        const offset = attr.offset || 0;\n        const stride = attr.stride || attr.size;\n\n        if (!this.bounds) this.computeBoundingBox(attr);\n\n        let maxRadiusSq = 0;\n        for (let i = offset, l = array.length; i < l; i += stride) {\n            tempVec3.fromArray(array, i);\n            maxRadiusSq = Math.max(maxRadiusSq, this.bounds.center.squaredDistance(tempVec3));\n        }\n\n        this.bounds.radius = Math.sqrt(maxRadiusSq);\n    }\n\n    remove() {\n        for (let key in this.VAOs) {\n            this.gl.renderer.deleteVertexArray(this.VAOs[key]);\n            delete this.VAOs[key];\n        }\n        for (let key in this.attributes) {\n            this.gl.deleteBuffer(this.attributes[key].buffer);\n            delete this.attributes[key];\n        }\n    }\n}\n","// TODO: upload empty texture if null ? maybe not\n// TODO: upload identity matrix if null ?\n// TODO: sampler Cube\n\nlet ID = 1;\n\n// cache of typed arrays used to flatten uniform arrays\nconst arrayCacheF32 = {};\n\nexport class Program {\n    constructor(\n        gl,\n        {\n            vertex,\n            fragment,\n            uniforms = {},\n\n            transparent = false,\n            cullFace = gl.BACK,\n            frontFace = gl.CCW,\n            depthTest = true,\n            depthWrite = true,\n            depthFunc = gl.LESS,\n        } = {}\n    ) {\n        if (!gl.canvas) console.error('gl not passed as fist argument to Program');\n        this.gl = gl;\n        this.uniforms = uniforms;\n        this.id = ID++;\n\n        if (!vertex) console.warn('vertex shader not supplied');\n        if (!fragment) console.warn('fragment shader not supplied');\n\n        // Store program state\n        this.transparent = transparent;\n        this.cullFace = cullFace;\n        this.frontFace = frontFace;\n        this.depthTest = depthTest;\n        this.depthWrite = depthWrite;\n        this.depthFunc = depthFunc;\n        this.blendFunc = {};\n        this.blendEquation = {};\n\n        // set default blendFunc if transparent flagged\n        if (this.transparent && !this.blendFunc.src) {\n            if (this.gl.renderer.premultipliedAlpha) this.setBlendFunc(this.gl.ONE, this.gl.ONE_MINUS_SRC_ALPHA);\n            else this.setBlendFunc(this.gl.SRC_ALPHA, this.gl.ONE_MINUS_SRC_ALPHA);\n        }\n\n        // compile vertex shader and log errors\n        const vertexShader = gl.createShader(gl.VERTEX_SHADER);\n        gl.shaderSource(vertexShader, vertex);\n        gl.compileShader(vertexShader);\n        if (gl.getShaderInfoLog(vertexShader) !== '') {\n            console.warn(`${gl.getShaderInfoLog(vertexShader)}\\nVertex Shader\\n${addLineNumbers(vertex)}`);\n        }\n\n        // compile fragment shader and log errors\n        const fragmentShader = gl.createShader(gl.FRAGMENT_SHADER);\n        gl.shaderSource(fragmentShader, fragment);\n        gl.compileShader(fragmentShader);\n        if (gl.getShaderInfoLog(fragmentShader) !== '') {\n            console.warn(`${gl.getShaderInfoLog(fragmentShader)}\\nFragment Shader\\n${addLineNumbers(fragment)}`);\n        }\n\n        // compile program and log errors\n        this.program = gl.createProgram();\n        gl.attachShader(this.program, vertexShader);\n        gl.attachShader(this.program, fragmentShader);\n        gl.linkProgram(this.program);\n        if (!gl.getProgramParameter(this.program, gl.LINK_STATUS)) {\n            return console.warn(gl.getProgramInfoLog(this.program));\n        }\n\n        // Remove shader once linked\n        gl.deleteShader(vertexShader);\n        gl.deleteShader(fragmentShader);\n\n        // Get active uniform locations\n        this.uniformLocations = new Map();\n        let numUniforms = gl.getProgramParameter(this.program, gl.ACTIVE_UNIFORMS);\n        for (let uIndex = 0; uIndex < numUniforms; uIndex++) {\n            let uniform = gl.getActiveUniform(this.program, uIndex);\n            this.uniformLocations.set(uniform, gl.getUniformLocation(this.program, uniform.name));\n\n            // split uniforms' names to separate array and struct declarations\n            const split = uniform.name.match(/(\\w+)/g);\n\n            uniform.uniformName = split[0];\n\n            if (split.length === 3) {\n                uniform.isStructArray = true;\n                uniform.structIndex = Number(split[1]);\n                uniform.structProperty = split[2];\n            } else if (split.length === 2 && isNaN(Number(split[1]))) {\n                uniform.isStruct = true;\n                uniform.structProperty = split[1];\n            }\n        }\n\n        // Get active attribute locations\n        this.attributeLocations = new Map();\n        const locations = [];\n        const numAttribs = gl.getProgramParameter(this.program, gl.ACTIVE_ATTRIBUTES);\n        for (let aIndex = 0; aIndex < numAttribs; aIndex++) {\n            const attribute = gl.getActiveAttrib(this.program, aIndex);\n            const location = gl.getAttribLocation(this.program, attribute.name);\n            locations[location] = attribute.name;\n            this.attributeLocations.set(attribute, location);\n        }\n        this.attributeOrder = locations.join('');\n    }\n\n    setBlendFunc(src, dst, srcAlpha, dstAlpha) {\n        this.blendFunc.src = src;\n        this.blendFunc.dst = dst;\n        this.blendFunc.srcAlpha = srcAlpha;\n        this.blendFunc.dstAlpha = dstAlpha;\n        if (src) this.transparent = true;\n    }\n\n    setBlendEquation(modeRGB, modeAlpha) {\n        this.blendEquation.modeRGB = modeRGB;\n        this.blendEquation.modeAlpha = modeAlpha;\n    }\n\n    applyState() {\n        if (this.depthTest) this.gl.renderer.enable(this.gl.DEPTH_TEST);\n        else this.gl.renderer.disable(this.gl.DEPTH_TEST);\n\n        if (this.cullFace) this.gl.renderer.enable(this.gl.CULL_FACE);\n        else this.gl.renderer.disable(this.gl.CULL_FACE);\n\n        if (this.blendFunc.src) this.gl.renderer.enable(this.gl.BLEND);\n        else this.gl.renderer.disable(this.gl.BLEND);\n\n        if (this.cullFace) this.gl.renderer.setCullFace(this.cullFace);\n        this.gl.renderer.setFrontFace(this.frontFace);\n        this.gl.renderer.setDepthMask(this.depthWrite);\n        this.gl.renderer.setDepthFunc(this.depthFunc);\n        if (this.blendFunc.src)\n            this.gl.renderer.setBlendFunc(this.blendFunc.src, this.blendFunc.dst, this.blendFunc.srcAlpha, this.blendFunc.dstAlpha);\n        this.gl.renderer.setBlendEquation(this.blendEquation.modeRGB, this.blendEquation.modeAlpha);\n    }\n\n    use({ flipFaces = false } = {}) {\n        let textureUnit = -1;\n        const programActive = this.gl.renderer.currentProgram === this.id;\n\n        // Avoid gl call if program already in use\n        if (!programActive) {\n            this.gl.useProgram(this.program);\n            this.gl.renderer.currentProgram = this.id;\n        }\n\n        // Set only the active uniforms found in the shader\n        this.uniformLocations.forEach((location, activeUniform) => {\n            let name = activeUniform.uniformName;\n\n            // get supplied uniform\n            let uniform = this.uniforms[name];\n\n            // For structs, get the specific property instead of the entire object\n            if (activeUniform.isStruct) {\n                uniform = uniform[activeUniform.structProperty];\n                name += `.${activeUniform.structProperty}`;\n            }\n            if (activeUniform.isStructArray) {\n                uniform = uniform[activeUniform.structIndex][activeUniform.structProperty];\n                name += `[${activeUniform.structIndex}].${activeUniform.structProperty}`;\n            }\n\n            if (!uniform) {\n                return warn(`Active uniform ${name} has not been supplied`);\n            }\n\n            if (uniform && uniform.value === undefined) {\n                return warn(`${name} uniform is missing a value parameter`);\n            }\n\n            if (uniform.value.texture) {\n                textureUnit = textureUnit + 1;\n\n                // Check if texture needs to be updated\n                uniform.value.update(textureUnit);\n                return setUniform(this.gl, activeUniform.type, location, textureUnit);\n            }\n\n            // For texture arrays, set uniform as an array of texture units instead of just one\n            if (uniform.value.length && uniform.value[0].texture) {\n                const textureUnits = [];\n                uniform.value.forEach((value) => {\n                    textureUnit = textureUnit + 1;\n                    value.update(textureUnit);\n                    textureUnits.push(textureUnit);\n                });\n\n                return setUniform(this.gl, activeUniform.type, location, textureUnits);\n            }\n\n            setUniform(this.gl, activeUniform.type, location, uniform.value);\n        });\n\n        this.applyState();\n        if (flipFaces) this.gl.renderer.setFrontFace(this.frontFace === this.gl.CCW ? this.gl.CW : this.gl.CCW);\n    }\n\n    remove() {\n        this.gl.deleteProgram(this.program);\n    }\n}\n\nfunction setUniform(gl, type, location, value) {\n    value = value.length ? flatten(value) : value;\n    const setValue = gl.renderer.state.uniformLocations.get(location);\n\n    // Avoid redundant uniform commands\n    if (value.length) {\n        if (setValue === undefined || setValue.length !== value.length) {\n            // clone array to store as cache\n            gl.renderer.state.uniformLocations.set(location, value.slice(0));\n        } else {\n            if (arraysEqual(setValue, value)) return;\n\n            // Update cached array values\n            setValue.set ? setValue.set(value) : setArray(setValue, value);\n            gl.renderer.state.uniformLocations.set(location, setValue);\n        }\n    } else {\n        if (setValue === value) return;\n        gl.renderer.state.uniformLocations.set(location, value);\n    }\n\n    switch (type) {\n        case 5126:\n            return value.length ? gl.uniform1fv(location, value) : gl.uniform1f(location, value); // FLOAT\n        case 35664:\n            return gl.uniform2fv(location, value); // FLOAT_VEC2\n        case 35665:\n            return gl.uniform3fv(location, value); // FLOAT_VEC3\n        case 35666:\n            return gl.uniform4fv(location, value); // FLOAT_VEC4\n        case 35670: // BOOL\n        case 5124: // INT\n        case 35678: // SAMPLER_2D\n        case 35680:\n            return value.length ? gl.uniform1iv(location, value) : gl.uniform1i(location, value); // SAMPLER_CUBE\n        case 35671: // BOOL_VEC2\n        case 35667:\n            return gl.uniform2iv(location, value); // INT_VEC2\n        case 35672: // BOOL_VEC3\n        case 35668:\n            return gl.uniform3iv(location, value); // INT_VEC3\n        case 35673: // BOOL_VEC4\n        case 35669:\n            return gl.uniform4iv(location, value); // INT_VEC4\n        case 35674:\n            return gl.uniformMatrix2fv(location, false, value); // FLOAT_MAT2\n        case 35675:\n            return gl.uniformMatrix3fv(location, false, value); // FLOAT_MAT3\n        case 35676:\n            return gl.uniformMatrix4fv(location, false, value); // FLOAT_MAT4\n    }\n}\n\nfunction addLineNumbers(string) {\n    let lines = string.split('\\n');\n    for (let i = 0; i < lines.length; i++) {\n        lines[i] = i + 1 + ': ' + lines[i];\n    }\n    return lines.join('\\n');\n}\n\nfunction flatten(a) {\n    const arrayLen = a.length;\n    const valueLen = a[0].length;\n    if (valueLen === undefined) return a;\n    const length = arrayLen * valueLen;\n    let value = arrayCacheF32[length];\n    if (!value) arrayCacheF32[length] = value = new Float32Array(length);\n    for (let i = 0; i < arrayLen; i++) value.set(a[i], i * valueLen);\n    return value;\n}\n\nfunction arraysEqual(a, b) {\n    if (a.length !== b.length) return false;\n    for (let i = 0, l = a.length; i < l; i++) {\n        if (a[i] !== b[i]) return false;\n    }\n    return true;\n}\n\nfunction setArray(a, b) {\n    for (let i = 0, l = a.length; i < l; i++) {\n        a[i] = b[i];\n    }\n}\n\nlet warnCount = 0;\nfunction warn(message) {\n    if (warnCount > 100) return;\n    console.warn(message);\n    warnCount++;\n    if (warnCount > 100) console.warn('More than 100 program warnings - stopping logs.');\n}\n","import { Vec3 } from '../math/Vec3.js';\n\n// TODO: Handle context loss https://www.khronos.org/webgl/wiki/HandlingContextLost\n\n// Not automatic - devs to use these methods manually\n// gl.colorMask( colorMask, colorMask, colorMask, colorMask );\n// gl.clearColor( r, g, b, a );\n// gl.stencilMask( stencilMask );\n// gl.stencilFunc( stencilFunc, stencilRef, stencilMask );\n// gl.stencilOp( stencilFail, stencilZFail, stencilZPass );\n// gl.clearStencil( stencil );\n\nconst tempVec3 = new Vec3();\nlet ID = 1;\n\nexport class Renderer {\n    constructor({\n        canvas = document.createElement('canvas'),\n        width = 300,\n        height = 150,\n        dpr = 1,\n        alpha = false,\n        depth = true,\n        stencil = false,\n        antialias = false,\n        premultipliedAlpha = false,\n        preserveDrawingBuffer = false,\n        powerPreference = 'default',\n        autoClear = true,\n        webgl = 2,\n    } = {}) {\n        const attributes = { alpha, depth, stencil, antialias, premultipliedAlpha, preserveDrawingBuffer, powerPreference };\n        this.dpr = dpr;\n        this.alpha = alpha;\n        this.color = true;\n        this.depth = depth;\n        this.stencil = stencil;\n        this.premultipliedAlpha = premultipliedAlpha;\n        this.autoClear = autoClear;\n        this.id = ID++;\n\n        // Attempt WebGL2 unless forced to 1, if not supported fallback to WebGL1\n        if (webgl === 2) this.gl = canvas.getContext('webgl2', attributes);\n        this.isWebgl2 = !!this.gl;\n        if (!this.gl) {\n            this.gl = canvas.getContext('webgl', attributes) || canvas.getContext('experimental-webgl', attributes);\n        }\n        if (!this.gl) console.error('unable to create webgl context');\n\n        // Attach renderer to gl so that all classes have access to internal state functions\n        this.gl.renderer = this;\n\n        // initialise size values\n        this.setSize(width, height);\n\n        // gl state stores to avoid redundant calls on methods used internally\n        this.state = {};\n        this.state.blendFunc = { src: this.gl.ONE, dst: this.gl.ZERO };\n        this.state.blendEquation = { modeRGB: this.gl.FUNC_ADD };\n        this.state.cullFace = null;\n        this.state.frontFace = this.gl.CCW;\n        this.state.depthMask = true;\n        this.state.depthFunc = this.gl.LESS;\n        this.state.premultiplyAlpha = false;\n        this.state.flipY = false;\n        this.state.unpackAlignment = 4;\n        this.state.framebuffer = null;\n        this.state.viewport = { width: null, height: null };\n        this.state.textureUnits = [];\n        this.state.activeTextureUnit = 0;\n        this.state.boundBuffer = null;\n        this.state.uniformLocations = new Map();\n\n        // store requested extensions\n        this.extensions = {};\n\n        // Initialise extra format types\n        if (this.isWebgl2) {\n            this.getExtension('EXT_color_buffer_float');\n            this.getExtension('OES_texture_float_linear');\n        } else {\n            this.getExtension('OES_texture_float');\n            this.getExtension('OES_texture_float_linear');\n            this.getExtension('OES_texture_half_float');\n            this.getExtension('OES_texture_half_float_linear');\n            this.getExtension('OES_element_index_uint');\n            this.getExtension('OES_standard_derivatives');\n            this.getExtension('EXT_sRGB');\n            this.getExtension('WEBGL_depth_texture');\n            this.getExtension('WEBGL_draw_buffers');\n        }\n\n        // Create method aliases using extension (WebGL1) or native if available (WebGL2)\n        this.vertexAttribDivisor = this.getExtension('ANGLE_instanced_arrays', 'vertexAttribDivisor', 'vertexAttribDivisorANGLE');\n        this.drawArraysInstanced = this.getExtension('ANGLE_instanced_arrays', 'drawArraysInstanced', 'drawArraysInstancedANGLE');\n        this.drawElementsInstanced = this.getExtension('ANGLE_instanced_arrays', 'drawElementsInstanced', 'drawElementsInstancedANGLE');\n        this.createVertexArray = this.getExtension('OES_vertex_array_object', 'createVertexArray', 'createVertexArrayOES');\n        this.bindVertexArray = this.getExtension('OES_vertex_array_object', 'bindVertexArray', 'bindVertexArrayOES');\n        this.deleteVertexArray = this.getExtension('OES_vertex_array_object', 'deleteVertexArray', 'deleteVertexArrayOES');\n        this.drawBuffers = this.getExtension('WEBGL_draw_buffers', 'drawBuffers', 'drawBuffersWEBGL');\n\n        // Store device parameters\n        this.parameters = {};\n        this.parameters.maxTextureUnits = this.gl.getParameter(this.gl.MAX_COMBINED_TEXTURE_IMAGE_UNITS);\n        this.parameters.maxAnisotropy = this.getExtension('EXT_texture_filter_anisotropic')\n            ? this.gl.getParameter(this.getExtension('EXT_texture_filter_anisotropic').MAX_TEXTURE_MAX_ANISOTROPY_EXT)\n            : 0;\n    }\n\n    setSize(width, height) {\n        this.width = width;\n        this.height = height;\n\n        this.gl.canvas.width = width * this.dpr;\n        this.gl.canvas.height = height * this.dpr;\n\n        Object.assign(this.gl.canvas.style, {\n            width: width + 'px',\n            height: height + 'px',\n        });\n    }\n\n    setViewport(width, height) {\n        if (this.state.viewport.width === width && this.state.viewport.height === height) return;\n        this.state.viewport.width = width;\n        this.state.viewport.height = height;\n        this.gl.viewport(0, 0, width, height);\n    }\n\n    enable(id) {\n        if (this.state[id] === true) return;\n        this.gl.enable(id);\n        this.state[id] = true;\n    }\n\n    disable(id) {\n        if (this.state[id] === false) return;\n        this.gl.disable(id);\n        this.state[id] = false;\n    }\n\n    setBlendFunc(src, dst, srcAlpha, dstAlpha) {\n        if (\n            this.state.blendFunc.src === src &&\n            this.state.blendFunc.dst === dst &&\n            this.state.blendFunc.srcAlpha === srcAlpha &&\n            this.state.blendFunc.dstAlpha === dstAlpha\n        )\n            return;\n        this.state.blendFunc.src = src;\n        this.state.blendFunc.dst = dst;\n        this.state.blendFunc.srcAlpha = srcAlpha;\n        this.state.blendFunc.dstAlpha = dstAlpha;\n        if (srcAlpha !== undefined) this.gl.blendFuncSeparate(src, dst, srcAlpha, dstAlpha);\n        else this.gl.blendFunc(src, dst);\n    }\n\n    setBlendEquation(modeRGB, modeAlpha) {\n        modeRGB = modeRGB || this.gl.FUNC_ADD;\n        if (this.state.blendEquation.modeRGB === modeRGB && this.state.blendEquation.modeAlpha === modeAlpha) return;\n        this.state.blendEquation.modeRGB = modeRGB;\n        this.state.blendEquation.modeAlpha = modeAlpha;\n        if (modeAlpha !== undefined) this.gl.blendEquationSeparate(modeRGB, modeAlpha);\n        else this.gl.blendEquation(modeRGB);\n    }\n\n    setCullFace(value) {\n        if (this.state.cullFace === value) return;\n        this.state.cullFace = value;\n        this.gl.cullFace(value);\n    }\n\n    setFrontFace(value) {\n        if (this.state.frontFace === value) return;\n        this.state.frontFace = value;\n        this.gl.frontFace(value);\n    }\n\n    setDepthMask(value) {\n        if (this.state.depthMask === value) return;\n        this.state.depthMask = value;\n        this.gl.depthMask(value);\n    }\n\n    setDepthFunc(value) {\n        if (this.state.depthFunc === value) return;\n        this.state.depthFunc = value;\n        this.gl.depthFunc(value);\n    }\n\n    activeTexture(value) {\n        if (this.state.activeTextureUnit === value) return;\n        this.state.activeTextureUnit = value;\n        this.gl.activeTexture(this.gl.TEXTURE0 + value);\n    }\n\n    bindFramebuffer({ target = this.gl.FRAMEBUFFER, buffer = null } = {}) {\n        if (this.state.framebuffer === buffer) return;\n        this.state.framebuffer = buffer;\n        this.gl.bindFramebuffer(target, buffer);\n    }\n\n    getExtension(extension, webgl2Func, extFunc) {\n        // if webgl2 function supported, return func bound to gl context\n        if (webgl2Func && this.gl[webgl2Func]) return this.gl[webgl2Func].bind(this.gl);\n\n        // fetch extension once only\n        if (!this.extensions[extension]) {\n            this.extensions[extension] = this.gl.getExtension(extension);\n        }\n\n        // return extension if no function requested\n        if (!webgl2Func) return this.extensions[extension];\n\n        // Return null if extension not supported\n        if (!this.extensions[extension]) return null;\n\n        // return extension function, bound to extension\n        return this.extensions[extension][extFunc].bind(this.extensions[extension]);\n    }\n\n    sortOpaque(a, b) {\n        if (a.renderOrder !== b.renderOrder) {\n            return a.renderOrder - b.renderOrder;\n        } else if (a.program.id !== b.program.id) {\n            return a.program.id - b.program.id;\n        } else if (a.zDepth !== b.zDepth) {\n            return a.zDepth - b.zDepth;\n        } else {\n            return b.id - a.id;\n        }\n    }\n\n    sortTransparent(a, b) {\n        if (a.renderOrder !== b.renderOrder) {\n            return a.renderOrder - b.renderOrder;\n        }\n        if (a.zDepth !== b.zDepth) {\n            return b.zDepth - a.zDepth;\n        } else {\n            return b.id - a.id;\n        }\n    }\n\n    sortUI(a, b) {\n        if (a.renderOrder !== b.renderOrder) {\n            return a.renderOrder - b.renderOrder;\n        } else if (a.program.id !== b.program.id) {\n            return a.program.id - b.program.id;\n        } else {\n            return b.id - a.id;\n        }\n    }\n\n    getRenderList({ scene, camera, frustumCull, sort }) {\n        let renderList = [];\n\n        if (camera && frustumCull) camera.updateFrustum();\n\n        // Get visible\n        scene.traverse((node) => {\n            if (!node.visible) return true;\n            if (!node.draw) return;\n\n            if (frustumCull && node.frustumCulled && camera) {\n                if (!camera.frustumIntersectsMesh(node)) return;\n            }\n\n            renderList.push(node);\n        });\n\n        if (sort) {\n            const opaque = [];\n            const transparent = []; // depthTest true\n            const ui = []; // depthTest false\n\n            renderList.forEach((node) => {\n                // Split into the 3 render groups\n                if (!node.program.transparent) {\n                    opaque.push(node);\n                } else if (node.program.depthTest) {\n                    transparent.push(node);\n                } else {\n                    ui.push(node);\n                }\n\n                node.zDepth = 0;\n\n                // Only calculate z-depth if renderOrder unset and depthTest is true\n                if (node.renderOrder !== 0 || !node.program.depthTest || !camera) return;\n\n                // update z-depth\n                node.worldMatrix.getTranslation(tempVec3);\n                tempVec3.applyMatrix4(camera.projectionViewMatrix);\n                node.zDepth = tempVec3.z;\n            });\n\n            opaque.sort(this.sortOpaque);\n            transparent.sort(this.sortTransparent);\n            ui.sort(this.sortUI);\n\n            renderList = opaque.concat(transparent, ui);\n        }\n\n        return renderList;\n    }\n\n    render({ scene, camera, target = null, update = true, sort = true, frustumCull = true, clear }) {\n        if (target === null) {\n            // make sure no render target bound so draws to canvas\n            this.bindFramebuffer();\n            this.setViewport(this.width * this.dpr, this.height * this.dpr);\n        } else {\n            // bind supplied render target and update viewport\n            this.bindFramebuffer(target);\n            this.setViewport(target.width, target.height);\n        }\n\n        if (clear || (this.autoClear && clear !== false)) {\n            // Ensure depth buffer writing is enabled so it can be cleared\n            if (this.depth && (!target || target.depth)) {\n                this.enable(this.gl.DEPTH_TEST);\n                this.setDepthMask(true);\n            }\n            this.gl.clear(\n                (this.color ? this.gl.COLOR_BUFFER_BIT : 0) |\n                    (this.depth ? this.gl.DEPTH_BUFFER_BIT : 0) |\n                    (this.stencil ? this.gl.STENCIL_BUFFER_BIT : 0)\n            );\n        }\n\n        // updates all scene graph matrices\n        if (update) scene.updateMatrixWorld();\n\n        // Update camera separately, in case not in scene graph\n        if (camera) camera.updateMatrixWorld();\n\n        // Get render list - entails culling and sorting\n        const renderList = this.getRenderList({ scene, camera, frustumCull, sort });\n\n        renderList.forEach((node) => {\n            node.draw({ camera });\n        });\n    }\n}\n","const EPSILON = 0.000001;\n\n/**\n * Copy the values from one vec4 to another\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the source vector\n * @returns {vec4} out\n */\nexport function copy(out, a) {\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    return out;\n}\n\n/**\n * Set the components of a vec4 to the given values\n *\n * @param {vec4} out the receiving vector\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @param {Number} w W component\n * @returns {vec4} out\n */\nexport function set(out, x, y, z, w) {\n    out[0] = x;\n    out[1] = y;\n    out[2] = z;\n    out[3] = w;\n    return out;\n}\n\n/**\n * Adds two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @returns {vec4} out\n */\nexport function add(out, a, b) {\n    out[0] = a[0] + b[0];\n    out[1] = a[1] + b[1];\n    out[2] = a[2] + b[2];\n    out[3] = a[3] + b[3];\n    return out;\n}\n\n/**\n * Scales a vec4 by a scalar number\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {vec4} out\n */\nexport function scale(out, a, b) {\n    out[0] = a[0] * b;\n    out[1] = a[1] * b;\n    out[2] = a[2] * b;\n    out[3] = a[3] * b;\n    return out;\n}\n\n/**\n * Calculates the length of a vec4\n *\n * @param {vec4} a vector to calculate length of\n * @returns {Number} length of a\n */\nexport function length(a) {\n    let x = a[0];\n    let y = a[1];\n    let z = a[2];\n    let w = a[3];\n    return Math.sqrt(x * x + y * y + z * z + w * w);\n}\n\n/**\n * Normalize a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a vector to normalize\n * @returns {vec4} out\n */\nexport function normalize(out, a) {\n    let x = a[0];\n    let y = a[1];\n    let z = a[2];\n    let w = a[3];\n    let len = x * x + y * y + z * z + w * w;\n    if (len > 0) {\n        len = 1 / Math.sqrt(len);\n    }\n    out[0] = x * len;\n    out[1] = y * len;\n    out[2] = z * len;\n    out[3] = w * len;\n    return out;\n}\n\n/**\n * Calculates the dot product of two vec4's\n *\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @returns {Number} dot product of a and b\n */\nexport function dot(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n}\n\n/**\n * Performs a linear interpolation between two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @param {Number} t interpolation amount between the two inputs\n * @returns {vec4} out\n */\nexport function lerp(out, a, b, t) {\n    let ax = a[0];\n    let ay = a[1];\n    let az = a[2];\n    let aw = a[3];\n    out[0] = ax + t * (b[0] - ax);\n    out[1] = ay + t * (b[1] - ay);\n    out[2] = az + t * (b[2] - az);\n    out[3] = aw + t * (b[3] - aw);\n    return out;\n}\n","import * as vec4 from './Vec4Func.js';\n\n/**\n * Set a quat to the identity quaternion\n *\n * @param {quat} out the receiving quaternion\n * @returns {quat} out\n */\nexport function identity(out) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 1;\n    return out;\n}\n\n/**\n * Sets a quat from the given angle and rotation axis,\n * then returns it.\n *\n * @param {quat} out the receiving quaternion\n * @param {vec3} axis the axis around which to rotate\n * @param {Number} rad the angle in radians\n * @returns {quat} out\n **/\nexport function setAxisAngle(out, axis, rad) {\n    rad = rad * 0.5;\n    let s = Math.sin(rad);\n    out[0] = s * axis[0];\n    out[1] = s * axis[1];\n    out[2] = s * axis[2];\n    out[3] = Math.cos(rad);\n    return out;\n}\n\n/**\n * Multiplies two quats\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a the first operand\n * @param {quat} b the second operand\n * @returns {quat} out\n */\nexport function multiply(out, a, b) {\n    let ax = a[0],\n        ay = a[1],\n        az = a[2],\n        aw = a[3];\n    let bx = b[0],\n        by = b[1],\n        bz = b[2],\n        bw = b[3];\n\n    out[0] = ax * bw + aw * bx + ay * bz - az * by;\n    out[1] = ay * bw + aw * by + az * bx - ax * bz;\n    out[2] = az * bw + aw * bz + ax * by - ay * bx;\n    out[3] = aw * bw - ax * bx - ay * by - az * bz;\n    return out;\n}\n\n/**\n * Rotates a quaternion by the given angle about the X axis\n *\n * @param {quat} out quat receiving operation result\n * @param {quat} a quat to rotate\n * @param {number} rad angle (in radians) to rotate\n * @returns {quat} out\n */\nexport function rotateX(out, a, rad) {\n    rad *= 0.5;\n\n    let ax = a[0],\n        ay = a[1],\n        az = a[2],\n        aw = a[3];\n    let bx = Math.sin(rad),\n        bw = Math.cos(rad);\n\n    out[0] = ax * bw + aw * bx;\n    out[1] = ay * bw + az * bx;\n    out[2] = az * bw - ay * bx;\n    out[3] = aw * bw - ax * bx;\n    return out;\n}\n\n/**\n * Rotates a quaternion by the given angle about the Y axis\n *\n * @param {quat} out quat receiving operation result\n * @param {quat} a quat to rotate\n * @param {number} rad angle (in radians) to rotate\n * @returns {quat} out\n */\nexport function rotateY(out, a, rad) {\n    rad *= 0.5;\n\n    let ax = a[0],\n        ay = a[1],\n        az = a[2],\n        aw = a[3];\n    let by = Math.sin(rad),\n        bw = Math.cos(rad);\n\n    out[0] = ax * bw - az * by;\n    out[1] = ay * bw + aw * by;\n    out[2] = az * bw + ax * by;\n    out[3] = aw * bw - ay * by;\n    return out;\n}\n\n/**\n * Rotates a quaternion by the given angle about the Z axis\n *\n * @param {quat} out quat receiving operation result\n * @param {quat} a quat to rotate\n * @param {number} rad angle (in radians) to rotate\n * @returns {quat} out\n */\nexport function rotateZ(out, a, rad) {\n    rad *= 0.5;\n\n    let ax = a[0],\n        ay = a[1],\n        az = a[2],\n        aw = a[3];\n    let bz = Math.sin(rad),\n        bw = Math.cos(rad);\n\n    out[0] = ax * bw + ay * bz;\n    out[1] = ay * bw - ax * bz;\n    out[2] = az * bw + aw * bz;\n    out[3] = aw * bw - az * bz;\n    return out;\n}\n\n/**\n * Performs a spherical linear interpolation between two quat\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a the first operand\n * @param {quat} b the second operand\n * @param {Number} t interpolation amount between the two inputs\n * @returns {quat} out\n */\nexport function slerp(out, a, b, t) {\n    // benchmarks:\n    //    http://jsperf.com/quaternion-slerp-implementations\n    let ax = a[0],\n        ay = a[1],\n        az = a[2],\n        aw = a[3];\n    let bx = b[0],\n        by = b[1],\n        bz = b[2],\n        bw = b[3];\n\n    let omega, cosom, sinom, scale0, scale1;\n\n    // calc cosine\n    cosom = ax * bx + ay * by + az * bz + aw * bw;\n    // adjust signs (if necessary)\n    if (cosom < 0.0) {\n        cosom = -cosom;\n        bx = -bx;\n        by = -by;\n        bz = -bz;\n        bw = -bw;\n    }\n    // calculate coefficients\n    if (1.0 - cosom > 0.000001) {\n        // standard case (slerp)\n        omega = Math.acos(cosom);\n        sinom = Math.sin(omega);\n        scale0 = Math.sin((1.0 - t) * omega) / sinom;\n        scale1 = Math.sin(t * omega) / sinom;\n    } else {\n        // \"from\" and \"to\" quaternions are very close\n        //  ... so we can do a linear interpolation\n        scale0 = 1.0 - t;\n        scale1 = t;\n    }\n    // calculate final values\n    out[0] = scale0 * ax + scale1 * bx;\n    out[1] = scale0 * ay + scale1 * by;\n    out[2] = scale0 * az + scale1 * bz;\n    out[3] = scale0 * aw + scale1 * bw;\n\n    return out;\n}\n\n/**\n * Calculates the inverse of a quat\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a quat to calculate inverse of\n * @returns {quat} out\n */\nexport function invert(out, a) {\n    let a0 = a[0],\n        a1 = a[1],\n        a2 = a[2],\n        a3 = a[3];\n    let dot = a0 * a0 + a1 * a1 + a2 * a2 + a3 * a3;\n    let invDot = dot ? 1.0 / dot : 0;\n\n    // TODO: Would be faster to return [0,0,0,0] immediately if dot == 0\n\n    out[0] = -a0 * invDot;\n    out[1] = -a1 * invDot;\n    out[2] = -a2 * invDot;\n    out[3] = a3 * invDot;\n    return out;\n}\n\n/**\n * Calculates the conjugate of a quat\n * If the quaternion is normalized, this function is faster than quat.inverse and produces the same result.\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a quat to calculate conjugate of\n * @returns {quat} out\n */\nexport function conjugate(out, a) {\n    out[0] = -a[0];\n    out[1] = -a[1];\n    out[2] = -a[2];\n    out[3] = a[3];\n    return out;\n}\n\n/**\n * Creates a quaternion from the given 3x3 rotation matrix.\n *\n * NOTE: The resultant quaternion is not normalized, so you should be sure\n * to renormalize the quaternion yourself where necessary.\n *\n * @param {quat} out the receiving quaternion\n * @param {mat3} m rotation matrix\n * @returns {quat} out\n * @function\n */\nexport function fromMat3(out, m) {\n    // Algorithm in Ken Shoemake's article in 1987 SIGGRAPH course notes\n    // article \"Quaternion Calculus and Fast Animation\".\n    let fTrace = m[0] + m[4] + m[8];\n    let fRoot;\n\n    if (fTrace > 0.0) {\n        // |w| > 1/2, may as well choose w > 1/2\n        fRoot = Math.sqrt(fTrace + 1.0); // 2w\n        out[3] = 0.5 * fRoot;\n        fRoot = 0.5 / fRoot; // 1/(4w)\n        out[0] = (m[5] - m[7]) * fRoot;\n        out[1] = (m[6] - m[2]) * fRoot;\n        out[2] = (m[1] - m[3]) * fRoot;\n    } else {\n        // |w| <= 1/2\n        let i = 0;\n        if (m[4] > m[0]) i = 1;\n        if (m[8] > m[i * 3 + i]) i = 2;\n        let j = (i + 1) % 3;\n        let k = (i + 2) % 3;\n\n        fRoot = Math.sqrt(m[i * 3 + i] - m[j * 3 + j] - m[k * 3 + k] + 1.0);\n        out[i] = 0.5 * fRoot;\n        fRoot = 0.5 / fRoot;\n        out[3] = (m[j * 3 + k] - m[k * 3 + j]) * fRoot;\n        out[j] = (m[j * 3 + i] + m[i * 3 + j]) * fRoot;\n        out[k] = (m[k * 3 + i] + m[i * 3 + k]) * fRoot;\n    }\n\n    return out;\n}\n\n/**\n * Creates a quaternion from the given euler angle x, y, z.\n *\n * @param {quat} out the receiving quaternion\n * @param {vec3} euler Angles to rotate around each axis in degrees.\n * @param {String} order detailing order of operations. Default 'XYZ'.\n * @returns {quat} out\n * @function\n */\nexport function fromEuler(out, euler, order = 'YXZ') {\n    let sx = Math.sin(euler[0] * 0.5);\n    let cx = Math.cos(euler[0] * 0.5);\n    let sy = Math.sin(euler[1] * 0.5);\n    let cy = Math.cos(euler[1] * 0.5);\n    let sz = Math.sin(euler[2] * 0.5);\n    let cz = Math.cos(euler[2] * 0.5);\n\n    if (order === 'XYZ') {\n        out[0] = sx * cy * cz + cx * sy * sz;\n        out[1] = cx * sy * cz - sx * cy * sz;\n        out[2] = cx * cy * sz + sx * sy * cz;\n        out[3] = cx * cy * cz - sx * sy * sz;\n    } else if (order === 'YXZ') {\n        out[0] = sx * cy * cz + cx * sy * sz;\n        out[1] = cx * sy * cz - sx * cy * sz;\n        out[2] = cx * cy * sz - sx * sy * cz;\n        out[3] = cx * cy * cz + sx * sy * sz;\n    } else if (order === 'ZXY') {\n        out[0] = sx * cy * cz - cx * sy * sz;\n        out[1] = cx * sy * cz + sx * cy * sz;\n        out[2] = cx * cy * sz + sx * sy * cz;\n        out[3] = cx * cy * cz - sx * sy * sz;\n    } else if (order === 'ZYX') {\n        out[0] = sx * cy * cz - cx * sy * sz;\n        out[1] = cx * sy * cz + sx * cy * sz;\n        out[2] = cx * cy * sz - sx * sy * cz;\n        out[3] = cx * cy * cz + sx * sy * sz;\n    } else if (order === 'YZX') {\n        out[0] = sx * cy * cz + cx * sy * sz;\n        out[1] = cx * sy * cz + sx * cy * sz;\n        out[2] = cx * cy * sz - sx * sy * cz;\n        out[3] = cx * cy * cz - sx * sy * sz;\n    } else if (order === 'XZY') {\n        out[0] = sx * cy * cz - cx * sy * sz;\n        out[1] = cx * sy * cz - sx * cy * sz;\n        out[2] = cx * cy * sz + sx * sy * cz;\n        out[3] = cx * cy * cz + sx * sy * sz;\n    }\n\n    return out;\n}\n\n/**\n * Copy the values from one quat to another\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a the source quaternion\n * @returns {quat} out\n * @function\n */\nexport const copy = vec4.copy;\n\n/**\n * Set the components of a quat to the given values\n *\n * @param {quat} out the receiving quaternion\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @param {Number} w W component\n * @returns {quat} out\n * @function\n */\nexport const set = vec4.set;\n\n/**\n * Adds two quat's\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a the first operand\n * @param {quat} b the second operand\n * @returns {quat} out\n * @function\n */\nexport const add = vec4.add;\n\n/**\n * Scales a quat by a scalar number\n *\n * @param {quat} out the receiving vector\n * @param {quat} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {quat} out\n * @function\n */\nexport const scale = vec4.scale;\n\n/**\n * Calculates the dot product of two quat's\n *\n * @param {quat} a the first operand\n * @param {quat} b the second operand\n * @returns {Number} dot product of a and b\n * @function\n */\nexport const dot = vec4.dot;\n\n/**\n * Performs a linear interpolation between two quat's\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a the first operand\n * @param {quat} b the second operand\n * @param {Number} t interpolation amount between the two inputs\n * @returns {quat} out\n * @function\n */\nexport const lerp = vec4.lerp;\n\n/**\n * Calculates the length of a quat\n *\n * @param {quat} a vector to calculate length of\n * @returns {Number} length of a\n */\nexport const length = vec4.length;\n\n/**\n * Normalize a quat\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a quaternion to normalize\n * @returns {quat} out\n * @function\n */\nexport const normalize = vec4.normalize;\n","import * as QuatFunc from './functions/QuatFunc.js';\n\nexport class Quat extends Array {\n    constructor(x = 0, y = 0, z = 0, w = 1) {\n        super(x, y, z, w);\n        this.onChange = () => {};\n        return this;\n    }\n\n    get x() {\n        return this[0];\n    }\n\n    get y() {\n        return this[1];\n    }\n\n    get z() {\n        return this[2];\n    }\n\n    get w() {\n        return this[3];\n    }\n\n    set x(v) {\n        this[0] = v;\n        this.onChange();\n    }\n\n    set y(v) {\n        this[1] = v;\n        this.onChange();\n    }\n\n    set z(v) {\n        this[2] = v;\n        this.onChange();\n    }\n\n    set w(v) {\n        this[3] = v;\n        this.onChange();\n    }\n\n    identity() {\n        QuatFunc.identity(this);\n        this.onChange();\n        return this;\n    }\n\n    set(x, y, z, w) {\n        if (x.length) return this.copy(x);\n        QuatFunc.set(this, x, y, z, w);\n        this.onChange();\n        return this;\n    }\n\n    rotateX(a) {\n        QuatFunc.rotateX(this, this, a);\n        this.onChange();\n        return this;\n    }\n\n    rotateY(a) {\n        QuatFunc.rotateY(this, this, a);\n        this.onChange();\n        return this;\n    }\n\n    rotateZ(a) {\n        QuatFunc.rotateZ(this, this, a);\n        this.onChange();\n        return this;\n    }\n\n    inverse(q = this) {\n        QuatFunc.invert(this, q);\n        this.onChange();\n        return this;\n    }\n\n    conjugate(q = this) {\n        QuatFunc.conjugate(this, q);\n        this.onChange();\n        return this;\n    }\n\n    copy(q) {\n        QuatFunc.copy(this, q);\n        this.onChange();\n        return this;\n    }\n\n    normalize(q = this) {\n        QuatFunc.normalize(this, q);\n        this.onChange();\n        return this;\n    }\n\n    multiply(qA, qB) {\n        if (qB) {\n            QuatFunc.multiply(this, qA, qB);\n        } else {\n            QuatFunc.multiply(this, this, qA);\n        }\n        this.onChange();\n        return this;\n    }\n\n    dot(v) {\n        return QuatFunc.dot(this, v);\n    }\n\n    fromMatrix3(matrix3) {\n        QuatFunc.fromMat3(this, matrix3);\n        this.onChange();\n        return this;\n    }\n\n    fromEuler(euler) {\n        QuatFunc.fromEuler(this, euler, euler.order);\n        return this;\n    }\n\n    fromAxisAngle(axis, a) {\n        QuatFunc.setAxisAngle(this, axis, a);\n        return this;\n    }\n\n    slerp(q, t) {\n        QuatFunc.slerp(this, this, q, t);\n        return this;\n    }\n\n    fromArray(a, o = 0) {\n        this[0] = a[o];\n        this[1] = a[o + 1];\n        this[2] = a[o + 2];\n        this[3] = a[o + 3];\n        return this;\n    }\n\n    toArray(a = [], o = 0) {\n        a[o] = this[0];\n        a[o + 1] = this[1];\n        a[o + 2] = this[2];\n        a[o + 3] = this[3];\n        return a;\n    }\n}\n","const EPSILON = 0.000001;\n\n/**\n * Copy the values from one mat4 to another\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the source matrix\n * @returns {mat4} out\n */\nexport function copy(out, a) {\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    out[4] = a[4];\n    out[5] = a[5];\n    out[6] = a[6];\n    out[7] = a[7];\n    out[8] = a[8];\n    out[9] = a[9];\n    out[10] = a[10];\n    out[11] = a[11];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n    return out;\n}\n\n/**\n * Set the components of a mat4 to the given values\n *\n * @param {mat4} out the receiving matrix\n * @returns {mat4} out\n */\nexport function set(out, m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n    out[0] = m00;\n    out[1] = m01;\n    out[2] = m02;\n    out[3] = m03;\n    out[4] = m10;\n    out[5] = m11;\n    out[6] = m12;\n    out[7] = m13;\n    out[8] = m20;\n    out[9] = m21;\n    out[10] = m22;\n    out[11] = m23;\n    out[12] = m30;\n    out[13] = m31;\n    out[14] = m32;\n    out[15] = m33;\n    return out;\n}\n\n/**\n * Set a mat4 to the identity matrix\n *\n * @param {mat4} out the receiving matrix\n * @returns {mat4} out\n */\nexport function identity(out) {\n    out[0] = 1;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[5] = 1;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[10] = 1;\n    out[11] = 0;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n    out[15] = 1;\n    return out;\n}\n\n/**\n * Transpose the values of a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the source matrix\n * @returns {mat4} out\n */\nexport function transpose(out, a) {\n    // If we are transposing ourselves we can skip a few steps but have to cache some values\n    if (out === a) {\n        let a01 = a[1],\n            a02 = a[2],\n            a03 = a[3];\n        let a12 = a[6],\n            a13 = a[7];\n        let a23 = a[11];\n\n        out[1] = a[4];\n        out[2] = a[8];\n        out[3] = a[12];\n        out[4] = a01;\n        out[6] = a[9];\n        out[7] = a[13];\n        out[8] = a02;\n        out[9] = a12;\n        out[11] = a[14];\n        out[12] = a03;\n        out[13] = a13;\n        out[14] = a23;\n    } else {\n        out[0] = a[0];\n        out[1] = a[4];\n        out[2] = a[8];\n        out[3] = a[12];\n        out[4] = a[1];\n        out[5] = a[5];\n        out[6] = a[9];\n        out[7] = a[13];\n        out[8] = a[2];\n        out[9] = a[6];\n        out[10] = a[10];\n        out[11] = a[14];\n        out[12] = a[3];\n        out[13] = a[7];\n        out[14] = a[11];\n        out[15] = a[15];\n    }\n\n    return out;\n}\n\n/**\n * Inverts a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the source matrix\n * @returns {mat4} out\n */\nexport function invert(out, a) {\n    let a00 = a[0],\n        a01 = a[1],\n        a02 = a[2],\n        a03 = a[3];\n    let a10 = a[4],\n        a11 = a[5],\n        a12 = a[6],\n        a13 = a[7];\n    let a20 = a[8],\n        a21 = a[9],\n        a22 = a[10],\n        a23 = a[11];\n    let a30 = a[12],\n        a31 = a[13],\n        a32 = a[14],\n        a33 = a[15];\n\n    let b00 = a00 * a11 - a01 * a10;\n    let b01 = a00 * a12 - a02 * a10;\n    let b02 = a00 * a13 - a03 * a10;\n    let b03 = a01 * a12 - a02 * a11;\n    let b04 = a01 * a13 - a03 * a11;\n    let b05 = a02 * a13 - a03 * a12;\n    let b06 = a20 * a31 - a21 * a30;\n    let b07 = a20 * a32 - a22 * a30;\n    let b08 = a20 * a33 - a23 * a30;\n    let b09 = a21 * a32 - a22 * a31;\n    let b10 = a21 * a33 - a23 * a31;\n    let b11 = a22 * a33 - a23 * a32;\n\n    // Calculate the determinant\n    let det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n    if (!det) {\n        return null;\n    }\n    det = 1.0 / det;\n\n    out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n    out[1] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n    out[2] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n    out[3] = (a22 * b04 - a21 * b05 - a23 * b03) * det;\n    out[4] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n    out[5] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n    out[6] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n    out[7] = (a20 * b05 - a22 * b02 + a23 * b01) * det;\n    out[8] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n    out[9] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n    out[10] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n    out[11] = (a21 * b02 - a20 * b04 - a23 * b00) * det;\n    out[12] = (a11 * b07 - a10 * b09 - a12 * b06) * det;\n    out[13] = (a00 * b09 - a01 * b07 + a02 * b06) * det;\n    out[14] = (a31 * b01 - a30 * b03 - a32 * b00) * det;\n    out[15] = (a20 * b03 - a21 * b01 + a22 * b00) * det;\n\n    return out;\n}\n\n/**\n * Calculates the determinant of a mat4\n *\n * @param {mat4} a the source matrix\n * @returns {Number} determinant of a\n */\nexport function determinant(a) {\n    let a00 = a[0],\n        a01 = a[1],\n        a02 = a[2],\n        a03 = a[3];\n    let a10 = a[4],\n        a11 = a[5],\n        a12 = a[6],\n        a13 = a[7];\n    let a20 = a[8],\n        a21 = a[9],\n        a22 = a[10],\n        a23 = a[11];\n    let a30 = a[12],\n        a31 = a[13],\n        a32 = a[14],\n        a33 = a[15];\n\n    let b00 = a00 * a11 - a01 * a10;\n    let b01 = a00 * a12 - a02 * a10;\n    let b02 = a00 * a13 - a03 * a10;\n    let b03 = a01 * a12 - a02 * a11;\n    let b04 = a01 * a13 - a03 * a11;\n    let b05 = a02 * a13 - a03 * a12;\n    let b06 = a20 * a31 - a21 * a30;\n    let b07 = a20 * a32 - a22 * a30;\n    let b08 = a20 * a33 - a23 * a30;\n    let b09 = a21 * a32 - a22 * a31;\n    let b10 = a21 * a33 - a23 * a31;\n    let b11 = a22 * a33 - a23 * a32;\n\n    // Calculate the determinant\n    return b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n}\n\n/**\n * Multiplies two mat4s\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the first operand\n * @param {mat4} b the second operand\n * @returns {mat4} out\n */\nexport function multiply(out, a, b) {\n    let a00 = a[0],\n        a01 = a[1],\n        a02 = a[2],\n        a03 = a[3];\n    let a10 = a[4],\n        a11 = a[5],\n        a12 = a[6],\n        a13 = a[7];\n    let a20 = a[8],\n        a21 = a[9],\n        a22 = a[10],\n        a23 = a[11];\n    let a30 = a[12],\n        a31 = a[13],\n        a32 = a[14],\n        a33 = a[15];\n\n    // Cache only the current line of the second matrix\n    let b0 = b[0],\n        b1 = b[1],\n        b2 = b[2],\n        b3 = b[3];\n    out[0] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n    out[1] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n    out[2] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n    out[3] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n\n    b0 = b[4];\n    b1 = b[5];\n    b2 = b[6];\n    b3 = b[7];\n    out[4] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n    out[5] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n    out[6] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n    out[7] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n\n    b0 = b[8];\n    b1 = b[9];\n    b2 = b[10];\n    b3 = b[11];\n    out[8] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n    out[9] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n    out[10] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n    out[11] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n\n    b0 = b[12];\n    b1 = b[13];\n    b2 = b[14];\n    b3 = b[15];\n    out[12] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n    out[13] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n    out[14] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n    out[15] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n    return out;\n}\n\n/**\n * Translate a mat4 by the given vector\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to translate\n * @param {vec3} v vector to translate by\n * @returns {mat4} out\n */\nexport function translate(out, a, v) {\n    let x = v[0],\n        y = v[1],\n        z = v[2];\n    let a00, a01, a02, a03;\n    let a10, a11, a12, a13;\n    let a20, a21, a22, a23;\n\n    if (a === out) {\n        out[12] = a[0] * x + a[4] * y + a[8] * z + a[12];\n        out[13] = a[1] * x + a[5] * y + a[9] * z + a[13];\n        out[14] = a[2] * x + a[6] * y + a[10] * z + a[14];\n        out[15] = a[3] * x + a[7] * y + a[11] * z + a[15];\n    } else {\n        a00 = a[0];\n        a01 = a[1];\n        a02 = a[2];\n        a03 = a[3];\n        a10 = a[4];\n        a11 = a[5];\n        a12 = a[6];\n        a13 = a[7];\n        a20 = a[8];\n        a21 = a[9];\n        a22 = a[10];\n        a23 = a[11];\n\n        out[0] = a00;\n        out[1] = a01;\n        out[2] = a02;\n        out[3] = a03;\n        out[4] = a10;\n        out[5] = a11;\n        out[6] = a12;\n        out[7] = a13;\n        out[8] = a20;\n        out[9] = a21;\n        out[10] = a22;\n        out[11] = a23;\n\n        out[12] = a00 * x + a10 * y + a20 * z + a[12];\n        out[13] = a01 * x + a11 * y + a21 * z + a[13];\n        out[14] = a02 * x + a12 * y + a22 * z + a[14];\n        out[15] = a03 * x + a13 * y + a23 * z + a[15];\n    }\n\n    return out;\n}\n\n/**\n * Scales the mat4 by the dimensions in the given vec3 not using vectorization\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to scale\n * @param {vec3} v the vec3 to scale the matrix by\n * @returns {mat4} out\n **/\nexport function scale(out, a, v) {\n    let x = v[0],\n        y = v[1],\n        z = v[2];\n\n    out[0] = a[0] * x;\n    out[1] = a[1] * x;\n    out[2] = a[2] * x;\n    out[3] = a[3] * x;\n    out[4] = a[4] * y;\n    out[5] = a[5] * y;\n    out[6] = a[6] * y;\n    out[7] = a[7] * y;\n    out[8] = a[8] * z;\n    out[9] = a[9] * z;\n    out[10] = a[10] * z;\n    out[11] = a[11] * z;\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n    return out;\n}\n\n/**\n * Rotates a mat4 by the given angle around the given axis\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @param {vec3} axis the axis to rotate around\n * @returns {mat4} out\n */\nexport function rotate(out, a, rad, axis) {\n    let x = axis[0],\n        y = axis[1],\n        z = axis[2];\n    let len = Math.hypot(x, y, z);\n    let s, c, t;\n    let a00, a01, a02, a03;\n    let a10, a11, a12, a13;\n    let a20, a21, a22, a23;\n    let b00, b01, b02;\n    let b10, b11, b12;\n    let b20, b21, b22;\n\n    if (Math.abs(len) < EPSILON) {\n        return null;\n    }\n\n    len = 1 / len;\n    x *= len;\n    y *= len;\n    z *= len;\n\n    s = Math.sin(rad);\n    c = Math.cos(rad);\n    t = 1 - c;\n\n    a00 = a[0];\n    a01 = a[1];\n    a02 = a[2];\n    a03 = a[3];\n    a10 = a[4];\n    a11 = a[5];\n    a12 = a[6];\n    a13 = a[7];\n    a20 = a[8];\n    a21 = a[9];\n    a22 = a[10];\n    a23 = a[11];\n\n    // Construct the elements of the rotation matrix\n    b00 = x * x * t + c;\n    b01 = y * x * t + z * s;\n    b02 = z * x * t - y * s;\n    b10 = x * y * t - z * s;\n    b11 = y * y * t + c;\n    b12 = z * y * t + x * s;\n    b20 = x * z * t + y * s;\n    b21 = y * z * t - x * s;\n    b22 = z * z * t + c;\n\n    // Perform rotation-specific matrix multiplication\n    out[0] = a00 * b00 + a10 * b01 + a20 * b02;\n    out[1] = a01 * b00 + a11 * b01 + a21 * b02;\n    out[2] = a02 * b00 + a12 * b01 + a22 * b02;\n    out[3] = a03 * b00 + a13 * b01 + a23 * b02;\n    out[4] = a00 * b10 + a10 * b11 + a20 * b12;\n    out[5] = a01 * b10 + a11 * b11 + a21 * b12;\n    out[6] = a02 * b10 + a12 * b11 + a22 * b12;\n    out[7] = a03 * b10 + a13 * b11 + a23 * b12;\n    out[8] = a00 * b20 + a10 * b21 + a20 * b22;\n    out[9] = a01 * b20 + a11 * b21 + a21 * b22;\n    out[10] = a02 * b20 + a12 * b21 + a22 * b22;\n    out[11] = a03 * b20 + a13 * b21 + a23 * b22;\n\n    if (a !== out) {\n        // If the source and destination differ, copy the unchanged last row\n        out[12] = a[12];\n        out[13] = a[13];\n        out[14] = a[14];\n        out[15] = a[15];\n    }\n    return out;\n}\n\n/**\n * Returns the translation vector component of a transformation\n *  matrix. If a matrix is built with fromRotationTranslation,\n *  the returned vector will be the same as the translation vector\n *  originally supplied.\n * @param  {vec3} out Vector to receive translation component\n * @param  {mat4} mat Matrix to be decomposed (input)\n * @return {vec3} out\n */\nexport function getTranslation(out, mat) {\n    out[0] = mat[12];\n    out[1] = mat[13];\n    out[2] = mat[14];\n\n    return out;\n}\n\n/**\n * Returns the scaling factor component of a transformation\n *  matrix. If a matrix is built with fromRotationTranslationScale\n *  with a normalized Quaternion paramter, the returned vector will be\n *  the same as the scaling vector\n *  originally supplied.\n * @param  {vec3} out Vector to receive scaling factor component\n * @param  {mat4} mat Matrix to be decomposed (input)\n * @return {vec3} out\n */\nexport function getScaling(out, mat) {\n    let m11 = mat[0];\n    let m12 = mat[1];\n    let m13 = mat[2];\n    let m21 = mat[4];\n    let m22 = mat[5];\n    let m23 = mat[6];\n    let m31 = mat[8];\n    let m32 = mat[9];\n    let m33 = mat[10];\n\n    out[0] = Math.hypot(m11, m12, m13);\n    out[1] = Math.hypot(m21, m22, m23);\n    out[2] = Math.hypot(m31, m32, m33);\n\n    return out;\n}\n\nexport function getMaxScaleOnAxis(mat) {\n    let m11 = mat[0];\n    let m12 = mat[1];\n    let m13 = mat[2];\n    let m21 = mat[4];\n    let m22 = mat[5];\n    let m23 = mat[6];\n    let m31 = mat[8];\n    let m32 = mat[9];\n    let m33 = mat[10];\n\n    const x = m11 * m11 + m12 * m12 + m13 * m13;\n    const y = m21 * m21 + m22 * m22 + m23 * m23;\n    const z = m31 * m31 + m32 * m32 + m33 * m33;\n\n    return Math.sqrt(Math.max(x, y, z));\n}\n\n/**\n * Returns a quaternion representing the rotational component\n *  of a transformation matrix. If a matrix is built with\n *  fromRotationTranslation, the returned quaternion will be the\n *  same as the quaternion originally supplied.\n * @param {quat} out Quaternion to receive the rotation component\n * @param {mat4} mat Matrix to be decomposed (input)\n * @return {quat} out\n */\nexport const getRotation = (function () {\n    const temp = [0, 0, 0];\n\n    return function (out, mat) {\n        let scaling = temp;\n        getScaling(scaling, mat);\n\n        let is1 = 1 / scaling[0];\n        let is2 = 1 / scaling[1];\n        let is3 = 1 / scaling[2];\n\n        let sm11 = mat[0] * is1;\n        let sm12 = mat[1] * is2;\n        let sm13 = mat[2] * is3;\n        let sm21 = mat[4] * is1;\n        let sm22 = mat[5] * is2;\n        let sm23 = mat[6] * is3;\n        let sm31 = mat[8] * is1;\n        let sm32 = mat[9] * is2;\n        let sm33 = mat[10] * is3;\n\n        let trace = sm11 + sm22 + sm33;\n        let S = 0;\n\n        if (trace > 0) {\n            S = Math.sqrt(trace + 1.0) * 2;\n            out[3] = 0.25 * S;\n            out[0] = (sm23 - sm32) / S;\n            out[1] = (sm31 - sm13) / S;\n            out[2] = (sm12 - sm21) / S;\n        } else if (sm11 > sm22 && sm11 > sm33) {\n            S = Math.sqrt(1.0 + sm11 - sm22 - sm33) * 2;\n            out[3] = (sm23 - sm32) / S;\n            out[0] = 0.25 * S;\n            out[1] = (sm12 + sm21) / S;\n            out[2] = (sm31 + sm13) / S;\n        } else if (sm22 > sm33) {\n            S = Math.sqrt(1.0 + sm22 - sm11 - sm33) * 2;\n            out[3] = (sm31 - sm13) / S;\n            out[0] = (sm12 + sm21) / S;\n            out[1] = 0.25 * S;\n            out[2] = (sm23 + sm32) / S;\n        } else {\n            S = Math.sqrt(1.0 + sm33 - sm11 - sm22) * 2;\n            out[3] = (sm12 - sm21) / S;\n            out[0] = (sm31 + sm13) / S;\n            out[1] = (sm23 + sm32) / S;\n            out[2] = 0.25 * S;\n        }\n\n        return out;\n    };\n})();\n\n/**\n * Creates a matrix from a quaternion rotation, vector translation and vector scale\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, vec);\n *     let quatMat = mat4.create();\n *     quat4.toMat4(quat, quatMat);\n *     mat4.multiply(dest, quatMat);\n *     mat4.scale(dest, scale)\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat4} q Rotation quaternion\n * @param {vec3} v Translation vector\n * @param {vec3} s Scaling vector\n * @returns {mat4} out\n */\nexport function fromRotationTranslationScale(out, q, v, s) {\n    // Quaternion math\n    let x = q[0],\n        y = q[1],\n        z = q[2],\n        w = q[3];\n    let x2 = x + x;\n    let y2 = y + y;\n    let z2 = z + z;\n\n    let xx = x * x2;\n    let xy = x * y2;\n    let xz = x * z2;\n    let yy = y * y2;\n    let yz = y * z2;\n    let zz = z * z2;\n    let wx = w * x2;\n    let wy = w * y2;\n    let wz = w * z2;\n    let sx = s[0];\n    let sy = s[1];\n    let sz = s[2];\n\n    out[0] = (1 - (yy + zz)) * sx;\n    out[1] = (xy + wz) * sx;\n    out[2] = (xz - wy) * sx;\n    out[3] = 0;\n    out[4] = (xy - wz) * sy;\n    out[5] = (1 - (xx + zz)) * sy;\n    out[6] = (yz + wx) * sy;\n    out[7] = 0;\n    out[8] = (xz + wy) * sz;\n    out[9] = (yz - wx) * sz;\n    out[10] = (1 - (xx + yy)) * sz;\n    out[11] = 0;\n    out[12] = v[0];\n    out[13] = v[1];\n    out[14] = v[2];\n    out[15] = 1;\n\n    return out;\n}\n\n/**\n * Calculates a 4x4 matrix from the given quaternion\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat} q Quaternion to create matrix from\n *\n * @returns {mat4} out\n */\nexport function fromQuat(out, q) {\n    let x = q[0],\n        y = q[1],\n        z = q[2],\n        w = q[3];\n    let x2 = x + x;\n    let y2 = y + y;\n    let z2 = z + z;\n\n    let xx = x * x2;\n    let yx = y * x2;\n    let yy = y * y2;\n    let zx = z * x2;\n    let zy = z * y2;\n    let zz = z * z2;\n    let wx = w * x2;\n    let wy = w * y2;\n    let wz = w * z2;\n\n    out[0] = 1 - yy - zz;\n    out[1] = yx + wz;\n    out[2] = zx - wy;\n    out[3] = 0;\n\n    out[4] = yx - wz;\n    out[5] = 1 - xx - zz;\n    out[6] = zy + wx;\n    out[7] = 0;\n\n    out[8] = zx + wy;\n    out[9] = zy - wx;\n    out[10] = 1 - xx - yy;\n    out[11] = 0;\n\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n    out[15] = 1;\n\n    return out;\n}\n\n/**\n * Generates a perspective projection matrix with the given bounds\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} fovy Vertical field of view in radians\n * @param {number} aspect Aspect ratio. typically viewport width/height\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\nexport function perspective(out, fovy, aspect, near, far) {\n    let f = 1.0 / Math.tan(fovy / 2);\n    let nf = 1 / (near - far);\n    out[0] = f / aspect;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[5] = f;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[10] = (far + near) * nf;\n    out[11] = -1;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 2 * far * near * nf;\n    out[15] = 0;\n    return out;\n}\n\n/**\n * Generates a orthogonal projection matrix with the given bounds\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} left Left bound of the frustum\n * @param {number} right Right bound of the frustum\n * @param {number} bottom Bottom bound of the frustum\n * @param {number} top Top bound of the frustum\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\nexport function ortho(out, left, right, bottom, top, near, far) {\n    let lr = 1 / (left - right);\n    let bt = 1 / (bottom - top);\n    let nf = 1 / (near - far);\n    out[0] = -2 * lr;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[5] = -2 * bt;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[10] = 2 * nf;\n    out[11] = 0;\n    out[12] = (left + right) * lr;\n    out[13] = (top + bottom) * bt;\n    out[14] = (far + near) * nf;\n    out[15] = 1;\n    return out;\n}\n\n/**\n * Generates a matrix that makes something look at something else.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {vec3} eye Position of the viewer\n * @param {vec3} target Point the viewer is looking at\n * @param {vec3} up vec3 pointing up\n * @returns {mat4} out\n */\nexport function targetTo(out, eye, target, up) {\n    let eyex = eye[0],\n        eyey = eye[1],\n        eyez = eye[2],\n        upx = up[0],\n        upy = up[1],\n        upz = up[2];\n\n    let z0 = eyex - target[0],\n        z1 = eyey - target[1],\n        z2 = eyez - target[2];\n\n    let len = z0 * z0 + z1 * z1 + z2 * z2;\n    if (len === 0) {\n        // eye and target are in the same position\n        z2 = 1;\n    } else {\n        len = 1 / Math.sqrt(len);\n        z0 *= len;\n        z1 *= len;\n        z2 *= len;\n    }\n\n    let x0 = upy * z2 - upz * z1,\n        x1 = upz * z0 - upx * z2,\n        x2 = upx * z1 - upy * z0;\n\n    len = x0 * x0 + x1 * x1 + x2 * x2;\n    if (len === 0) {\n        // up and z are parallel\n        if (upz) {\n            upx += 1e-6;\n        } else if (upy) {\n            upz += 1e-6;\n        } else {\n            upy += 1e-6;\n        }\n        (x0 = upy * z2 - upz * z1), (x1 = upz * z0 - upx * z2), (x2 = upx * z1 - upy * z0);\n\n        len = x0 * x0 + x1 * x1 + x2 * x2;\n    }\n\n    len = 1 / Math.sqrt(len);\n    x0 *= len;\n    x1 *= len;\n    x2 *= len;\n\n    out[0] = x0;\n    out[1] = x1;\n    out[2] = x2;\n    out[3] = 0;\n    out[4] = z1 * x2 - z2 * x1;\n    out[5] = z2 * x0 - z0 * x2;\n    out[6] = z0 * x1 - z1 * x0;\n    out[7] = 0;\n    out[8] = z0;\n    out[9] = z1;\n    out[10] = z2;\n    out[11] = 0;\n    out[12] = eyex;\n    out[13] = eyey;\n    out[14] = eyez;\n    out[15] = 1;\n    return out;\n}\n\n/**\n * Adds two mat4's\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the first operand\n * @param {mat4} b the second operand\n * @returns {mat4} out\n */\nexport function add(out, a, b) {\n    out[0] = a[0] + b[0];\n    out[1] = a[1] + b[1];\n    out[2] = a[2] + b[2];\n    out[3] = a[3] + b[3];\n    out[4] = a[4] + b[4];\n    out[5] = a[5] + b[5];\n    out[6] = a[6] + b[6];\n    out[7] = a[7] + b[7];\n    out[8] = a[8] + b[8];\n    out[9] = a[9] + b[9];\n    out[10] = a[10] + b[10];\n    out[11] = a[11] + b[11];\n    out[12] = a[12] + b[12];\n    out[13] = a[13] + b[13];\n    out[14] = a[14] + b[14];\n    out[15] = a[15] + b[15];\n    return out;\n}\n\n/**\n * Subtracts matrix b from matrix a\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the first operand\n * @param {mat4} b the second operand\n * @returns {mat4} out\n */\nexport function subtract(out, a, b) {\n    out[0] = a[0] - b[0];\n    out[1] = a[1] - b[1];\n    out[2] = a[2] - b[2];\n    out[3] = a[3] - b[3];\n    out[4] = a[4] - b[4];\n    out[5] = a[5] - b[5];\n    out[6] = a[6] - b[6];\n    out[7] = a[7] - b[7];\n    out[8] = a[8] - b[8];\n    out[9] = a[9] - b[9];\n    out[10] = a[10] - b[10];\n    out[11] = a[11] - b[11];\n    out[12] = a[12] - b[12];\n    out[13] = a[13] - b[13];\n    out[14] = a[14] - b[14];\n    out[15] = a[15] - b[15];\n    return out;\n}\n\n/**\n * Multiply each element of the matrix by a scalar.\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to scale\n * @param {Number} b amount to scale the matrix's elements by\n * @returns {mat4} out\n */\nexport function multiplyScalar(out, a, b) {\n    out[0] = a[0] * b;\n    out[1] = a[1] * b;\n    out[2] = a[2] * b;\n    out[3] = a[3] * b;\n    out[4] = a[4] * b;\n    out[5] = a[5] * b;\n    out[6] = a[6] * b;\n    out[7] = a[7] * b;\n    out[8] = a[8] * b;\n    out[9] = a[9] * b;\n    out[10] = a[10] * b;\n    out[11] = a[11] * b;\n    out[12] = a[12] * b;\n    out[13] = a[13] * b;\n    out[14] = a[14] * b;\n    out[15] = a[15] * b;\n    return out;\n}\n","import * as Mat4Func from './functions/Mat4Func.js';\n\nexport class Mat4 extends Array {\n    constructor(\n        m00 = 1,\n        m01 = 0,\n        m02 = 0,\n        m03 = 0,\n        m10 = 0,\n        m11 = 1,\n        m12 = 0,\n        m13 = 0,\n        m20 = 0,\n        m21 = 0,\n        m22 = 1,\n        m23 = 0,\n        m30 = 0,\n        m31 = 0,\n        m32 = 0,\n        m33 = 1\n    ) {\n        super(m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33);\n        return this;\n    }\n\n    get x() {\n        return this[12];\n    }\n\n    get y() {\n        return this[13];\n    }\n\n    get z() {\n        return this[14];\n    }\n\n    get w() {\n        return this[15];\n    }\n\n    set x(v) {\n        this[12] = v;\n    }\n\n    set y(v) {\n        this[13] = v;\n    }\n\n    set z(v) {\n        this[14] = v;\n    }\n\n    set w(v) {\n        this[15] = v;\n    }\n\n    set(m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n        if (m00.length) return this.copy(m00);\n        Mat4Func.set(this, m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33);\n        return this;\n    }\n\n    translate(v, m = this) {\n        Mat4Func.translate(this, m, v);\n        return this;\n    }\n\n    rotate(v, axis, m = this) {\n        Mat4Func.rotate(this, m, v, axis);\n        return this;\n    }\n\n    scale(v, m = this) {\n        Mat4Func.scale(this, m, typeof v === 'number' ? [v, v, v] : v);\n        return this;\n    }\n\n    multiply(ma, mb) {\n        if (mb) {\n            Mat4Func.multiply(this, ma, mb);\n        } else {\n            Mat4Func.multiply(this, this, ma);\n        }\n        return this;\n    }\n\n    identity() {\n        Mat4Func.identity(this);\n        return this;\n    }\n\n    copy(m) {\n        Mat4Func.copy(this, m);\n        return this;\n    }\n\n    fromPerspective({ fov, aspect, near, far } = {}) {\n        Mat4Func.perspective(this, fov, aspect, near, far);\n        return this;\n    }\n\n    fromOrthogonal({ left, right, bottom, top, near, far }) {\n        Mat4Func.ortho(this, left, right, bottom, top, near, far);\n        return this;\n    }\n\n    fromQuaternion(q) {\n        Mat4Func.fromQuat(this, q);\n        return this;\n    }\n\n    setPosition(v) {\n        this.x = v[0];\n        this.y = v[1];\n        this.z = v[2];\n        return this;\n    }\n\n    inverse(m = this) {\n        Mat4Func.invert(this, m);\n        return this;\n    }\n\n    compose(q, pos, scale) {\n        Mat4Func.fromRotationTranslationScale(this, q, pos, scale);\n        return this;\n    }\n\n    getRotation(q) {\n        Mat4Func.getRotation(q, this);\n        return this;\n    }\n\n    getTranslation(pos) {\n        Mat4Func.getTranslation(pos, this);\n        return this;\n    }\n\n    getScaling(scale) {\n        Mat4Func.getScaling(scale, this);\n        return this;\n    }\n\n    getMaxScaleOnAxis() {\n        return Mat4Func.getMaxScaleOnAxis(this);\n    }\n\n    lookAt(eye, target, up) {\n        Mat4Func.targetTo(this, eye, target, up);\n        return this;\n    }\n\n    determinant() {\n        return Mat4Func.determinant(this);\n    }\n\n    fromArray(a, o = 0) {\n        this[0] = a[o];\n        this[1] = a[o + 1];\n        this[2] = a[o + 2];\n        this[3] = a[o + 3];\n        this[4] = a[o + 4];\n        this[5] = a[o + 5];\n        this[6] = a[o + 6];\n        this[7] = a[o + 7];\n        this[8] = a[o + 8];\n        this[9] = a[o + 9];\n        this[10] = a[o + 10];\n        this[11] = a[o + 11];\n        this[12] = a[o + 12];\n        this[13] = a[o + 13];\n        this[14] = a[o + 14];\n        this[15] = a[o + 15];\n        return this;\n    }\n\n    toArray(a = [], o = 0) {\n        a[o] = this[0];\n        a[o + 1] = this[1];\n        a[o + 2] = this[2];\n        a[o + 3] = this[3];\n        a[o + 4] = this[4];\n        a[o + 5] = this[5];\n        a[o + 6] = this[6];\n        a[o + 7] = this[7];\n        a[o + 8] = this[8];\n        a[o + 9] = this[9];\n        a[o + 10] = this[10];\n        a[o + 11] = this[11];\n        a[o + 12] = this[12];\n        a[o + 13] = this[13];\n        a[o + 14] = this[14];\n        a[o + 15] = this[15];\n        return a;\n    }\n}\n","import * as EulerFunc from './functions/EulerFunc.js';\nimport { Mat4 } from './Mat4.js';\n\nconst tmpMat4 = new Mat4();\n\nexport class Euler extends Array {\n    constructor(x = 0, y = x, z = x, order = 'YXZ') {\n        super(x, y, z);\n        this.order = order;\n        this.onChange = () => {};\n        return this;\n    }\n\n    get x() {\n        return this[0];\n    }\n\n    get y() {\n        return this[1];\n    }\n\n    get z() {\n        return this[2];\n    }\n\n    set x(v) {\n        this[0] = v;\n        this.onChange();\n    }\n\n    set y(v) {\n        this[1] = v;\n        this.onChange();\n    }\n\n    set z(v) {\n        this[2] = v;\n        this.onChange();\n    }\n\n    set(x, y = x, z = x) {\n        if (x.length) return this.copy(x);\n        this[0] = x;\n        this[1] = y;\n        this[2] = z;\n        this.onChange();\n        return this;\n    }\n\n    copy(v) {\n        this[0] = v[0];\n        this[1] = v[1];\n        this[2] = v[2];\n        this.onChange();\n        return this;\n    }\n\n    reorder(order) {\n        this.order = order;\n        this.onChange();\n        return this;\n    }\n\n    fromRotationMatrix(m, order = this.order) {\n        EulerFunc.fromRotationMatrix(this, m, order);\n        return this;\n    }\n\n    fromQuaternion(q, order = this.order) {\n        tmpMat4.fromQuaternion(q);\n        return this.fromRotationMatrix(tmpMat4, order);\n    }\n\n    toArray(a = [], o = 0) {\n        a[o] = this[0];\n        a[o + 1] = this[1];\n        a[o + 2] = this[2];\n        return a;\n    }\n}\n","// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\nexport function fromRotationMatrix(out, m, order = 'YXZ') {\n    if (order === 'XYZ') {\n        out[1] = Math.asin(Math.min(Math.max(m[8], -1), 1));\n        if (Math.abs(m[8]) < 0.99999) {\n            out[0] = Math.atan2(-m[9], m[10]);\n            out[2] = Math.atan2(-m[4], m[0]);\n        } else {\n            out[0] = Math.atan2(m[6], m[5]);\n            out[2] = 0;\n        }\n    } else if (order === 'YXZ') {\n        out[0] = Math.asin(-Math.min(Math.max(m[9], -1), 1));\n        if (Math.abs(m[9]) < 0.99999) {\n            out[1] = Math.atan2(m[8], m[10]);\n            out[2] = Math.atan2(m[1], m[5]);\n        } else {\n            out[1] = Math.atan2(-m[2], m[0]);\n            out[2] = 0;\n        }\n    } else if (order === 'ZXY') {\n        out[0] = Math.asin(Math.min(Math.max(m[6], -1), 1));\n        if (Math.abs(m[6]) < 0.99999) {\n            out[1] = Math.atan2(-m[2], m[10]);\n            out[2] = Math.atan2(-m[4], m[5]);\n        } else {\n            out[1] = 0;\n            out[2] = Math.atan2(m[1], m[0]);\n        }\n    } else if (order === 'ZYX') {\n        out[1] = Math.asin(-Math.min(Math.max(m[2], -1), 1));\n        if (Math.abs(m[2]) < 0.99999) {\n            out[0] = Math.atan2(m[6], m[10]);\n            out[2] = Math.atan2(m[1], m[0]);\n        } else {\n            out[0] = 0;\n            out[2] = Math.atan2(-m[4], m[5]);\n        }\n    } else if (order === 'YZX') {\n        out[2] = Math.asin(Math.min(Math.max(m[1], -1), 1));\n        if (Math.abs(m[1]) < 0.99999) {\n            out[0] = Math.atan2(-m[9], m[5]);\n            out[1] = Math.atan2(-m[2], m[0]);\n        } else {\n            out[0] = 0;\n            out[1] = Math.atan2(m[8], m[10]);\n        }\n    } else if (order === 'XZY') {\n        out[2] = Math.asin(-Math.min(Math.max(m[4], -1), 1));\n        if (Math.abs(m[4]) < 0.99999) {\n            out[0] = Math.atan2(m[6], m[5]);\n            out[1] = Math.atan2(m[8], m[0]);\n        } else {\n            out[0] = Math.atan2(-m[9], m[10]);\n            out[1] = 0;\n        }\n    }\n\n    return out;\n}\n","import { Vec3 } from '../math/Vec3.js';\nimport { Quat } from '../math/Quat.js';\nimport { Mat4 } from '../math/Mat4.js';\nimport { Euler } from '../math/Euler.js';\n\nexport class Transform {\n    constructor() {\n        this.parent = null;\n        this.children = [];\n        this.visible = true;\n\n        this.matrix = new Mat4();\n        this.worldMatrix = new Mat4();\n        this.matrixAutoUpdate = true;\n\n        this.position = new Vec3();\n        this.quaternion = new Quat();\n        this.scale = new Vec3(1);\n        this.rotation = new Euler();\n        this.up = new Vec3(0, 1, 0);\n\n        this.rotation.onChange = () => this.quaternion.fromEuler(this.rotation);\n        this.quaternion.onChange = () => this.rotation.fromQuaternion(this.quaternion);\n    }\n\n    setParent(parent, notifyParent = true) {\n        if (this.parent && parent !== this.parent) this.parent.removeChild(this, false);\n        this.parent = parent;\n        if (notifyParent && parent) parent.addChild(this, false);\n    }\n\n    addChild(child, notifyChild = true) {\n        if (!~this.children.indexOf(child)) this.children.push(child);\n        if (notifyChild) child.setParent(this, false);\n    }\n\n    removeChild(child, notifyChild = true) {\n        if (!!~this.children.indexOf(child)) this.children.splice(this.children.indexOf(child), 1);\n        if (notifyChild) child.setParent(null, false);\n    }\n\n    updateMatrixWorld(force) {\n        if (this.matrixAutoUpdate) this.updateMatrix();\n        if (this.worldMatrixNeedsUpdate || force) {\n            if (this.parent === null) this.worldMatrix.copy(this.matrix);\n            else this.worldMatrix.multiply(this.parent.worldMatrix, this.matrix);\n            this.worldMatrixNeedsUpdate = false;\n            force = true;\n        }\n\n        for (let i = 0, l = this.children.length; i < l; i++) {\n            this.children[i].updateMatrixWorld(force);\n        }\n    }\n\n    updateMatrix() {\n        this.matrix.compose(this.quaternion, this.position, this.scale);\n        this.worldMatrixNeedsUpdate = true;\n    }\n\n    traverse(callback) {\n        // Return true in callback to stop traversing children\n        if (callback(this)) return;\n        for (let i = 0, l = this.children.length; i < l; i++) {\n            this.children[i].traverse(callback);\n        }\n    }\n\n    decompose() {\n        this.matrix.getTranslation(this.position);\n        this.matrix.getRotation(this.quaternion);\n        this.matrix.getScaling(this.scale);\n        this.rotation.fromQuaternion(this.quaternion);\n    }\n\n    lookAt(target, invert = false) {\n        if (invert) this.matrix.lookAt(this.position, target, this.up);\n        else this.matrix.lookAt(target, this.position, this.up);\n        this.matrix.getRotation(this.quaternion);\n        this.rotation.fromQuaternion(this.quaternion);\n    }\n}\n","import { Transform } from './Transform.js';\nimport { Mat4 } from '../math/Mat4.js';\nimport { Vec3 } from '../math/Vec3.js';\n\nconst tempMat4 = new Mat4();\nconst tempVec3a = new Vec3();\nconst tempVec3b = new Vec3();\n\nexport class Camera extends Transform {\n    constructor(gl, { near = 0.1, far = 100, fov = 45, aspect = 1, left, right, bottom, top, zoom = 1 } = {}) {\n        super();\n\n        Object.assign(this, { near, far, fov, aspect, left, right, bottom, top, zoom });\n\n        this.projectionMatrix = new Mat4();\n        this.viewMatrix = new Mat4();\n        this.projectionViewMatrix = new Mat4();\n        this.worldPosition = new Vec3();\n\n        // Use orthographic if left/right set, else default to perspective camera\n        this.type = left || right ? 'orthographic' : 'perspective';\n\n        if (this.type === 'orthographic') this.orthographic();\n        else this.perspective();\n    }\n\n    perspective({ near = this.near, far = this.far, fov = this.fov, aspect = this.aspect } = {}) {\n        Object.assign(this, { near, far, fov, aspect });\n        this.projectionMatrix.fromPerspective({ fov: fov * (Math.PI / 180), aspect, near, far });\n        this.type = 'perspective';\n        return this;\n    }\n\n    orthographic({\n        near = this.near,\n        far = this.far,\n        left = this.left,\n        right = this.right,\n        bottom = this.bottom,\n        top = this.top,\n        zoom = this.zoom,\n    } = {}) {\n        Object.assign(this, { near, far, left, right, bottom, top, zoom });\n        left /= zoom;\n        right /= zoom;\n        bottom /= zoom;\n        top /= zoom;\n        this.projectionMatrix.fromOrthogonal({ left, right, bottom, top, near, far });\n        this.type = 'orthographic';\n        return this;\n    }\n\n    updateMatrixWorld() {\n        super.updateMatrixWorld();\n        this.viewMatrix.inverse(this.worldMatrix);\n        this.worldMatrix.getTranslation(this.worldPosition);\n\n        // used for sorting\n        this.projectionViewMatrix.multiply(this.projectionMatrix, this.viewMatrix);\n        return this;\n    }\n\n    lookAt(target) {\n        super.lookAt(target, true);\n        return this;\n    }\n\n    // Project 3D coordinate to 2D point\n    project(v) {\n        v.applyMatrix4(this.viewMatrix);\n        v.applyMatrix4(this.projectionMatrix);\n        return this;\n    }\n\n    // Unproject 2D point to 3D coordinate\n    unproject(v) {\n        v.applyMatrix4(tempMat4.inverse(this.projectionMatrix));\n        v.applyMatrix4(this.worldMatrix);\n        return this;\n    }\n\n    updateFrustum() {\n        if (!this.frustum) {\n            this.frustum = [new Vec3(), new Vec3(), new Vec3(), new Vec3(), new Vec3(), new Vec3()];\n        }\n\n        const m = this.projectionViewMatrix;\n        this.frustum[0].set(m[3] - m[0], m[7] - m[4], m[11] - m[8]).constant = m[15] - m[12]; // -x\n        this.frustum[1].set(m[3] + m[0], m[7] + m[4], m[11] + m[8]).constant = m[15] + m[12]; // +x\n        this.frustum[2].set(m[3] + m[1], m[7] + m[5], m[11] + m[9]).constant = m[15] + m[13]; // +y\n        this.frustum[3].set(m[3] - m[1], m[7] - m[5], m[11] - m[9]).constant = m[15] - m[13]; // -y\n        this.frustum[4].set(m[3] - m[2], m[7] - m[6], m[11] - m[10]).constant = m[15] - m[14]; // +z (far)\n        this.frustum[5].set(m[3] + m[2], m[7] + m[6], m[11] + m[10]).constant = m[15] + m[14]; // -z (near)\n\n        for (let i = 0; i < 6; i++) {\n            const invLen = 1.0 / this.frustum[i].distance();\n            this.frustum[i].multiply(invLen);\n            this.frustum[i].constant *= invLen;\n        }\n    }\n\n    frustumIntersectsMesh(node) {\n        // If no position attribute, treat as frustumCulled false\n        if (!node.geometry.attributes.position) return true;\n\n        if (!node.geometry.bounds || node.geometry.bounds.radius === Infinity) node.geometry.computeBoundingSphere();\n\n        if (!node.geometry.bounds) return true;\n\n        const center = tempVec3a;\n        center.copy(node.geometry.bounds.center);\n        center.applyMatrix4(node.worldMatrix);\n\n        const radius = node.geometry.bounds.radius * node.worldMatrix.getMaxScaleOnAxis();\n\n        return this.frustumIntersectsSphere(center, radius);\n    }\n\n    frustumIntersectsSphere(center, radius) {\n        const normal = tempVec3b;\n\n        for (let i = 0; i < 6; i++) {\n            const plane = this.frustum[i];\n            const distance = normal.copy(plane).dot(center) + plane.constant;\n            if (distance < -radius) return false;\n        }\n        return true;\n    }\n}\n","const EPSILON = 0.000001;\n\n/**\n * Copies the upper-left 3x3 values into the given mat3.\n *\n * @param {mat3} out the receiving 3x3 matrix\n * @param {mat4} a   the source 4x4 matrix\n * @returns {mat3} out\n */\nexport function fromMat4(out, a) {\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[4];\n    out[4] = a[5];\n    out[5] = a[6];\n    out[6] = a[8];\n    out[7] = a[9];\n    out[8] = a[10];\n    return out;\n}\n\n/**\n * Calculates a 3x3 matrix from the given quaternion\n *\n * @param {mat3} out mat3 receiving operation result\n * @param {quat} q Quaternion to create matrix from\n *\n * @returns {mat3} out\n */\nexport function fromQuat(out, q) {\n    let x = q[0],\n        y = q[1],\n        z = q[2],\n        w = q[3];\n    let x2 = x + x;\n    let y2 = y + y;\n    let z2 = z + z;\n\n    let xx = x * x2;\n    let yx = y * x2;\n    let yy = y * y2;\n    let zx = z * x2;\n    let zy = z * y2;\n    let zz = z * z2;\n    let wx = w * x2;\n    let wy = w * y2;\n    let wz = w * z2;\n\n    out[0] = 1 - yy - zz;\n    out[3] = yx - wz;\n    out[6] = zx + wy;\n\n    out[1] = yx + wz;\n    out[4] = 1 - xx - zz;\n    out[7] = zy - wx;\n\n    out[2] = zx - wy;\n    out[5] = zy + wx;\n    out[8] = 1 - xx - yy;\n\n    return out;\n}\n\n/**\n * Copy the values from one mat3 to another\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the source matrix\n * @returns {mat3} out\n */\nexport function copy(out, a) {\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    out[4] = a[4];\n    out[5] = a[5];\n    out[6] = a[6];\n    out[7] = a[7];\n    out[8] = a[8];\n    return out;\n}\n\n/**\n * Set the components of a mat3 to the given values\n *\n * @param {mat3} out the receiving matrix\n * @returns {mat3} out\n */\nexport function set(out, m00, m01, m02, m10, m11, m12, m20, m21, m22) {\n    out[0] = m00;\n    out[1] = m01;\n    out[2] = m02;\n    out[3] = m10;\n    out[4] = m11;\n    out[5] = m12;\n    out[6] = m20;\n    out[7] = m21;\n    out[8] = m22;\n    return out;\n}\n\n/**\n * Set a mat3 to the identity matrix\n *\n * @param {mat3} out the receiving matrix\n * @returns {mat3} out\n */\nexport function identity(out) {\n    out[0] = 1;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 1;\n    out[5] = 0;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 1;\n    return out;\n}\n\n/**\n * Transpose the values of a mat3\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the source matrix\n * @returns {mat3} out\n */\nexport function transpose(out, a) {\n    // If we are transposing ourselves we can skip a few steps but have to cache some values\n    if (out === a) {\n        let a01 = a[1],\n            a02 = a[2],\n            a12 = a[5];\n        out[1] = a[3];\n        out[2] = a[6];\n        out[3] = a01;\n        out[5] = a[7];\n        out[6] = a02;\n        out[7] = a12;\n    } else {\n        out[0] = a[0];\n        out[1] = a[3];\n        out[2] = a[6];\n        out[3] = a[1];\n        out[4] = a[4];\n        out[5] = a[7];\n        out[6] = a[2];\n        out[7] = a[5];\n        out[8] = a[8];\n    }\n\n    return out;\n}\n\n/**\n * Inverts a mat3\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the source matrix\n * @returns {mat3} out\n */\nexport function invert(out, a) {\n    let a00 = a[0],\n        a01 = a[1],\n        a02 = a[2];\n    let a10 = a[3],\n        a11 = a[4],\n        a12 = a[5];\n    let a20 = a[6],\n        a21 = a[7],\n        a22 = a[8];\n\n    let b01 = a22 * a11 - a12 * a21;\n    let b11 = -a22 * a10 + a12 * a20;\n    let b21 = a21 * a10 - a11 * a20;\n\n    // Calculate the determinant\n    let det = a00 * b01 + a01 * b11 + a02 * b21;\n\n    if (!det) {\n        return null;\n    }\n    det = 1.0 / det;\n\n    out[0] = b01 * det;\n    out[1] = (-a22 * a01 + a02 * a21) * det;\n    out[2] = (a12 * a01 - a02 * a11) * det;\n    out[3] = b11 * det;\n    out[4] = (a22 * a00 - a02 * a20) * det;\n    out[5] = (-a12 * a00 + a02 * a10) * det;\n    out[6] = b21 * det;\n    out[7] = (-a21 * a00 + a01 * a20) * det;\n    out[8] = (a11 * a00 - a01 * a10) * det;\n    return out;\n}\n\n/**\n * Calculates the determinant of a mat3\n *\n * @param {mat3} a the source matrix\n * @returns {Number} determinant of a\n */\nexport function determinant(a) {\n    let a00 = a[0],\n        a01 = a[1],\n        a02 = a[2];\n    let a10 = a[3],\n        a11 = a[4],\n        a12 = a[5];\n    let a20 = a[6],\n        a21 = a[7],\n        a22 = a[8];\n\n    return a00 * (a22 * a11 - a12 * a21) + a01 * (-a22 * a10 + a12 * a20) + a02 * (a21 * a10 - a11 * a20);\n}\n\n/**\n * Multiplies two mat3's\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the first operand\n * @param {mat3} b the second operand\n * @returns {mat3} out\n */\nexport function multiply(out, a, b) {\n    let a00 = a[0],\n        a01 = a[1],\n        a02 = a[2];\n    let a10 = a[3],\n        a11 = a[4],\n        a12 = a[5];\n    let a20 = a[6],\n        a21 = a[7],\n        a22 = a[8];\n\n    let b00 = b[0],\n        b01 = b[1],\n        b02 = b[2];\n    let b10 = b[3],\n        b11 = b[4],\n        b12 = b[5];\n    let b20 = b[6],\n        b21 = b[7],\n        b22 = b[8];\n\n    out[0] = b00 * a00 + b01 * a10 + b02 * a20;\n    out[1] = b00 * a01 + b01 * a11 + b02 * a21;\n    out[2] = b00 * a02 + b01 * a12 + b02 * a22;\n\n    out[3] = b10 * a00 + b11 * a10 + b12 * a20;\n    out[4] = b10 * a01 + b11 * a11 + b12 * a21;\n    out[5] = b10 * a02 + b11 * a12 + b12 * a22;\n\n    out[6] = b20 * a00 + b21 * a10 + b22 * a20;\n    out[7] = b20 * a01 + b21 * a11 + b22 * a21;\n    out[8] = b20 * a02 + b21 * a12 + b22 * a22;\n    return out;\n}\n\n/**\n * Translate a mat3 by the given vector\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the matrix to translate\n * @param {vec2} v vector to translate by\n * @returns {mat3} out\n */\nexport function translate(out, a, v) {\n    let a00 = a[0],\n        a01 = a[1],\n        a02 = a[2],\n        a10 = a[3],\n        a11 = a[4],\n        a12 = a[5],\n        a20 = a[6],\n        a21 = a[7],\n        a22 = a[8],\n        x = v[0],\n        y = v[1];\n\n    out[0] = a00;\n    out[1] = a01;\n    out[2] = a02;\n\n    out[3] = a10;\n    out[4] = a11;\n    out[5] = a12;\n\n    out[6] = x * a00 + y * a10 + a20;\n    out[7] = x * a01 + y * a11 + a21;\n    out[8] = x * a02 + y * a12 + a22;\n    return out;\n}\n\n/**\n * Rotates a mat3 by the given angle\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat3} out\n */\nexport function rotate(out, a, rad) {\n    let a00 = a[0],\n        a01 = a[1],\n        a02 = a[2],\n        a10 = a[3],\n        a11 = a[4],\n        a12 = a[5],\n        a20 = a[6],\n        a21 = a[7],\n        a22 = a[8],\n        s = Math.sin(rad),\n        c = Math.cos(rad);\n\n    out[0] = c * a00 + s * a10;\n    out[1] = c * a01 + s * a11;\n    out[2] = c * a02 + s * a12;\n\n    out[3] = c * a10 - s * a00;\n    out[4] = c * a11 - s * a01;\n    out[5] = c * a12 - s * a02;\n\n    out[6] = a20;\n    out[7] = a21;\n    out[8] = a22;\n    return out;\n}\n\n/**\n * Scales the mat3 by the dimensions in the given vec2\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the matrix to rotate\n * @param {vec2} v the vec2 to scale the matrix by\n * @returns {mat3} out\n **/\nexport function scale(out, a, v) {\n    let x = v[0],\n        y = v[1];\n\n    out[0] = x * a[0];\n    out[1] = x * a[1];\n    out[2] = x * a[2];\n\n    out[3] = y * a[3];\n    out[4] = y * a[4];\n    out[5] = y * a[5];\n\n    out[6] = a[6];\n    out[7] = a[7];\n    out[8] = a[8];\n    return out;\n}\n\n/**\n * Calculates a 3x3 normal matrix (transpose inverse) from the 4x4 matrix\n *\n * @param {mat3} out mat3 receiving operation result\n * @param {mat4} a Mat4 to derive the normal matrix from\n *\n * @returns {mat3} out\n */\nexport function normalFromMat4(out, a) {\n    let a00 = a[0],\n        a01 = a[1],\n        a02 = a[2],\n        a03 = a[3];\n    let a10 = a[4],\n        a11 = a[5],\n        a12 = a[6],\n        a13 = a[7];\n    let a20 = a[8],\n        a21 = a[9],\n        a22 = a[10],\n        a23 = a[11];\n    let a30 = a[12],\n        a31 = a[13],\n        a32 = a[14],\n        a33 = a[15];\n\n    let b00 = a00 * a11 - a01 * a10;\n    let b01 = a00 * a12 - a02 * a10;\n    let b02 = a00 * a13 - a03 * a10;\n    let b03 = a01 * a12 - a02 * a11;\n    let b04 = a01 * a13 - a03 * a11;\n    let b05 = a02 * a13 - a03 * a12;\n    let b06 = a20 * a31 - a21 * a30;\n    let b07 = a20 * a32 - a22 * a30;\n    let b08 = a20 * a33 - a23 * a30;\n    let b09 = a21 * a32 - a22 * a31;\n    let b10 = a21 * a33 - a23 * a31;\n    let b11 = a22 * a33 - a23 * a32;\n\n    // Calculate the determinant\n    let det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n    if (!det) {\n        return null;\n    }\n    det = 1.0 / det;\n\n    out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n    out[1] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n    out[2] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n\n    out[3] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n    out[4] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n    out[5] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n\n    out[6] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n    out[7] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n    out[8] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n\n    return out;\n}\n\n/**\n * Generates a 2D projection matrix with the given bounds\n *\n * @param {mat3} out mat3 frustum matrix will be written into\n * @param {number} width Width of your gl context\n * @param {number} height Height of gl context\n * @returns {mat3} out\n */\nexport function projection(out, width, height) {\n    out[0] = 2 / width;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = -2 / height;\n    out[5] = 0;\n    out[6] = -1;\n    out[7] = 1;\n    out[8] = 1;\n    return out;\n}\n\n/**\n * Adds two mat3's\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the first operand\n * @param {mat3} b the second operand\n * @returns {mat3} out\n */\nexport function add(out, a, b) {\n    out[0] = a[0] + b[0];\n    out[1] = a[1] + b[1];\n    out[2] = a[2] + b[2];\n    out[3] = a[3] + b[3];\n    out[4] = a[4] + b[4];\n    out[5] = a[5] + b[5];\n    out[6] = a[6] + b[6];\n    out[7] = a[7] + b[7];\n    out[8] = a[8] + b[8];\n    return out;\n}\n\n/**\n * Subtracts matrix b from matrix a\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the first operand\n * @param {mat3} b the second operand\n * @returns {mat3} out\n */\nexport function subtract(out, a, b) {\n    out[0] = a[0] - b[0];\n    out[1] = a[1] - b[1];\n    out[2] = a[2] - b[2];\n    out[3] = a[3] - b[3];\n    out[4] = a[4] - b[4];\n    out[5] = a[5] - b[5];\n    out[6] = a[6] - b[6];\n    out[7] = a[7] - b[7];\n    out[8] = a[8] - b[8];\n    return out;\n}\n\n/**\n * Multiply each element of the matrix by a scalar.\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the matrix to scale\n * @param {Number} b amount to scale the matrix's elements by\n * @returns {mat3} out\n */\nexport function multiplyScalar(out, a, b) {\n    out[0] = a[0] * b;\n    out[1] = a[1] * b;\n    out[2] = a[2] * b;\n    out[3] = a[3] * b;\n    out[4] = a[4] * b;\n    out[5] = a[5] * b;\n    out[6] = a[6] * b;\n    out[7] = a[7] * b;\n    out[8] = a[8] * b;\n    return out;\n}\n","import * as Mat3Func from './functions/Mat3Func.js';\n\nexport class Mat3 extends Array {\n    constructor(m00 = 1, m01 = 0, m02 = 0, m10 = 0, m11 = 1, m12 = 0, m20 = 0, m21 = 0, m22 = 1) {\n        super(m00, m01, m02, m10, m11, m12, m20, m21, m22);\n        return this;\n    }\n\n    set(m00, m01, m02, m10, m11, m12, m20, m21, m22) {\n        if (m00.length) return this.copy(m00);\n        Mat3Func.set(this, m00, m01, m02, m10, m11, m12, m20, m21, m22);\n        return this;\n    }\n\n    translate(v, m = this) {\n        Mat3Func.translate(this, m, v);\n        return this;\n    }\n\n    rotate(v, m = this) {\n        Mat3Func.rotate(this, m, v);\n        return this;\n    }\n\n    scale(v, m = this) {\n        Mat3Func.scale(this, m, v);\n        return this;\n    }\n\n    multiply(ma, mb) {\n        if (mb) {\n            Mat3Func.multiply(this, ma, mb);\n        } else {\n            Mat3Func.multiply(this, this, ma);\n        }\n        return this;\n    }\n\n    identity() {\n        Mat3Func.identity(this);\n        return this;\n    }\n\n    copy(m) {\n        Mat3Func.copy(this, m);\n        return this;\n    }\n\n    fromMatrix4(m) {\n        Mat3Func.fromMat4(this, m);\n        return this;\n    }\n\n    fromQuaternion(q) {\n        Mat3Func.fromQuat(this, q);\n        return this;\n    }\n\n    fromBasis(vec3a, vec3b, vec3c) {\n        this.set(vec3a[0], vec3a[1], vec3a[2], vec3b[0], vec3b[1], vec3b[2], vec3c[0], vec3c[1], vec3c[2]);\n        return this;\n    }\n\n    inverse(m = this) {\n        Mat3Func.invert(this, m);\n        return this;\n    }\n\n    getNormalMatrix(m) {\n        Mat3Func.normalFromMat4(this, m);\n        return this;\n    }\n}\n","import { Transform } from './Transform.js';\nimport { Mat3 } from '../math/Mat3.js';\nimport { Mat4 } from '../math/Mat4.js';\n\nlet ID = 0;\n\nexport class Mesh extends Transform {\n    constructor(gl, { geometry, program, mode = gl.TRIANGLES, frustumCulled = true, renderOrder = 0 } = {}) {\n        super();\n        if (!gl.canvas) console.error('gl not passed as first argument to Mesh');\n        this.gl = gl;\n        this.id = ID++;\n        this.geometry = geometry;\n        this.program = program;\n        this.mode = mode;\n\n        // Used to skip frustum culling\n        this.frustumCulled = frustumCulled;\n\n        // Override sorting to force an order\n        this.renderOrder = renderOrder;\n        this.modelViewMatrix = new Mat4();\n        this.normalMatrix = new Mat3();\n        this.beforeRenderCallbacks = [];\n        this.afterRenderCallbacks = [];\n    }\n\n    onBeforeRender(f) {\n        this.beforeRenderCallbacks.push(f);\n        return this;\n    }\n\n    onAfterRender(f) {\n        this.afterRenderCallbacks.push(f);\n        return this;\n    }\n\n    draw({ camera } = {}) {\n        this.beforeRenderCallbacks.forEach((f) => f && f({ mesh: this, camera }));\n        if (camera) {\n            // Add empty matrix uniforms to program if unset\n            if (!this.program.uniforms.modelMatrix) {\n                Object.assign(this.program.uniforms, {\n                    modelMatrix: { value: null },\n                    viewMatrix: { value: null },\n                    modelViewMatrix: { value: null },\n                    normalMatrix: { value: null },\n                    projectionMatrix: { value: null },\n                    cameraPosition: { value: null },\n                });\n            }\n\n            // Set the matrix uniforms\n            this.program.uniforms.projectionMatrix.value = camera.projectionMatrix;\n            this.program.uniforms.cameraPosition.value = camera.worldPosition;\n            this.program.uniforms.viewMatrix.value = camera.viewMatrix;\n            this.modelViewMatrix.multiply(camera.viewMatrix, this.worldMatrix);\n            this.normalMatrix.getNormalMatrix(this.modelViewMatrix);\n            this.program.uniforms.modelMatrix.value = this.worldMatrix;\n            this.program.uniforms.modelViewMatrix.value = this.modelViewMatrix;\n            this.program.uniforms.normalMatrix.value = this.normalMatrix;\n        }\n\n        // determine if faces need to be flipped - when mesh scaled negatively\n        let flipFaces = this.program.cullFace && this.worldMatrix.determinant() < 0;\n        this.program.use({ flipFaces });\n        this.geometry.draw({ mode: this.mode, program: this.program });\n        this.afterRenderCallbacks.forEach((f) => f && f({ mesh: this, camera }));\n    }\n}\n","// TODO: delete texture\n// TODO: use texSubImage2D for updates (video or when loaded)\n// TODO: need? encoding = linearEncoding\n// TODO: support non-compressed mipmaps uploads\n\nconst emptyPixel = new Uint8Array(4);\n\nfunction isPowerOf2(value) {\n    return (value & (value - 1)) === 0;\n}\n\nlet ID = 1;\n\nexport class Texture {\n    constructor(\n        gl,\n        {\n            image,\n            target = gl.TEXTURE_2D,\n            type = gl.UNSIGNED_BYTE,\n            format = gl.RGBA,\n            internalFormat = format,\n            wrapS = gl.CLAMP_TO_EDGE,\n            wrapT = gl.CLAMP_TO_EDGE,\n            generateMipmaps = true,\n            minFilter = generateMipmaps ? gl.NEAREST_MIPMAP_LINEAR : gl.LINEAR,\n            magFilter = gl.LINEAR,\n            premultiplyAlpha = false,\n            unpackAlignment = 4,\n            flipY = target == gl.TEXTURE_2D ? true : false,\n            anisotropy = 0,\n            level = 0,\n            width, // used for RenderTargets or Data Textures\n            height = width,\n        } = {}\n    ) {\n        this.gl = gl;\n        this.id = ID++;\n\n        this.image = image;\n        this.target = target;\n        this.type = type;\n        this.format = format;\n        this.internalFormat = internalFormat;\n        this.minFilter = minFilter;\n        this.magFilter = magFilter;\n        this.wrapS = wrapS;\n        this.wrapT = wrapT;\n        this.generateMipmaps = generateMipmaps;\n        this.premultiplyAlpha = premultiplyAlpha;\n        this.unpackAlignment = unpackAlignment;\n        this.flipY = flipY;\n        this.anisotropy = Math.min(anisotropy, this.gl.renderer.parameters.maxAnisotropy);\n        this.level = level;\n        this.width = width;\n        this.height = height;\n        this.texture = this.gl.createTexture();\n\n        this.store = {\n            image: null,\n        };\n\n        // Alias for state store to avoid redundant calls for global state\n        this.glState = this.gl.renderer.state;\n\n        // State store to avoid redundant calls for per-texture state\n        this.state = {};\n        this.state.minFilter = this.gl.NEAREST_MIPMAP_LINEAR;\n        this.state.magFilter = this.gl.LINEAR;\n        this.state.wrapS = this.gl.REPEAT;\n        this.state.wrapT = this.gl.REPEAT;\n        this.state.anisotropy = 0;\n    }\n\n    bind() {\n        // Already bound to active texture unit\n        if (this.glState.textureUnits[this.glState.activeTextureUnit] === this.id) return;\n        this.gl.bindTexture(this.target, this.texture);\n        this.glState.textureUnits[this.glState.activeTextureUnit] = this.id;\n    }\n\n    update(textureUnit = 0) {\n        const needsUpdate = !(this.image === this.store.image && !this.needsUpdate);\n\n        // Make sure that texture is bound to its texture unit\n        if (needsUpdate || this.glState.textureUnits[textureUnit] !== this.id) {\n            // set active texture unit to perform texture functions\n            this.gl.renderer.activeTexture(textureUnit);\n            this.bind();\n        }\n\n        if (!needsUpdate) return;\n        this.needsUpdate = false;\n\n        if (this.flipY !== this.glState.flipY) {\n            this.gl.pixelStorei(this.gl.UNPACK_FLIP_Y_WEBGL, this.flipY);\n            this.glState.flipY = this.flipY;\n        }\n\n        if (this.premultiplyAlpha !== this.glState.premultiplyAlpha) {\n            this.gl.pixelStorei(this.gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, this.premultiplyAlpha);\n            this.glState.premultiplyAlpha = this.premultiplyAlpha;\n        }\n\n        if (this.unpackAlignment !== this.glState.unpackAlignment) {\n            this.gl.pixelStorei(this.gl.UNPACK_ALIGNMENT, this.unpackAlignment);\n            this.glState.unpackAlignment = this.unpackAlignment;\n        }\n\n        if (this.minFilter !== this.state.minFilter) {\n            this.gl.texParameteri(this.target, this.gl.TEXTURE_MIN_FILTER, this.minFilter);\n            this.state.minFilter = this.minFilter;\n        }\n\n        if (this.magFilter !== this.state.magFilter) {\n            this.gl.texParameteri(this.target, this.gl.TEXTURE_MAG_FILTER, this.magFilter);\n            this.state.magFilter = this.magFilter;\n        }\n\n        if (this.wrapS !== this.state.wrapS) {\n            this.gl.texParameteri(this.target, this.gl.TEXTURE_WRAP_S, this.wrapS);\n            this.state.wrapS = this.wrapS;\n        }\n\n        if (this.wrapT !== this.state.wrapT) {\n            this.gl.texParameteri(this.target, this.gl.TEXTURE_WRAP_T, this.wrapT);\n            this.state.wrapT = this.wrapT;\n        }\n\n        if (this.anisotropy && this.anisotropy !== this.state.anisotropy) {\n            this.gl.texParameterf(\n                this.target,\n                this.gl.renderer.getExtension('EXT_texture_filter_anisotropic').TEXTURE_MAX_ANISOTROPY_EXT,\n                this.anisotropy\n            );\n            this.state.anisotropy = this.anisotropy;\n        }\n\n        if (this.image) {\n            if (this.image.width) {\n                this.width = this.image.width;\n                this.height = this.image.height;\n            }\n\n            if (this.target === this.gl.TEXTURE_CUBE_MAP) {\n                // For cube maps\n                for (let i = 0; i < 6; i++) {\n                    this.gl.texImage2D(\n                        this.gl.TEXTURE_CUBE_MAP_POSITIVE_X + i,\n                        this.level,\n                        this.internalFormat,\n                        this.format,\n                        this.type,\n                        this.image[i]\n                    );\n                }\n            } else if (ArrayBuffer.isView(this.image)) {\n                // Data texture\n                this.gl.texImage2D(this.target, this.level, this.internalFormat, this.width, this.height, 0, this.format, this.type, this.image);\n            } else if (this.image.isCompressedTexture) {\n                // Compressed texture\n                for (let level = 0; level < this.image.length; level++) {\n                    this.gl.compressedTexImage2D(\n                        this.target,\n                        level,\n                        this.internalFormat,\n                        this.image[level].width,\n                        this.image[level].height,\n                        0,\n                        this.image[level].data\n                    );\n                }\n            } else {\n                // Regular texture\n                this.gl.texImage2D(this.target, this.level, this.internalFormat, this.format, this.type, this.image);\n            }\n\n            if (this.generateMipmaps) {\n                // For WebGL1, if not a power of 2, turn off mips, set wrapping to clamp to edge and minFilter to linear\n                if (!this.gl.renderer.isWebgl2 && (!isPowerOf2(this.image.width) || !isPowerOf2(this.image.height))) {\n                    this.generateMipmaps = false;\n                    this.wrapS = this.wrapT = this.gl.CLAMP_TO_EDGE;\n                    this.minFilter = this.gl.LINEAR;\n                } else {\n                    this.gl.generateMipmap(this.target);\n                }\n            }\n\n            // Callback for when data is pushed to GPU\n            this.onUpdate && this.onUpdate();\n        } else {\n            if (this.target === this.gl.TEXTURE_CUBE_MAP) {\n                // Upload empty pixel for each side while no image to avoid errors while image or video loading\n                for (let i = 0; i < 6; i++) {\n                    this.gl.texImage2D(\n                        this.gl.TEXTURE_CUBE_MAP_POSITIVE_X + i,\n                        0,\n                        this.gl.RGBA,\n                        1,\n                        1,\n                        0,\n                        this.gl.RGBA,\n                        this.gl.UNSIGNED_BYTE,\n                        emptyPixel\n                    );\n                }\n            } else if (this.width) {\n                // image intentionally left null for RenderTarget\n                this.gl.texImage2D(this.target, this.level, this.internalFormat, this.width, this.height, 0, this.format, this.type, null);\n            } else {\n                // Upload empty pixel if no image to avoid errors while image or video loading\n                this.gl.texImage2D(this.target, 0, this.gl.RGBA, 1, 1, 0, this.gl.RGBA, this.gl.UNSIGNED_BYTE, emptyPixel);\n            }\n        }\n        this.store.image = this.image;\n    }\n}\n","// TODO: multi target rendering\n// TODO: test stencil and depth\n// TODO: destroy\n// TODO: blit on resize?\nimport { Texture } from './Texture.js';\n\nexport class RenderTarget {\n    constructor(\n        gl,\n        {\n            width = gl.canvas.width,\n            height = gl.canvas.height,\n            target = gl.FRAMEBUFFER,\n            color = 1, // number of color attachments\n            depth = true,\n            stencil = false,\n            depthTexture = false, // note - stencil breaks\n            wrapS = gl.CLAMP_TO_EDGE,\n            wrapT = gl.CLAMP_TO_EDGE,\n            minFilter = gl.LINEAR,\n            magFilter = minFilter,\n            type = gl.UNSIGNED_BYTE,\n            format = gl.RGBA,\n            internalFormat = format,\n            unpackAlignment,\n            premultiplyAlpha,\n        } = {}\n    ) {\n        this.gl = gl;\n        this.width = width;\n        this.height = height;\n        this.depth = depth;\n        this.buffer = this.gl.createFramebuffer();\n        this.target = target;\n        this.gl.bindFramebuffer(this.target, this.buffer);\n\n        this.textures = [];\n        const drawBuffers = [];\n\n        // create and attach required num of color textures\n        for (let i = 0; i < color; i++) {\n            this.textures.push(\n                new Texture(gl, {\n                    width,\n                    height,\n                    wrapS,\n                    wrapT,\n                    minFilter,\n                    magFilter,\n                    type,\n                    format,\n                    internalFormat,\n                    unpackAlignment,\n                    premultiplyAlpha,\n                    flipY: false,\n                    generateMipmaps: false,\n                })\n            );\n            this.textures[i].update();\n            this.gl.framebufferTexture2D(this.target, this.gl.COLOR_ATTACHMENT0 + i, this.gl.TEXTURE_2D, this.textures[i].texture, 0 /* level */);\n            drawBuffers.push(this.gl.COLOR_ATTACHMENT0 + i);\n        }\n\n        // For multi-render targets shader access\n        if (drawBuffers.length > 1) this.gl.renderer.drawBuffers(drawBuffers);\n\n        // alias for majority of use cases\n        this.texture = this.textures[0];\n\n        // note depth textures break stencil - so can't use together\n        if (depthTexture && (this.gl.renderer.isWebgl2 || this.gl.renderer.getExtension('WEBGL_depth_texture'))) {\n            this.depthTexture = new Texture(gl, {\n                width,\n                height,\n                minFilter: this.gl.NEAREST,\n                magFilter: this.gl.NEAREST,\n                format: this.gl.DEPTH_COMPONENT,\n                internalFormat: gl.renderer.isWebgl2 ? this.gl.DEPTH_COMPONENT16 : this.gl.DEPTH_COMPONENT,\n                type: this.gl.UNSIGNED_INT,\n            });\n            this.depthTexture.update();\n            this.gl.framebufferTexture2D(this.target, this.gl.DEPTH_ATTACHMENT, this.gl.TEXTURE_2D, this.depthTexture.texture, 0 /* level */);\n        } else {\n            // Render buffers\n            if (depth && !stencil) {\n                this.depthBuffer = this.gl.createRenderbuffer();\n                this.gl.bindRenderbuffer(this.gl.RENDERBUFFER, this.depthBuffer);\n                this.gl.renderbufferStorage(this.gl.RENDERBUFFER, this.gl.DEPTH_COMPONENT16, width, height);\n                this.gl.framebufferRenderbuffer(this.target, this.gl.DEPTH_ATTACHMENT, this.gl.RENDERBUFFER, this.depthBuffer);\n            }\n\n            if (stencil && !depth) {\n                this.stencilBuffer = this.gl.createRenderbuffer();\n                this.gl.bindRenderbuffer(this.gl.RENDERBUFFER, this.stencilBuffer);\n                this.gl.renderbufferStorage(this.gl.RENDERBUFFER, this.gl.STENCIL_INDEX8, width, height);\n                this.gl.framebufferRenderbuffer(this.target, this.gl.STENCIL_ATTACHMENT, this.gl.RENDERBUFFER, this.stencilBuffer);\n            }\n\n            if (depth && stencil) {\n                this.depthStencilBuffer = this.gl.createRenderbuffer();\n                this.gl.bindRenderbuffer(this.gl.RENDERBUFFER, this.depthStencilBuffer);\n                this.gl.renderbufferStorage(this.gl.RENDERBUFFER, this.gl.DEPTH_STENCIL, width, height);\n                this.gl.framebufferRenderbuffer(this.target, this.gl.DEPTH_STENCIL_ATTACHMENT, this.gl.RENDERBUFFER, this.depthStencilBuffer);\n            }\n        }\n\n        this.gl.bindFramebuffer(this.target, null);\n    }\n}\n","const NAMES = {\n    black: '#000000',\n    white: '#ffffff',\n    red: '#ff0000',\n    green: '#00ff00',\n    blue: '#0000ff',\n    fuchsia: '#ff00ff',\n    cyan: '#00ffff',\n    yellow: '#ffff00',\n    orange: '#ff8000',\n};\n\nexport function hexToRGB(hex) {\n    if (hex.length === 4) hex = hex[0] + hex[1] + hex[1] + hex[2] + hex[2] + hex[3] + hex[3];\n    const rgb = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n    if (!rgb) console.warn(`Unable to convert hex string ${hex} to rgb values`);\n    return [parseInt(rgb[1], 16) / 255, parseInt(rgb[2], 16) / 255, parseInt(rgb[3], 16) / 255];\n}\n\nexport function numberToRGB(num) {\n    num = parseInt(num);\n    return [((num >> 16) & 255) / 255, ((num >> 8) & 255) / 255, (num & 255) / 255];\n}\n\nexport function parseColor(color) {\n    // Empty\n    if (color === undefined) return [0, 0, 0];\n\n    // Decimal\n    if (arguments.length === 3) return arguments;\n\n    // Number\n    if (!isNaN(color)) return numberToRGB(color);\n\n    // Hex\n    if (color[0] === '#') return hexToRGB(color);\n\n    // Names\n    if (NAMES[color.toLowerCase()]) return hexToRGB(NAMES[color.toLowerCase()]);\n\n    console.warn('Color format not recognised');\n    return [0, 0, 0];\n}\n","import * as ColorFunc from './functions/ColorFunc.js';\n\n// Color stored as an array of RGB decimal values (between 0 > 1)\n// Constructor and set method accept following formats:\n// new Color() - Empty (defaults to black)\n// new Color([0.2, 0.4, 1.0]) - Decimal Array (or another Color instance)\n// new Color(0.7, 0.0, 0.1) - Decimal RGB values\n// new Color('#ff0000') - Hex string\n// new Color('#ccc') - Short-hand Hex string\n// new Color(0x4f27e8) - Number\n// new Color('red') - Color name string (short list in ColorFunc.js)\n\nexport class Color extends Array {\n    constructor(color) {\n        if (Array.isArray(color)) return super(...color);\n        return super(...ColorFunc.parseColor(...arguments));\n    }\n\n    get r() {\n        return this[0];\n    }\n\n    get g() {\n        return this[1];\n    }\n\n    get b() {\n        return this[2];\n    }\n\n    set r(v) {\n        this[0] = v;\n    }\n\n    set g(v) {\n        this[1] = v;\n    }\n\n    set b(v) {\n        this[2] = v;\n    }\n\n    set(color) {\n        if (Array.isArray(color)) return this.copy(color);\n        return this.copy(ColorFunc.parseColor(...arguments));\n    }\n\n    copy(v) {\n        this[0] = v[0];\n        this[1] = v[1];\n        this[2] = v[2];\n        return this;\n    }\n}\n","const EPSILON = 0.000001;\n\n/**\n * Copy the values from one vec2 to another\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the source vector\n * @returns {vec2} out\n */\nexport function copy(out, a) {\n    out[0] = a[0];\n    out[1] = a[1];\n    return out;\n}\n\n/**\n * Set the components of a vec2 to the given values\n *\n * @param {vec2} out the receiving vector\n * @param {Number} x X component\n * @param {Number} y Y component\n * @returns {vec2} out\n */\nexport function set(out, x, y) {\n    out[0] = x;\n    out[1] = y;\n    return out;\n}\n\n/**\n * Adds two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec2} out\n */\nexport function add(out, a, b) {\n    out[0] = a[0] + b[0];\n    out[1] = a[1] + b[1];\n    return out;\n}\n\n/**\n * Subtracts vector b from vector a\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec2} out\n */\nexport function subtract(out, a, b) {\n    out[0] = a[0] - b[0];\n    out[1] = a[1] - b[1];\n    return out;\n}\n\n/**\n * Multiplies two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec2} out\n */\nexport function multiply(out, a, b) {\n    out[0] = a[0] * b[0];\n    out[1] = a[1] * b[1];\n    return out;\n}\n\n/**\n * Divides two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec2} out\n */\nexport function divide(out, a, b) {\n    out[0] = a[0] / b[0];\n    out[1] = a[1] / b[1];\n    return out;\n}\n\n/**\n * Scales a vec2 by a scalar number\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {vec2} out\n */\nexport function scale(out, a, b) {\n    out[0] = a[0] * b;\n    out[1] = a[1] * b;\n    return out;\n}\n\n/**\n * Calculates the euclidian distance between two vec2's\n *\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {Number} distance between a and b\n */\nexport function distance(a, b) {\n    var x = b[0] - a[0],\n        y = b[1] - a[1];\n    return Math.sqrt(x * x + y * y);\n}\n\n/**\n * Calculates the squared euclidian distance between two vec2's\n *\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {Number} squared distance between a and b\n */\nexport function squaredDistance(a, b) {\n    var x = b[0] - a[0],\n        y = b[1] - a[1];\n    return x * x + y * y;\n}\n\n/**\n * Calculates the length of a vec2\n *\n * @param {vec2} a vector to calculate length of\n * @returns {Number} length of a\n */\nexport function length(a) {\n    var x = a[0],\n        y = a[1];\n    return Math.sqrt(x * x + y * y);\n}\n\n/**\n * Calculates the squared length of a vec2\n *\n * @param {vec2} a vector to calculate squared length of\n * @returns {Number} squared length of a\n */\nexport function squaredLength(a) {\n    var x = a[0],\n        y = a[1];\n    return x * x + y * y;\n}\n\n/**\n * Negates the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a vector to negate\n * @returns {vec2} out\n */\nexport function negate(out, a) {\n    out[0] = -a[0];\n    out[1] = -a[1];\n    return out;\n}\n\n/**\n * Returns the inverse of the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a vector to invert\n * @returns {vec2} out\n */\nexport function inverse(out, a) {\n    out[0] = 1.0 / a[0];\n    out[1] = 1.0 / a[1];\n    return out;\n}\n\n/**\n * Normalize a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a vector to normalize\n * @returns {vec2} out\n */\nexport function normalize(out, a) {\n    var x = a[0],\n        y = a[1];\n    var len = x * x + y * y;\n    if (len > 0) {\n        //TODO: evaluate use of glm_invsqrt here?\n        len = 1 / Math.sqrt(len);\n    }\n    out[0] = a[0] * len;\n    out[1] = a[1] * len;\n    return out;\n}\n\n/**\n * Calculates the dot product of two vec2's\n *\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {Number} dot product of a and b\n */\nexport function dot(a, b) {\n    return a[0] * b[0] + a[1] * b[1];\n}\n\n/**\n * Computes the cross product of two vec2's\n * Note that the cross product returns a scalar\n *\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {Number} cross product of a and b\n */\nexport function cross(a, b) {\n    return a[0] * b[1] - a[1] * b[0];\n}\n\n/**\n * Performs a linear interpolation between two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @param {Number} t interpolation amount between the two inputs\n * @returns {vec2} out\n */\nexport function lerp(out, a, b, t) {\n    var ax = a[0],\n        ay = a[1];\n    out[0] = ax + t * (b[0] - ax);\n    out[1] = ay + t * (b[1] - ay);\n    return out;\n}\n\n/**\n * Transforms the vec2 with a mat2\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the vector to transform\n * @param {mat2} m matrix to transform with\n * @returns {vec2} out\n */\nexport function transformMat2(out, a, m) {\n    var x = a[0],\n        y = a[1];\n    out[0] = m[0] * x + m[2] * y;\n    out[1] = m[1] * x + m[3] * y;\n    return out;\n}\n\n/**\n * Transforms the vec2 with a mat2d\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the vector to transform\n * @param {mat2d} m matrix to transform with\n * @returns {vec2} out\n */\nexport function transformMat2d(out, a, m) {\n    var x = a[0],\n        y = a[1];\n    out[0] = m[0] * x + m[2] * y + m[4];\n    out[1] = m[1] * x + m[3] * y + m[5];\n    return out;\n}\n\n/**\n * Transforms the vec2 with a mat3\n * 3rd vector component is implicitly '1'\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the vector to transform\n * @param {mat3} m matrix to transform with\n * @returns {vec2} out\n */\nexport function transformMat3(out, a, m) {\n    var x = a[0],\n        y = a[1];\n    out[0] = m[0] * x + m[3] * y + m[6];\n    out[1] = m[1] * x + m[4] * y + m[7];\n    return out;\n}\n\n/**\n * Transforms the vec2 with a mat4\n * 3rd vector component is implicitly '0'\n * 4th vector component is implicitly '1'\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the vector to transform\n * @param {mat4} m matrix to transform with\n * @returns {vec2} out\n */\nexport function transformMat4(out, a, m) {\n    let x = a[0];\n    let y = a[1];\n    out[0] = m[0] * x + m[4] * y + m[12];\n    out[1] = m[1] * x + m[5] * y + m[13];\n    return out;\n}\n\n/**\n * Returns whether or not the vectors exactly have the same elements in the same position (when compared with ===)\n *\n * @param {vec2} a The first vector.\n * @param {vec2} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\nexport function exactEquals(a, b) {\n    return a[0] === b[0] && a[1] === b[1];\n}\n","import * as Vec2Func from './functions/Vec2Func.js';\n\nexport class Vec2 extends Array {\n    constructor(x = 0, y = x) {\n        super(x, y);\n        return this;\n    }\n\n    get x() {\n        return this[0];\n    }\n\n    get y() {\n        return this[1];\n    }\n\n    set x(v) {\n        this[0] = v;\n    }\n\n    set y(v) {\n        this[1] = v;\n    }\n\n    set(x, y = x) {\n        if (x.length) return this.copy(x);\n        Vec2Func.set(this, x, y);\n        return this;\n    }\n\n    copy(v) {\n        Vec2Func.copy(this, v);\n        return this;\n    }\n\n    add(va, vb) {\n        if (vb) Vec2Func.add(this, va, vb);\n        else Vec2Func.add(this, this, va);\n        return this;\n    }\n\n    sub(va, vb) {\n        if (vb) Vec2Func.subtract(this, va, vb);\n        else Vec2Func.subtract(this, this, va);\n        return this;\n    }\n\n    multiply(v) {\n        if (v.length) Vec2Func.multiply(this, this, v);\n        else Vec2Func.scale(this, this, v);\n        return this;\n    }\n\n    divide(v) {\n        if (v.length) Vec2Func.divide(this, this, v);\n        else Vec2Func.scale(this, this, 1 / v);\n        return this;\n    }\n\n    inverse(v = this) {\n        Vec2Func.inverse(this, v);\n        return this;\n    }\n\n    // Can't use 'length' as Array.prototype uses it\n    len() {\n        return Vec2Func.length(this);\n    }\n\n    distance(v) {\n        if (v) return Vec2Func.distance(this, v);\n        else return Vec2Func.length(this);\n    }\n\n    squaredLen() {\n        return this.squaredDistance();\n    }\n\n    squaredDistance(v) {\n        if (v) return Vec2Func.squaredDistance(this, v);\n        else return Vec2Func.squaredLength(this);\n    }\n\n    negate(v = this) {\n        Vec2Func.negate(this, v);\n        return this;\n    }\n\n    cross(va, vb) {\n        if (vb) return Vec2Func.cross(va, vb);\n        return Vec2Func.cross(this, va);\n    }\n\n    scale(v) {\n        Vec2Func.scale(this, this, v);\n        return this;\n    }\n\n    normalize() {\n        Vec2Func.normalize(this, this);\n        return this;\n    }\n\n    dot(v) {\n        return Vec2Func.dot(this, v);\n    }\n\n    equals(v) {\n        return Vec2Func.exactEquals(this, v);\n    }\n\n    applyMatrix3(mat3) {\n        Vec2Func.transformMat3(this, this, mat3);\n        return this;\n    }\n\n    applyMatrix4(mat4) {\n        Vec2Func.transformMat4(this, this, mat4);\n        return this;\n    }\n\n    lerp(v, a) {\n        Vec2Func.lerp(this, this, v, a);\n    }\n\n    clone() {\n        return new Vec2(this[0], this[1]);\n    }\n\n    fromArray(a, o = 0) {\n        this[0] = a[o];\n        this[1] = a[o + 1];\n        return this;\n    }\n\n    toArray(a = [], o = 0) {\n        a[o] = this[0];\n        a[o + 1] = this[1];\n        return a;\n    }\n}\n","import { Geometry } from '../core/Geometry.js';\n\nexport class Plane extends Geometry {\n    constructor(gl, { width = 1, height = 1, widthSegments = 1, heightSegments = 1, attributes = {} } = {}) {\n        const wSegs = widthSegments;\n        const hSegs = heightSegments;\n\n        // Determine length of arrays\n        const num = (wSegs + 1) * (hSegs + 1);\n        const numIndices = wSegs * hSegs * 6;\n\n        // Generate empty arrays once\n        const position = new Float32Array(num * 3);\n        const normal = new Float32Array(num * 3);\n        const uv = new Float32Array(num * 2);\n        const index = num > 65536 ? new Uint32Array(numIndices) : new Uint16Array(numIndices);\n\n        Plane.buildPlane(position, normal, uv, index, width, height, 0, wSegs, hSegs);\n\n        Object.assign(attributes, {\n            position: { size: 3, data: position },\n            normal: { size: 3, data: normal },\n            uv: { size: 2, data: uv },\n            index: { data: index },\n        });\n\n        super(gl, attributes);\n    }\n\n    static buildPlane(position, normal, uv, index, width, height, depth, wSegs, hSegs, u = 0, v = 1, w = 2, uDir = 1, vDir = -1, i = 0, ii = 0) {\n        const io = i;\n        const segW = width / wSegs;\n        const segH = height / hSegs;\n\n        for (let iy = 0; iy <= hSegs; iy++) {\n            let y = iy * segH - height / 2;\n            for (let ix = 0; ix <= wSegs; ix++, i++) {\n                let x = ix * segW - width / 2;\n\n                position[i * 3 + u] = x * uDir;\n                position[i * 3 + v] = y * vDir;\n                position[i * 3 + w] = depth / 2;\n\n                normal[i * 3 + u] = 0;\n                normal[i * 3 + v] = 0;\n                normal[i * 3 + w] = depth >= 0 ? 1 : -1;\n\n                uv[i * 2] = ix / wSegs;\n                uv[i * 2 + 1] = 1 - iy / hSegs;\n\n                if (iy === hSegs || ix === wSegs) continue;\n                let a = io + ix + iy * (wSegs + 1);\n                let b = io + ix + (iy + 1) * (wSegs + 1);\n                let c = io + ix + (iy + 1) * (wSegs + 1) + 1;\n                let d = io + ix + iy * (wSegs + 1) + 1;\n\n                index[ii * 6] = a;\n                index[ii * 6 + 1] = b;\n                index[ii * 6 + 2] = d;\n                index[ii * 6 + 3] = b;\n                index[ii * 6 + 4] = c;\n                index[ii * 6 + 5] = d;\n                ii++;\n            }\n        }\n    }\n}\n","import { Geometry } from '../core/Geometry.js';\n\nexport class Triangle extends Geometry {\n    constructor(gl, { attributes = {} } = {}) {\n        Object.assign(attributes, {\n            position: { size: 2, data: new Float32Array([-1, -1, 3, -1, -1, 3]) },\n            uv: { size: 2, data: new Float32Array([0, 0, 2, 0, 0, 2]) },\n        });\n\n        super(gl, attributes);\n    }\n}\n","// Based from ThreeJS' OrbitControls class, rewritten using es6 with some additions and subtractions.\n// TODO: abstract event handlers so can be fed from other sources\n// TODO: make scroll zoom more accurate than just >/< zero\n// TODO: be able to pass in new camera position\n\nimport { Vec3 } from '../math/Vec3.js';\nimport { Vec2 } from '../math/Vec2.js';\n\nconst STATE = { NONE: -1, ROTATE: 0, DOLLY: 1, PAN: 2, DOLLY_PAN: 3 };\nconst tempVec3 = new Vec3();\nconst tempVec2a = new Vec2();\nconst tempVec2b = new Vec2();\n\nexport function Orbit(\n    object,\n    {\n        element = document,\n        enabled = true,\n        target = new Vec3(),\n        ease = 0.25,\n        inertia = 0.85,\n        enableRotate = true,\n        rotateSpeed = 0.1,\n        autoRotate = false,\n        autoRotateSpeed = 1.0,\n        enableZoom = true,\n        zoomSpeed = 1,\n        enablePan = true,\n        panSpeed = 0.1,\n        minPolarAngle = 0,\n        maxPolarAngle = Math.PI,\n        minAzimuthAngle = -Infinity,\n        maxAzimuthAngle = Infinity,\n        minDistance = 0,\n        maxDistance = Infinity,\n    } = {}\n) {\n    this.enabled = enabled;\n    this.target = target;\n\n    // Catch attempts to disable - set to 1 so has no effect\n    ease = ease || 1;\n    inertia = inertia || 0;\n\n    this.minDistance = minDistance;\n    this.maxDistance = maxDistance;\n\n    // current position in sphericalTarget coordinates\n    const sphericalDelta = { radius: 1, phi: 0, theta: 0 };\n    const sphericalTarget = { radius: 1, phi: 0, theta: 0 };\n    const spherical = { radius: 1, phi: 0, theta: 0 };\n    const panDelta = new Vec3();\n\n    // Grab initial position values\n    const offset = new Vec3();\n    offset.copy(object.position).sub(this.target);\n    spherical.radius = sphericalTarget.radius = offset.distance();\n    spherical.theta = sphericalTarget.theta = Math.atan2(offset.x, offset.z);\n    spherical.phi = sphericalTarget.phi = Math.acos(Math.min(Math.max(offset.y / sphericalTarget.radius, -1), 1));\n\n    this.offset = offset;\n\n    this.update = () => {\n        if (autoRotate) {\n            handleAutoRotate();\n        }\n\n        // apply delta\n        sphericalTarget.radius *= sphericalDelta.radius;\n        sphericalTarget.theta += sphericalDelta.theta;\n        sphericalTarget.phi += sphericalDelta.phi;\n\n        // apply boundaries\n        sphericalTarget.theta = Math.max(minAzimuthAngle, Math.min(maxAzimuthAngle, sphericalTarget.theta));\n        sphericalTarget.phi = Math.max(minPolarAngle, Math.min(maxPolarAngle, sphericalTarget.phi));\n        sphericalTarget.radius = Math.max(this.minDistance, Math.min(this.maxDistance, sphericalTarget.radius));\n\n        // ease values\n        spherical.phi += (sphericalTarget.phi - spherical.phi) * ease;\n        spherical.theta += (sphericalTarget.theta - spherical.theta) * ease;\n        spherical.radius += (sphericalTarget.radius - spherical.radius) * ease;\n\n        // apply pan to target. As offset is relative to target, it also shifts\n        this.target.add(panDelta);\n\n        // apply rotation to offset\n        let sinPhiRadius = spherical.radius * Math.sin(Math.max(0.000001, spherical.phi));\n        offset.x = sinPhiRadius * Math.sin(spherical.theta);\n        offset.y = spherical.radius * Math.cos(spherical.phi);\n        offset.z = sinPhiRadius * Math.cos(spherical.theta);\n\n        // Apply updated values to object\n        object.position.copy(this.target).add(offset);\n        object.lookAt(this.target);\n\n        // Apply inertia to values\n        sphericalDelta.theta *= inertia;\n        sphericalDelta.phi *= inertia;\n        panDelta.multiply(inertia);\n\n        // Reset scale every frame to avoid applying scale multiple times\n        sphericalDelta.radius = 1;\n    };\n\n    // Updates internals with new position\n    this.forcePosition = () => {\n        offset.copy(object.position).sub(this.target);\n        spherical.radius = sphericalTarget.radius = offset.distance();\n        spherical.theta = sphericalTarget.theta = Math.atan2(offset.x, offset.z);\n        spherical.phi = sphericalTarget.phi = Math.acos(Math.min(Math.max(offset.y / sphericalTarget.radius, -1), 1));\n        object.lookAt(this.target);\n    };\n\n    // Everything below here just updates panDelta and sphericalDelta\n    // Using those two objects' values, the orbit is calculated\n\n    const rotateStart = new Vec2();\n    const panStart = new Vec2();\n    const dollyStart = new Vec2();\n\n    let state = STATE.NONE;\n    this.mouseButtons = { ORBIT: 0, ZOOM: 1, PAN: 2 };\n\n    function getZoomScale() {\n        return Math.pow(0.95, zoomSpeed);\n    }\n\n    function panLeft(distance, m) {\n        tempVec3.set(m[0], m[1], m[2]);\n        tempVec3.multiply(-distance);\n        panDelta.add(tempVec3);\n    }\n\n    function panUp(distance, m) {\n        tempVec3.set(m[4], m[5], m[6]);\n        tempVec3.multiply(distance);\n        panDelta.add(tempVec3);\n    }\n\n    const pan = (deltaX, deltaY) => {\n        let el = element === document ? document.body : element;\n        tempVec3.copy(object.position).sub(this.target);\n        let targetDistance = tempVec3.distance();\n        targetDistance *= Math.tan((((object.fov || 45) / 2) * Math.PI) / 180.0);\n        panLeft((2 * deltaX * targetDistance) / el.clientHeight, object.matrix);\n        panUp((2 * deltaY * targetDistance) / el.clientHeight, object.matrix);\n    };\n\n    function dolly(dollyScale) {\n        sphericalDelta.radius /= dollyScale;\n    }\n\n    function handleAutoRotate() {\n        const angle = ((2 * Math.PI) / 60 / 60) * autoRotateSpeed;\n        sphericalDelta.theta -= angle;\n    }\n\n    function handleMoveRotate(x, y) {\n        tempVec2a.set(x, y);\n        tempVec2b.sub(tempVec2a, rotateStart).multiply(rotateSpeed);\n        let el = element === document ? document.body : element;\n        sphericalDelta.theta -= (2 * Math.PI * tempVec2b.x) / el.clientHeight;\n        sphericalDelta.phi -= (2 * Math.PI * tempVec2b.y) / el.clientHeight;\n        rotateStart.copy(tempVec2a);\n    }\n\n    function handleMouseMoveDolly(e) {\n        tempVec2a.set(e.clientX, e.clientY);\n        tempVec2b.sub(tempVec2a, dollyStart);\n        if (tempVec2b.y > 0) {\n            dolly(getZoomScale());\n        } else if (tempVec2b.y < 0) {\n            dolly(1 / getZoomScale());\n        }\n        dollyStart.copy(tempVec2a);\n    }\n\n    function handleMovePan(x, y) {\n        tempVec2a.set(x, y);\n        tempVec2b.sub(tempVec2a, panStart).multiply(panSpeed);\n        pan(tempVec2b.x, tempVec2b.y);\n        panStart.copy(tempVec2a);\n    }\n\n    function handleTouchStartDollyPan(e) {\n        if (enableZoom) {\n            let dx = e.touches[0].pageX - e.touches[1].pageX;\n            let dy = e.touches[0].pageY - e.touches[1].pageY;\n            let distance = Math.sqrt(dx * dx + dy * dy);\n            dollyStart.set(0, distance);\n        }\n\n        if (enablePan) {\n            let x = 0.5 * (e.touches[0].pageX + e.touches[1].pageX);\n            let y = 0.5 * (e.touches[0].pageY + e.touches[1].pageY);\n            panStart.set(x, y);\n        }\n    }\n\n    function handleTouchMoveDollyPan(e) {\n        if (enableZoom) {\n            let dx = e.touches[0].pageX - e.touches[1].pageX;\n            let dy = e.touches[0].pageY - e.touches[1].pageY;\n            let distance = Math.sqrt(dx * dx + dy * dy);\n            tempVec2a.set(0, distance);\n            tempVec2b.set(0, Math.pow(tempVec2a.y / dollyStart.y, zoomSpeed));\n            dolly(tempVec2b.y);\n            dollyStart.copy(tempVec2a);\n        }\n\n        if (enablePan) {\n            let x = 0.5 * (e.touches[0].pageX + e.touches[1].pageX);\n            let y = 0.5 * (e.touches[0].pageY + e.touches[1].pageY);\n            handleMovePan(x, y);\n        }\n    }\n\n    const onMouseDown = (e) => {\n        if (!this.enabled) return;\n\n        switch (e.button) {\n            case this.mouseButtons.ORBIT:\n                if (enableRotate === false) return;\n                rotateStart.set(e.clientX, e.clientY);\n                state = STATE.ROTATE;\n                break;\n            case this.mouseButtons.ZOOM:\n                if (enableZoom === false) return;\n                dollyStart.set(e.clientX, e.clientY);\n                state = STATE.DOLLY;\n                break;\n            case this.mouseButtons.PAN:\n                if (enablePan === false) return;\n                panStart.set(e.clientX, e.clientY);\n                state = STATE.PAN;\n                break;\n        }\n\n        if (state !== STATE.NONE) {\n            window.addEventListener('mousemove', onMouseMove, false);\n            window.addEventListener('mouseup', onMouseUp, false);\n        }\n    };\n\n    const onMouseMove = (e) => {\n        if (!this.enabled) return;\n\n        switch (state) {\n            case STATE.ROTATE:\n                if (enableRotate === false) return;\n                handleMoveRotate(e.clientX, e.clientY);\n                break;\n            case STATE.DOLLY:\n                if (enableZoom === false) return;\n                handleMouseMoveDolly(e);\n                break;\n            case STATE.PAN:\n                if (enablePan === false) return;\n                handleMovePan(e.clientX, e.clientY);\n                break;\n        }\n    };\n\n    const onMouseUp = () => {\n        window.removeEventListener('mousemove', onMouseMove, false);\n        window.removeEventListener('mouseup', onMouseUp, false);\n        state = STATE.NONE;\n    };\n\n    const onMouseWheel = (e) => {\n        if (!this.enabled || !enableZoom || (state !== STATE.NONE && state !== STATE.ROTATE)) return;\n        e.stopPropagation();\n        e.preventDefault();\n\n        if (e.deltaY < 0) {\n            dolly(1 / getZoomScale());\n        } else if (e.deltaY > 0) {\n            dolly(getZoomScale());\n        }\n    };\n\n    const onTouchStart = (e) => {\n        if (!this.enabled) return;\n        e.preventDefault();\n\n        switch (e.touches.length) {\n            case 1:\n                if (enableRotate === false) return;\n                rotateStart.set(e.touches[0].pageX, e.touches[0].pageY);\n                state = STATE.ROTATE;\n                break;\n            case 2:\n                if (enableZoom === false && enablePan === false) return;\n                handleTouchStartDollyPan(e);\n                state = STATE.DOLLY_PAN;\n                break;\n            default:\n                state = STATE.NONE;\n        }\n    };\n\n    const onTouchMove = (e) => {\n        if (!this.enabled) return;\n        e.preventDefault();\n        e.stopPropagation();\n\n        switch (e.touches.length) {\n            case 1:\n                if (enableRotate === false) return;\n                handleMoveRotate(e.touches[0].pageX, e.touches[0].pageY);\n                break;\n            case 2:\n                if (enableZoom === false && enablePan === false) return;\n                handleTouchMoveDollyPan(e);\n                break;\n            default:\n                state = STATE.NONE;\n        }\n    };\n\n    const onTouchEnd = () => {\n        if (!this.enabled) return;\n        state = STATE.NONE;\n    };\n\n    const onContextMenu = (e) => {\n        if (!this.enabled) return;\n        e.preventDefault();\n    };\n\n    function addHandlers() {\n        element.addEventListener('contextmenu', onContextMenu, false);\n        element.addEventListener('mousedown', onMouseDown, false);\n        element.addEventListener('wheel', onMouseWheel, { passive: false });\n        element.addEventListener('touchstart', onTouchStart, { passive: false });\n        element.addEventListener('touchend', onTouchEnd, false);\n        element.addEventListener('touchmove', onTouchMove, { passive: false });\n    }\n\n    this.remove = function () {\n        element.removeEventListener('contextmenu', onContextMenu);\n        element.removeEventListener('mousedown', onMouseDown);\n        element.removeEventListener('wheel', onMouseWheel);\n        element.removeEventListener('touchstart', onTouchStart);\n        element.removeEventListener('touchend', onTouchEnd);\n        element.removeEventListener('touchmove', onTouchMove);\n        window.removeEventListener('mousemove', onMouseMove);\n        window.removeEventListener('mouseup', onMouseUp);\n    };\n\n    addHandlers();\n}\n","// TODO: barycentric code shouldn't be here, but where?\n// TODO: SphereCast?\n\nimport { Vec2 } from '../math/Vec2.js';\nimport { Vec3 } from '../math/Vec3.js';\nimport { Mat4 } from '../math/Mat4.js';\n\nconst tempVec2a = new Vec2();\nconst tempVec2b = new Vec2();\nconst tempVec2c = new Vec2();\n\nconst tempVec3a = new Vec3();\nconst tempVec3b = new Vec3();\nconst tempVec3c = new Vec3();\nconst tempVec3d = new Vec3();\nconst tempVec3e = new Vec3();\nconst tempVec3f = new Vec3();\nconst tempVec3g = new Vec3();\nconst tempVec3h = new Vec3();\nconst tempVec3i = new Vec3();\nconst tempVec3j = new Vec3();\nconst tempVec3k = new Vec3();\n\nconst tempMat4 = new Mat4();\n\nexport class Raycast {\n    constructor() {\n        this.origin = new Vec3();\n        this.direction = new Vec3();\n    }\n\n    // Set ray from mouse unprojection\n    castMouse(camera, mouse = [0, 0]) {\n        if (camera.type === 'orthographic') {\n            // Set origin\n            // Since camera is orthographic, origin is not the camera position\n            const { left, right, bottom, top, zoom } = camera;\n            const x = left / zoom + ((right - left) / zoom) * (mouse[0] * 0.5 + 0.5);\n            const y = bottom / zoom + ((top - bottom) / zoom) * (mouse[1] * 0.5 + 0.5);\n            this.origin.set(x, y, 0);\n            this.origin.applyMatrix4(camera.worldMatrix);\n\n            // Set direction\n            // https://community.khronos.org/t/get-direction-from-transformation-matrix-or-quat/65502/2\n            this.direction.x = -camera.worldMatrix[8];\n            this.direction.y = -camera.worldMatrix[9];\n            this.direction.z = -camera.worldMatrix[10];\n        } else {\n            // Set origin\n            camera.worldMatrix.getTranslation(this.origin);\n\n            // Set direction\n            this.direction.set(mouse[0], mouse[1], 0.5);\n            camera.unproject(this.direction);\n            this.direction.sub(this.origin).normalize();\n        }\n    }\n\n    intersectBounds(meshes, { maxDistance, output = [] } = {}) {\n        if (!Array.isArray(meshes)) meshes = [meshes];\n\n        const invWorldMat4 = tempMat4;\n        const origin = tempVec3a;\n        const direction = tempVec3b;\n\n        const hits = output;\n        hits.length = 0;\n\n        meshes.forEach((mesh) => {\n            // Create bounds\n            if (!mesh.geometry.bounds || mesh.geometry.bounds.radius === Infinity) mesh.geometry.computeBoundingSphere();\n            const bounds = mesh.geometry.bounds;\n            invWorldMat4.inverse(mesh.worldMatrix);\n\n            // Get max distance locally\n            let localMaxDistance;\n            if (maxDistance) {\n                direction.copy(this.direction).scaleRotateMatrix4(invWorldMat4);\n                localMaxDistance = maxDistance * direction.len();\n            }\n\n            // Take world space ray and make it object space to align with bounding box\n            origin.copy(this.origin).applyMatrix4(invWorldMat4);\n            direction.copy(this.direction).transformDirection(invWorldMat4);\n\n            // Break out early if bounds too far away from origin\n            if (maxDistance) {\n                if (origin.distance(bounds.center) - bounds.radius > localMaxDistance) return;\n            }\n\n            let localDistance = 0;\n\n            // Check origin isn't inside bounds before testing intersection\n            if (mesh.geometry.raycast === 'sphere') {\n                if (origin.distance(bounds.center) > bounds.radius) {\n                    localDistance = this.intersectSphere(bounds, origin, direction);\n                    if (!localDistance) return;\n                }\n            } else {\n                if (\n                    origin.x < bounds.min.x ||\n                    origin.x > bounds.max.x ||\n                    origin.y < bounds.min.y ||\n                    origin.y > bounds.max.y ||\n                    origin.z < bounds.min.z ||\n                    origin.z > bounds.max.z\n                ) {\n                    localDistance = this.intersectBox(bounds, origin, direction);\n                    if (!localDistance) return;\n                }\n            }\n\n            if (maxDistance && localDistance > localMaxDistance) return;\n\n            // Create object on mesh to avoid generating lots of objects\n            if (!mesh.hit) mesh.hit = { localPoint: new Vec3(), point: new Vec3() };\n\n            mesh.hit.localPoint.copy(direction).multiply(localDistance).add(origin);\n            mesh.hit.point.copy(mesh.hit.localPoint).applyMatrix4(mesh.worldMatrix);\n            mesh.hit.distance = mesh.hit.point.distance(this.origin);\n\n            hits.push(mesh);\n        });\n\n        hits.sort((a, b) => a.hit.distance - b.hit.distance);\n        return hits;\n    }\n\n    intersectMeshes(meshes, { cullFace = true, maxDistance, includeUV = true, includeNormal = true, output = [] } = {}) {\n        // Test bounds first before testing geometry\n        const hits = this.intersectBounds(meshes, { maxDistance, output });\n        if (!hits.length) return hits;\n\n        const invWorldMat4 = tempMat4;\n        const origin = tempVec3a;\n        const direction = tempVec3b;\n        const a = tempVec3c;\n        const b = tempVec3d;\n        const c = tempVec3e;\n        const closestFaceNormal = tempVec3f;\n        const faceNormal = tempVec3g;\n        const barycoord = tempVec3h;\n        const uvA = tempVec2a;\n        const uvB = tempVec2b;\n        const uvC = tempVec2c;\n\n        for (let i = hits.length - 1; i >= 0; i--) {\n            const mesh = hits[i];\n            invWorldMat4.inverse(mesh.worldMatrix);\n\n            // Get max distance locally\n            let localMaxDistance;\n            if (maxDistance) {\n                direction.copy(this.direction).scaleRotateMatrix4(invWorldMat4);\n                localMaxDistance = maxDistance * direction.len();\n            }\n\n            // Take world space ray and make it object space to align with bounding box\n            origin.copy(this.origin).applyMatrix4(invWorldMat4);\n            direction.copy(this.direction).transformDirection(invWorldMat4);\n\n            let localDistance = 0;\n            let closestA, closestB, closestC;\n\n            const geometry = mesh.geometry;\n            const attributes = geometry.attributes;\n            const index = attributes.index;\n\n            const start = Math.max(0, geometry.drawRange.start);\n            const end = Math.min(index ? index.count : attributes.position.count, geometry.drawRange.start + geometry.drawRange.count);\n\n            for (let j = start; j < end; j += 3) {\n                // Position attribute indices for each triangle\n                const ai = index ? index.data[j] : j;\n                const bi = index ? index.data[j + 1] : j + 1;\n                const ci = index ? index.data[j + 2] : j + 2;\n\n                a.fromArray(attributes.position.data, ai * 3);\n                b.fromArray(attributes.position.data, bi * 3);\n                c.fromArray(attributes.position.data, ci * 3);\n\n                const distance = this.intersectTriangle(a, b, c, cullFace, origin, direction, faceNormal);\n                if (!distance) continue;\n\n                // Too far away\n                if (maxDistance && distance > localMaxDistance) continue;\n\n                if (!localDistance || distance < localDistance) {\n                    localDistance = distance;\n                    closestA = ai;\n                    closestB = bi;\n                    closestC = ci;\n                    closestFaceNormal.copy(faceNormal);\n                }\n            }\n\n            if (!localDistance) hits.splice(i, 1);\n\n            // Update hit values from bounds-test\n            mesh.hit.localPoint.copy(direction).multiply(localDistance).add(origin);\n            mesh.hit.point.copy(mesh.hit.localPoint).applyMatrix4(mesh.worldMatrix);\n            mesh.hit.distance = mesh.hit.point.distance(this.origin);\n\n            // Add unique hit objects on mesh to avoid generating lots of objects\n            if (!mesh.hit.faceNormal) {\n                mesh.hit.localFaceNormal = new Vec3();\n                mesh.hit.faceNormal = new Vec3();\n                mesh.hit.uv = new Vec2();\n                mesh.hit.localNormal = new Vec3();\n                mesh.hit.normal = new Vec3();\n            }\n\n            // Add face normal data which is already computed\n            mesh.hit.localFaceNormal.copy(closestFaceNormal);\n            mesh.hit.faceNormal.copy(mesh.hit.localFaceNormal).transformDirection(mesh.worldMatrix);\n\n            // Optional data, opt out to optimise a bit if necessary\n            if (includeUV || includeNormal) {\n                // Calculate barycoords to find uv values at hit point\n                a.fromArray(attributes.position.data, closestA * 3);\n                b.fromArray(attributes.position.data, closestB * 3);\n                c.fromArray(attributes.position.data, closestC * 3);\n                this.getBarycoord(mesh.hit.localPoint, a, b, c, barycoord);\n            }\n\n            if (includeUV && attributes.uv) {\n                uvA.fromArray(attributes.uv.data, closestA * 2);\n                uvB.fromArray(attributes.uv.data, closestB * 2);\n                uvC.fromArray(attributes.uv.data, closestC * 2);\n                mesh.hit.uv.set(\n                    uvA.x * barycoord.x + uvB.x * barycoord.y + uvC.x * barycoord.z,\n                    uvA.y * barycoord.x + uvB.y * barycoord.y + uvC.y * barycoord.z\n                );\n            }\n\n            if (includeNormal && attributes.normal) {\n                a.fromArray(attributes.normal.data, closestA * 3);\n                b.fromArray(attributes.normal.data, closestB * 3);\n                c.fromArray(attributes.normal.data, closestC * 3);\n                mesh.hit.localNormal.set(\n                    a.x * barycoord.x + b.x * barycoord.y + c.x * barycoord.z,\n                    a.y * barycoord.x + b.y * barycoord.y + c.y * barycoord.z,\n                    a.z * barycoord.x + b.z * barycoord.y + c.z * barycoord.z\n                );\n\n                mesh.hit.normal.copy(mesh.hit.localNormal).transformDirection(mesh.worldMatrix);\n            }\n        }\n\n        hits.sort((a, b) => a.hit.distance - b.hit.distance);\n        return hits;\n    }\n\n    intersectSphere(sphere, origin = this.origin, direction = this.direction) {\n        const ray = tempVec3c;\n        ray.sub(sphere.center, origin);\n        const tca = ray.dot(direction);\n        const d2 = ray.dot(ray) - tca * tca;\n        const radius2 = sphere.radius * sphere.radius;\n        if (d2 > radius2) return 0;\n        const thc = Math.sqrt(radius2 - d2);\n        const t0 = tca - thc;\n        const t1 = tca + thc;\n        if (t0 < 0 && t1 < 0) return 0;\n        if (t0 < 0) return t1;\n        return t0;\n    }\n\n    // Ray AABB - Ray Axis aligned bounding box testing\n    intersectBox(box, origin = this.origin, direction = this.direction) {\n        let tmin, tmax, tYmin, tYmax, tZmin, tZmax;\n        const invdirx = 1 / direction.x;\n        const invdiry = 1 / direction.y;\n        const invdirz = 1 / direction.z;\n        const min = box.min;\n        const max = box.max;\n        tmin = ((invdirx >= 0 ? min.x : max.x) - origin.x) * invdirx;\n        tmax = ((invdirx >= 0 ? max.x : min.x) - origin.x) * invdirx;\n        tYmin = ((invdiry >= 0 ? min.y : max.y) - origin.y) * invdiry;\n        tYmax = ((invdiry >= 0 ? max.y : min.y) - origin.y) * invdiry;\n        if (tmin > tYmax || tYmin > tmax) return 0;\n        if (tYmin > tmin) tmin = tYmin;\n        if (tYmax < tmax) tmax = tYmax;\n        tZmin = ((invdirz >= 0 ? min.z : max.z) - origin.z) * invdirz;\n        tZmax = ((invdirz >= 0 ? max.z : min.z) - origin.z) * invdirz;\n        if (tmin > tZmax || tZmin > tmax) return 0;\n        if (tZmin > tmin) tmin = tZmin;\n        if (tZmax < tmax) tmax = tZmax;\n        if (tmax < 0) return 0;\n        return tmin >= 0 ? tmin : tmax;\n    }\n\n    intersectTriangle(a, b, c, backfaceCulling = true, origin = this.origin, direction = this.direction, normal = tempVec3g) {\n        // from https://github.com/mrdoob/three.js/blob/master/src/math/Ray.js\n        // which is from http://www.geometrictools.com/GTEngine/Include/Mathematics/GteIntrRay3Triangle3.h\n        const edge1 = tempVec3h;\n        const edge2 = tempVec3i;\n        const diff = tempVec3j;\n        edge1.sub(b, a);\n        edge2.sub(c, a);\n        normal.cross(edge1, edge2);\n        let DdN = direction.dot(normal);\n        if (!DdN) return 0;\n        let sign;\n        if (DdN > 0) {\n            if (backfaceCulling) return 0;\n            sign = 1;\n        } else {\n            sign = -1;\n            DdN = -DdN;\n        }\n        diff.sub(origin, a);\n        let DdQxE2 = sign * direction.dot(edge2.cross(diff, edge2));\n        if (DdQxE2 < 0) return 0;\n        let DdE1xQ = sign * direction.dot(edge1.cross(diff));\n        if (DdE1xQ < 0) return 0;\n        if (DdQxE2 + DdE1xQ > DdN) return 0;\n        let QdN = -sign * diff.dot(normal);\n        if (QdN < 0) return 0;\n        return QdN / DdN;\n    }\n\n    getBarycoord(point, a, b, c, target = tempVec3h) {\n        // From https://github.com/mrdoob/three.js/blob/master/src/math/Triangle.js\n        // static/instance method to calculate barycentric coordinates\n        // based on: http://www.blackpawn.com/texts/pointinpoly/default.html\n        const v0 = tempVec3i;\n        const v1 = tempVec3j;\n        const v2 = tempVec3k;\n        v0.sub(c, a);\n        v1.sub(b, a);\n        v2.sub(point, a);\n        const dot00 = v0.dot(v0);\n        const dot01 = v0.dot(v1);\n        const dot02 = v0.dot(v2);\n        const dot11 = v1.dot(v1);\n        const dot12 = v1.dot(v2);\n        const denom = dot00 * dot11 - dot01 * dot01;\n        if (denom === 0) return target.set(-2, -1, -1);\n        const invDenom = 1 / denom;\n        const u = (dot11 * dot02 - dot01 * dot12) * invDenom;\n        const v = (dot00 * dot12 - dot01 * dot02) * invDenom;\n        return target.set(1 - u - v, v, u);\n    }\n}\n","import { Vec3 } from '../math/Vec3.js';\n\nconst CATMULLROM = 'catmullrom';\nconst CUBICBEZIER = 'cubicbezier';\nconst QUADRATICBEZIER = 'quadraticbezier';\n\n// temp\nconst _a0 = new Vec3(),\n    _a1 = new Vec3(),\n    _a2 = new Vec3(),\n    _a3 = new Vec3();\n\n/**\n * Get the control points of cubic bezier curve.\n * @param {*} i\n * @param {*} a\n * @param {*} b\n */\nfunction getCtrlPoint(points, i, a = 0.168, b = 0.168) {\n    if (i < 1) {\n        _a0.sub(points[1], points[0]).scale(a).add(points[0]);\n    } else {\n        _a0.sub(points[i + 1], points[i - 1])\n            .scale(a)\n            .add(points[i]);\n    }\n    if (i > points.length - 3) {\n        const last = points.length - 1;\n        _a1.sub(points[last - 1], points[last])\n            .scale(b)\n            .add(points[last]);\n    } else {\n        _a1.sub(points[i], points[i + 2])\n            .scale(b)\n            .add(points[i + 1]);\n    }\n    return [_a0.clone(), _a1.clone()];\n}\n\nfunction getQuadraticBezierPoint(t, p0, c0, p1) {\n    const k = 1 - t;\n    _a0.copy(p0).scale(k ** 2);\n    _a1.copy(c0).scale(2 * k * t);\n    _a2.copy(p1).scale(t ** 2);\n    const ret = new Vec3();\n    ret.add(_a0, _a1).add(_a2);\n    return ret;\n}\n\nfunction getCubicBezierPoint(t, p0, c0, c1, p1) {\n    const k = 1 - t;\n    _a0.copy(p0).scale(k ** 3);\n    _a1.copy(c0).scale(3 * k ** 2 * t);\n    _a2.copy(c1).scale(3 * k * t ** 2);\n    _a3.copy(p1).scale(t ** 3);\n    const ret = new Vec3();\n    ret.add(_a0, _a1).add(_a2).add(_a3);\n    return ret;\n}\n\nexport class Curve {\n    constructor({ points = [new Vec3(0, 0, 0), new Vec3(0, 1, 0), new Vec3(1, 1, 0), new Vec3(1, 0, 0)], divisions = 12, type = CATMULLROM } = {}) {\n        this.points = points;\n        this.divisions = divisions;\n        this.type = type;\n    }\n\n    _getQuadraticBezierPoints(divisions = this.divisions) {\n        const points = [];\n        const count = this.points.length;\n\n        if (count < 3) {\n            console.warn('Not enough points provided.');\n            return [];\n        }\n\n        const p0 = this.points[0];\n        let c0 = this.points[1],\n            p1 = this.points[2];\n\n        for (let i = 0; i <= divisions; i++) {\n            const p = getQuadraticBezierPoint(i / divisions, p0, c0, p1);\n            points.push(p);\n        }\n\n        let offset = 3;\n        while (count - offset > 0) {\n            p0.copy(p1);\n            c0 = p1.scale(2).sub(c0);\n            p1 = this.points[offset];\n            for (let i = 1; i <= divisions; i++) {\n                const p = getQuadraticBezierPoint(i / divisions, p0, c0, p1);\n                points.push(p);\n            }\n            offset++;\n        }\n\n        return points;\n    }\n\n    _getCubicBezierPoints(divisions = this.divisions) {\n        const points = [];\n        const count = this.points.length;\n\n        if (count < 4) {\n            console.warn('Not enough points provided.');\n            return [];\n        }\n\n        let p0 = this.points[0],\n            c0 = this.points[1],\n            c1 = this.points[2],\n            p1 = this.points[3];\n\n        for (let i = 0; i <= divisions; i++) {\n            const p = getCubicBezierPoint(i / divisions, p0, c0, c1, p1);\n            points.push(p);\n        }\n\n        let offset = 4;\n        while (count - offset > 1) {\n            p0.copy(p1);\n            c0 = p1.scale(2).sub(c1);\n            c1 = this.points[offset];\n            p1 = this.points[offset + 1];\n            for (let i = 1; i <= divisions; i++) {\n                const p = getCubicBezierPoint(i / divisions, p0, c0, c1, p1);\n                points.push(p);\n            }\n            offset += 2;\n        }\n\n        return points;\n    }\n\n    _getCatmullRomPoints(divisions = this.divisions, a = 0.168, b = 0.168) {\n        const points = [];\n        const count = this.points.length;\n\n        if (count <= 2) {\n            return this.points;\n        }\n\n        let p0;\n        this.points.forEach((p, i) => {\n            if (i === 0) {\n                p0 = p;\n            } else {\n                const [c0, c1] = getCtrlPoint(this.points, i - 1, a, b);\n                const c = new Curve({\n                    points: [p0, c0, c1, p],\n                    type: CUBICBEZIER,\n                });\n                points.pop();\n                points.push(...c.getPoints(divisions));\n                p0 = p;\n            }\n        });\n\n        return points;\n    }\n\n    getPoints(divisions = this.divisions, a = 0.168, b = 0.168) {\n        const type = this.type;\n\n        if (type === QUADRATICBEZIER) {\n            return this._getQuadraticBezierPoints(divisions);\n        }\n\n        if (type === CUBICBEZIER) {\n            return this._getCubicBezierPoints(divisions);\n        }\n\n        if (type === CATMULLROM) {\n            return this._getCatmullRomPoints(divisions, a, b);\n        }\n\n        return this.points;\n    }\n}\n\nCurve.CATMULLROM = CATMULLROM;\nCurve.CUBICBEZIER = CUBICBEZIER;\nCurve.QUADRATICBEZIER = QUADRATICBEZIER;\n","// TODO: Destroy render targets if size changed and exists\n\nimport { Program } from '../core/Program.js';\nimport { Mesh } from '../core/Mesh.js';\nimport { RenderTarget } from '../core/RenderTarget.js';\nimport { Triangle } from './Triangle.js';\n\nexport class Post {\n    constructor(\n        gl,\n        {\n            width,\n            height,\n            dpr,\n            wrapS = gl.CLAMP_TO_EDGE,\n            wrapT = gl.CLAMP_TO_EDGE,\n            minFilter = gl.LINEAR,\n            magFilter = gl.LINEAR,\n            geometry = new Triangle(gl),\n            targetOnly = null,\n        } = {}\n    ) {\n        this.gl = gl;\n\n        this.options = { wrapS, wrapT, minFilter, magFilter };\n\n        this.passes = [];\n\n        this.geometry = geometry;\n\n        this.uniform = { value: null };\n        this.targetOnly = targetOnly;\n\n        const fbo = (this.fbo = {\n            read: null,\n            write: null,\n            swap: () => {\n                let temp = fbo.read;\n                fbo.read = fbo.write;\n                fbo.write = temp;\n            },\n        });\n\n        this.resize({ width, height, dpr });\n    }\n\n    addPass({ vertex = defaultVertex, fragment = defaultFragment, uniforms = {}, textureUniform = 'tMap', enabled = true } = {}) {\n        uniforms[textureUniform] = { value: this.fbo.read.texture };\n\n        const program = new Program(this.gl, { vertex, fragment, uniforms });\n        const mesh = new Mesh(this.gl, { geometry: this.geometry, program });\n\n        const pass = {\n            mesh,\n            program,\n            uniforms,\n            enabled,\n            textureUniform,\n        };\n\n        this.passes.push(pass);\n        return pass;\n    }\n\n    resize({ width, height, dpr } = {}) {\n        if (dpr) this.dpr = dpr;\n        if (width) {\n            this.width = width;\n            this.height = height || width;\n        }\n\n        dpr = this.dpr || this.gl.renderer.dpr;\n        width = Math.floor((this.width || this.gl.renderer.width) * dpr);\n        height = Math.floor((this.height || this.gl.renderer.height) * dpr);\n\n        this.options.width = width;\n        this.options.height = height;\n\n        this.fbo.read = new RenderTarget(this.gl, this.options);\n        this.fbo.write = new RenderTarget(this.gl, this.options);\n    }\n\n    // Uses same arguments as renderer.render, with addition of optional texture passed in to avoid scene render\n    render({ scene, camera, texture, target = null, update = true, sort = true, frustumCull = true }) {\n        const enabledPasses = this.passes.filter((pass) => pass.enabled);\n\n        if (!texture) {\n            this.gl.renderer.render({\n                scene,\n                camera,\n                target: enabledPasses.length || (!target && this.targetOnly) ? this.fbo.write : target,\n                update,\n                sort,\n                frustumCull,\n            });\n            this.fbo.swap();\n        }\n\n        enabledPasses.forEach((pass, i) => {\n            pass.mesh.program.uniforms[pass.textureUniform].value = !i && texture ? texture : this.fbo.read.texture;\n            this.gl.renderer.render({\n                scene: pass.mesh,\n                target: i === enabledPasses.length - 1 && (target || !this.targetOnly) ? target : this.fbo.write,\n                clear: true,\n            });\n            this.fbo.swap();\n        });\n\n        this.uniform.value = this.fbo.read.texture;\n    }\n}\n\nconst defaultVertex = /* glsl */ `\n    attribute vec2 uv;\n    attribute vec2 position;\n\n    varying vec2 vUv;\n\n    void main() {\n        vUv = uv;\n        gl_Position = vec4(position, 0, 1);\n    }\n`;\n\nconst defaultFragment = /* glsl */ `\n    precision highp float;\n\n    uniform sampler2D tMap;\n    varying vec2 vUv;\n\n    void main() {\n        gl_FragColor = texture2D(tMap, vUv);\n    }\n`;\n","import { Vec3 } from '../math/Vec3.js';\nimport { Quat } from '../math/Quat.js';\n\nconst prevPos = new Vec3();\nconst prevRot = new Quat();\nconst prevScl = new Vec3();\n\nconst nextPos = new Vec3();\nconst nextRot = new Quat();\nconst nextScl = new Vec3();\n\nexport class Animation {\n    constructor({ objects, data }) {\n        this.objects = objects;\n        this.data = data;\n        this.elapsed = 0;\n        this.weight = 1;\n        this.duration = data.frames.length - 1;\n    }\n\n    update(totalWeight = 1, isSet) {\n        const weight = isSet ? 1 : this.weight / totalWeight;\n        const elapsed = this.elapsed % this.duration;\n\n        const floorFrame = Math.floor(elapsed);\n        const blend = elapsed - floorFrame;\n        const prevKey = this.data.frames[floorFrame];\n        const nextKey = this.data.frames[(floorFrame + 1) % this.duration];\n\n        this.objects.forEach((object, i) => {\n            prevPos.fromArray(prevKey.position, i * 3);\n            prevRot.fromArray(prevKey.quaternion, i * 4);\n            prevScl.fromArray(prevKey.scale, i * 3);\n\n            nextPos.fromArray(nextKey.position, i * 3);\n            nextRot.fromArray(nextKey.quaternion, i * 4);\n            nextScl.fromArray(nextKey.scale, i * 3);\n\n            prevPos.lerp(nextPos, blend);\n            prevRot.slerp(nextRot, blend);\n            prevScl.lerp(nextScl, blend);\n\n            object.position.lerp(prevPos, weight);\n            object.quaternion.slerp(prevRot, weight);\n            object.scale.lerp(prevScl, weight);\n        });\n    }\n}\n","import { Mesh } from '../core/Mesh.js';\nimport { Transform } from '../core/Transform.js';\nimport { Mat4 } from '../math/Mat4.js';\nimport { Texture } from '../core/Texture.js';\nimport { Animation } from './Animation.js';\n\nconst tempMat4 = new Mat4();\n\nexport class Skin extends Mesh {\n    constructor(gl, { rig, geometry, program, mode = gl.TRIANGLES } = {}) {\n        super(gl, { geometry, program, mode });\n\n        this.createBones(rig);\n        this.createBoneTexture();\n        this.animations = [];\n\n        Object.assign(this.program.uniforms, {\n            boneTexture: { value: this.boneTexture },\n            boneTextureSize: { value: this.boneTextureSize },\n        });\n    }\n\n    createBones(rig) {\n        // Create root so that can simply update world matrix of whole skeleton\n        this.root = new Transform();\n\n        // Create bones\n        this.bones = [];\n        if (!rig.bones || !rig.bones.length) return;\n        for (let i = 0; i < rig.bones.length; i++) {\n            const bone = new Transform();\n\n            // Set initial values (bind pose)\n            bone.position.fromArray(rig.bindPose.position, i * 3);\n            bone.quaternion.fromArray(rig.bindPose.quaternion, i * 4);\n            bone.scale.fromArray(rig.bindPose.scale, i * 3);\n\n            this.bones.push(bone);\n        }\n\n        // Once created, set the hierarchy\n        rig.bones.forEach((data, i) => {\n            this.bones[i].name = data.name;\n            if (data.parent === -1) return this.bones[i].setParent(this.root);\n            this.bones[i].setParent(this.bones[data.parent]);\n        });\n\n        // Then update to calculate world matrices\n        this.root.updateMatrixWorld(true);\n\n        // Store inverse of bind pose to calculate differences\n        this.bones.forEach((bone) => {\n            bone.bindInverse = new Mat4(...bone.worldMatrix).inverse();\n        });\n    }\n\n    createBoneTexture() {\n        if (!this.bones.length) return;\n        const size = Math.max(4, Math.pow(2, Math.ceil(Math.log(Math.sqrt(this.bones.length * 4)) / Math.LN2)));\n        this.boneMatrices = new Float32Array(size * size * 4);\n        this.boneTextureSize = size;\n        this.boneTexture = new Texture(this.gl, {\n            image: this.boneMatrices,\n            generateMipmaps: false,\n            type: this.gl.FLOAT,\n            internalFormat: this.gl.renderer.isWebgl2 ? this.gl.RGBA32F : this.gl.RGBA,\n            minFilter: this.gl.NEAREST,\n            magFilter: this.gl.NEAREST,\n            flipY: false,\n            width: size,\n        });\n    }\n\n    addAnimation(data) {\n        const animation = new Animation({ objects: this.bones, data });\n        this.animations.push(animation);\n        return animation;\n    }\n\n    update() {\n        // Calculate combined animation weight\n        let total = 0;\n        this.animations.forEach((animation) => (total += animation.weight));\n\n        this.animations.forEach((animation, i) => {\n            // force first animation to set in order to reset frame\n            animation.update(total, i === 0);\n        });\n    }\n\n    draw({ camera } = {}) {\n        // Update world matrices manually, as not part of scene graph\n        this.root.updateMatrixWorld(true);\n\n        // Update bone texture\n        this.bones.forEach((bone, i) => {\n            // Find difference between current and bind pose\n            tempMat4.multiply(bone.worldMatrix, bone.bindInverse);\n            this.boneMatrices.set(tempMat4, i * 16);\n        });\n        if (this.boneTexture) this.boneTexture.needsUpdate = true;\n\n        super.draw({ camera });\n    }\n}\n","import { Program } from '../core/Program.js';\n\nconst vertex = /* glsl */ `\n    precision highp float;\n    precision highp int;\n\n    attribute vec3 position;\n    attribute vec3 normal;\n\n    uniform mat3 normalMatrix;\n    uniform mat4 modelViewMatrix;\n    uniform mat4 projectionMatrix;\n\n    varying vec3 vNormal;\n\n    void main() {\n        vNormal = normalize(normalMatrix * normal);\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n    }\n`;\n\nconst fragment = /* glsl */ `\n    precision highp float;\n    precision highp int;\n\n    varying vec3 vNormal;\n\n    void main() {\n        gl_FragColor.rgb = normalize(vNormal);\n        gl_FragColor.a = 1.0;\n    }\n`;\n\nexport function NormalProgram(gl) {\n    return new Program(gl, {\n        vertex: vertex,\n        fragment: fragment,\n        cullFace: null,\n    });\n}\n","import { RenderTarget } from '../core/RenderTarget.js';\nimport { Program } from '../core/Program.js';\nimport { Mesh } from '../core/Mesh.js';\nimport { Vec2 } from '../math/Vec2.js';\nimport { Triangle } from './Triangle.js';\n\nexport class Flowmap {\n    constructor(\n        gl,\n        {\n            size = 128, // default size of the render targets\n            falloff = 0.3, // size of the stamp, percentage of the size\n            alpha = 1, // opacity of the stamp\n            dissipation = 0.98, // affects the speed that the stamp fades. Closer to 1 is slower\n            type, // Pass in gl.FLOAT to force it, defaults to gl.HALF_FLOAT\n        } = {}\n    ) {\n        const _this = this;\n        this.gl = gl;\n\n        // output uniform containing render target textures\n        this.uniform = { value: null };\n\n        this.mask = {\n            read: null,\n            write: null,\n\n            // Helper function to ping pong the render targets and update the uniform\n            swap: () => {\n                let temp = _this.mask.read;\n                _this.mask.read = _this.mask.write;\n                _this.mask.write = temp;\n                _this.uniform.value = _this.mask.read.texture;\n            },\n        };\n\n        {\n            createFBOs();\n\n            this.aspect = 1;\n            this.mouse = new Vec2();\n            this.velocity = new Vec2();\n\n            this.mesh = initProgram();\n        }\n\n        function createFBOs() {\n            // Requested type not supported, fall back to half float\n            if (!type) type = gl.HALF_FLOAT || gl.renderer.extensions['OES_texture_half_float'].HALF_FLOAT_OES;\n\n            let minFilter = (() => {\n                if (gl.renderer.isWebgl2) return gl.LINEAR;\n                if (gl.renderer.extensions[`OES_texture_${type === gl.FLOAT ? '' : 'half_'}float_linear`]) return gl.LINEAR;\n                return gl.NEAREST;\n            })();\n\n            const options = {\n                width: size,\n                height: size,\n                type,\n                format: gl.RGBA,\n                internalFormat: gl.renderer.isWebgl2 ? (type === gl.FLOAT ? gl.RGBA32F : gl.RGBA16F) : gl.RGBA,\n                minFilter,\n                depth: false,\n            };\n\n            _this.mask.read = new RenderTarget(gl, options);\n            _this.mask.write = new RenderTarget(gl, options);\n            _this.mask.swap();\n        }\n\n        function initProgram() {\n            return new Mesh(gl, {\n                // Triangle that includes -1 to 1 range for 'position', and 0 to 1 range for 'uv'.\n                geometry: new Triangle(gl),\n\n                program: new Program(gl, {\n                    vertex,\n                    fragment,\n                    uniforms: {\n                        tMap: _this.uniform,\n\n                        uFalloff: { value: falloff * 0.5 },\n                        uAlpha: { value: alpha },\n                        uDissipation: { value: dissipation },\n\n                        // User needs to update these\n                        uAspect: { value: 1 },\n                        uMouse: { value: _this.mouse },\n                        uVelocity: { value: _this.velocity },\n                    },\n                    depthTest: false,\n                }),\n            });\n        }\n    }\n\n    update() {\n        this.mesh.program.uniforms.uAspect.value = this.aspect;\n\n        this.gl.renderer.render({\n            scene: this.mesh,\n            target: this.mask.write,\n            clear: false,\n        });\n        this.mask.swap();\n    }\n}\n\nconst vertex = /* glsl */ `\n    attribute vec2 uv;\n    attribute vec2 position;\n\n    varying vec2 vUv;\n\n    void main() {\n        vUv = uv;\n        gl_Position = vec4(position, 0, 1);\n    }\n`;\n\nconst fragment = /* glsl */ `\n    precision highp float;\n\n    uniform sampler2D tMap;\n\n    uniform float uFalloff;\n    uniform float uAlpha;\n    uniform float uDissipation;\n    \n    uniform float uAspect;\n    uniform vec2 uMouse;\n    uniform vec2 uVelocity;\n\n    varying vec2 vUv;\n\n    void main() {\n        vec4 color = texture2D(tMap, vUv) * uDissipation;\n\n        vec2 cursor = vUv - uMouse;\n        cursor.x *= uAspect;\n\n        vec3 stamp = vec3(uVelocity * vec2(1, -1), 1.0 - pow(1.0 - min(1.0, length(uVelocity)), 3.0));\n        float falloff = smoothstep(uFalloff, 0.0, length(cursor)) * uAlpha;\n\n        color.rgb = mix(color.rgb, stamp, vec3(falloff));\n\n        gl_FragColor = color;\n    }\n`;\n","import { Geometry } from '../core/Geometry.js';\nimport { Program } from '../core/Program.js';\nimport { Mesh } from '../core/Mesh.js';\nimport { Vec2 } from '../math/Vec2.js';\nimport { Vec3 } from '../math/Vec3.js';\nimport { Color } from '../math/Color.js';\n\nconst tmp = new Vec3();\n\nexport class Polyline {\n    constructor(\n        gl,\n        {\n            points, // Array of Vec3s\n            vertex = defaultVertex,\n            fragment = defaultFragment,\n            uniforms = {},\n            attributes = {}, // For passing in custom attribs\n        }\n    ) {\n        this.gl = gl;\n        this.points = points;\n        this.count = points.length;\n\n        // Create buffers\n        this.position = new Float32Array(this.count * 3 * 2);\n        this.prev = new Float32Array(this.count * 3 * 2);\n        this.next = new Float32Array(this.count * 3 * 2);\n        const side = new Float32Array(this.count * 1 * 2);\n        const uv = new Float32Array(this.count * 2 * 2);\n        const index = new Uint16Array((this.count - 1) * 3 * 2);\n\n        // Set static buffers\n        for (let i = 0; i < this.count; i++) {\n            side.set([-1, 1], i * 2);\n            const v = i / (this.count - 1);\n            uv.set([0, v, 1, v], i * 4);\n\n            if (i === this.count - 1) continue;\n            const ind = i * 2;\n            index.set([ind + 0, ind + 1, ind + 2], (ind + 0) * 3);\n            index.set([ind + 2, ind + 1, ind + 3], (ind + 1) * 3);\n        }\n\n        const geometry = (this.geometry = new Geometry(\n            gl,\n            Object.assign(attributes, {\n                position: { size: 3, data: this.position },\n                prev: { size: 3, data: this.prev },\n                next: { size: 3, data: this.next },\n                side: { size: 1, data: side },\n                uv: { size: 2, data: uv },\n                index: { size: 1, data: index },\n            })\n        ));\n\n        // Populate dynamic buffers\n        this.updateGeometry();\n\n        if (!uniforms.uResolution) this.resolution = uniforms.uResolution = { value: new Vec2() };\n        if (!uniforms.uDPR) this.dpr = uniforms.uDPR = { value: 1 };\n        if (!uniforms.uThickness) this.thickness = uniforms.uThickness = { value: 1 };\n        if (!uniforms.uColor) this.color = uniforms.uColor = { value: new Color('#000') };\n        if (!uniforms.uMiter) this.miter = uniforms.uMiter = { value: 1 };\n\n        // Set size uniforms' values\n        this.resize();\n\n        const program = (this.program = new Program(gl, {\n            vertex,\n            fragment,\n            uniforms,\n        }));\n\n        this.mesh = new Mesh(gl, { geometry, program });\n    }\n\n    updateGeometry() {\n        this.points.forEach((p, i) => {\n            p.toArray(this.position, i * 3 * 2);\n            p.toArray(this.position, i * 3 * 2 + 3);\n\n            if (!i) {\n                // If first point, calculate prev using the distance to 2nd point\n                tmp.copy(p)\n                    .sub(this.points[i + 1])\n                    .add(p);\n                tmp.toArray(this.prev, i * 3 * 2);\n                tmp.toArray(this.prev, i * 3 * 2 + 3);\n            } else {\n                p.toArray(this.next, (i - 1) * 3 * 2);\n                p.toArray(this.next, (i - 1) * 3 * 2 + 3);\n            }\n\n            if (i === this.points.length - 1) {\n                // If last point, calculate next using distance to 2nd last point\n                tmp.copy(p)\n                    .sub(this.points[i - 1])\n                    .add(p);\n                tmp.toArray(this.next, i * 3 * 2);\n                tmp.toArray(this.next, i * 3 * 2 + 3);\n            } else {\n                p.toArray(this.prev, (i + 1) * 3 * 2);\n                p.toArray(this.prev, (i + 1) * 3 * 2 + 3);\n            }\n        });\n\n        this.geometry.attributes.position.needsUpdate = true;\n        this.geometry.attributes.prev.needsUpdate = true;\n        this.geometry.attributes.next.needsUpdate = true;\n    }\n\n    // Only need to call if not handling resolution uniforms manually\n    resize() {\n        // Update automatic uniforms if not overridden\n        if (this.resolution) this.resolution.value.set(this.gl.canvas.width, this.gl.canvas.height);\n        if (this.dpr) this.dpr.value = this.gl.renderer.dpr;\n    }\n}\n\nconst defaultVertex = /* glsl */ `\n    precision highp float;\n\n    attribute vec3 position;\n    attribute vec3 next;\n    attribute vec3 prev;\n    attribute vec2 uv;\n    attribute float side;\n\n    uniform mat4 modelViewMatrix;\n    uniform mat4 projectionMatrix;\n    uniform vec2 uResolution;\n    uniform float uDPR;\n    uniform float uThickness;\n    uniform float uMiter;\n\n    varying vec2 vUv;\n\n    vec4 getPosition() {\n        mat4 mvp = projectionMatrix * modelViewMatrix;\n        vec4 current = mvp * vec4(position, 1);\n        vec4 nextPos = mvp * vec4(next, 1);\n        vec4 prevPos = mvp * vec4(prev, 1);\n\n        vec2 aspect = vec2(uResolution.x / uResolution.y, 1);    \n        vec2 currentScreen = current.xy / current.w * aspect;\n        vec2 nextScreen = nextPos.xy / nextPos.w * aspect;\n        vec2 prevScreen = prevPos.xy / prevPos.w * aspect;\n    \n        vec2 dir1 = normalize(currentScreen - prevScreen);\n        vec2 dir2 = normalize(nextScreen - currentScreen);\n        vec2 dir = normalize(dir1 + dir2);\n    \n        vec2 normal = vec2(-dir.y, dir.x);\n        normal /= mix(1.0, max(0.3, dot(normal, vec2(-dir1.y, dir1.x))), uMiter);\n        normal /= aspect;\n\n        float pixelWidthRatio = 1.0 / (uResolution.y / uDPR);\n        float pixelWidth = current.w * pixelWidthRatio;\n        normal *= pixelWidth * uThickness;\n        current.xy -= normal * side;\n    \n        return current;\n    }\n\n    void main() {\n        vUv = uv;\n        gl_Position = getPosition();\n    }\n`;\n\nconst defaultFragment = /* glsl */ `\n    precision highp float;\n\n    uniform vec3 uColor;\n    \n    varying vec2 vUv;\n\n    void main() {\n        gl_FragColor.rgb = uColor;\n        gl_FragColor.a = 1.0;\n    }\n`;\n","import { Camera } from '../core/Camera.js';\nimport { Program } from '../core/Program.js';\nimport { RenderTarget } from '../core/RenderTarget.js';\n\nexport class Shadow {\n    constructor(gl, { light = new Camera(gl), width = 1024, height = width }) {\n        this.gl = gl;\n\n        this.light = light;\n\n        this.target = new RenderTarget(gl, { width, height });\n\n        this.depthProgram = new Program(gl, {\n            vertex: defaultVertex,\n            fragment: defaultFragment,\n            cullFace: null,\n        });\n\n        this.castMeshes = [];\n    }\n\n    add({\n        mesh,\n        receive = true,\n        cast = true,\n        vertex = defaultVertex,\n        fragment = defaultFragment,\n        uniformProjection = 'shadowProjectionMatrix',\n        uniformView = 'shadowViewMatrix',\n        uniformTexture = 'tShadow',\n    }) {\n        // Add uniforms to existing program\n        if (receive && !mesh.program.uniforms[uniformProjection]) {\n            mesh.program.uniforms[uniformProjection] = { value: this.light.projectionMatrix };\n            mesh.program.uniforms[uniformView] = { value: this.light.viewMatrix };\n            mesh.program.uniforms[uniformTexture] = { value: this.target.texture };\n        }\n\n        if (!cast) return;\n        this.castMeshes.push(mesh);\n\n        // Store program for when switching between depth override\n        mesh.colorProgram = mesh.program;\n\n        // Check if depth program already attached\n        if (mesh.depthProgram) return;\n\n        // Use global depth override if nothing custom passed in\n        if (vertex === defaultVertex && fragment === defaultFragment) {\n            mesh.depthProgram = this.depthProgram;\n            return;\n        }\n\n        // Create custom override program\n        mesh.depthProgram = new Program(this.gl, {\n            vertex,\n            fragment,\n            cullFace: null,\n        });\n    }\n\n    render({ scene }) {\n        // For depth render, replace program with depth override.\n        // Hide meshes not casting shadows.\n        scene.traverse((node) => {\n            if (!node.draw) return;\n            if (!!~this.castMeshes.indexOf(node)) {\n                node.program = node.depthProgram;\n            } else {\n                node.isForceVisibility = node.visible;\n                node.visible = false;\n            }\n        });\n\n        // Render the depth shadow map using the light as the camera\n        this.gl.renderer.render({\n            scene,\n            camera: this.light,\n            target: this.target,\n        });\n\n        // Then switch the program back to the normal one\n        scene.traverse((node) => {\n            if (!node.draw) return;\n            if (!!~this.castMeshes.indexOf(node)) {\n                node.program = node.colorProgram;\n            } else {\n                node.visible = node.isForceVisibility;\n            }\n        });\n    }\n}\n\nconst defaultVertex = /* glsl */ `\n    attribute vec3 position;\n    attribute vec2 uv;\n\n    uniform mat4 modelViewMatrix;\n    uniform mat4 projectionMatrix;\n\n    void main() {\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n    }\n`;\n\nconst defaultFragment = /* glsl */ `\n    precision highp float;\n\n    vec4 packRGBA (float v) {\n        vec4 pack = fract(vec4(1.0, 255.0, 65025.0, 16581375.0) * v);\n        pack -= pack.yzww * vec2(1.0 / 255.0, 0.0).xxxy;\n        return pack;\n    }\n\n    void main() {\n        gl_FragColor = packRGBA(gl_FragCoord.z);\n    }\n`;\n","import { Texture } from '../core/Texture.js';\n\n// TODO: Support cubemaps\n// Generate textures using https://github.com/TimvanScherpenzeel/texture-compressor\n\nexport class KTXTexture extends Texture {\n    constructor(gl, { buffer, wrapS = gl.CLAMP_TO_EDGE, wrapT = gl.CLAMP_TO_EDGE, anisotropy = 0, minFilter, magFilter } = {}) {\n        super(gl, {\n            generateMipmaps: false,\n            wrapS,\n            wrapT,\n            anisotropy,\n            minFilter,\n            magFilter,\n        });\n\n        if (buffer) return this.parseBuffer(buffer);\n    }\n\n    parseBuffer(buffer) {\n        const ktx = new KhronosTextureContainer(buffer);\n        ktx.mipmaps.isCompressedTexture = true;\n\n        // Update texture\n        this.image = ktx.mipmaps;\n        this.internalFormat = ktx.glInternalFormat;\n        if (ktx.numberOfMipmapLevels > 1) {\n            if (this.minFilter === this.gl.LINEAR) this.minFilter = this.gl.NEAREST_MIPMAP_LINEAR;\n        } else {\n            if (this.minFilter === this.gl.NEAREST_MIPMAP_LINEAR) this.minFilter = this.gl.LINEAR;\n        }\n\n        // TODO: support cube maps\n        // ktx.numberOfFaces\n    }\n}\n\nfunction KhronosTextureContainer(buffer) {\n    const idCheck = [0xab, 0x4b, 0x54, 0x58, 0x20, 0x31, 0x31, 0xbb, 0x0d, 0x0a, 0x1a, 0x0a];\n    const id = new Uint8Array(buffer, 0, 12);\n    for (let i = 0; i < id.length; i++) if (id[i] !== idCheck[i]) return console.error('File missing KTX identifier');\n\n    // TODO: Is this always 4? Tested: [android, macos]\n    const size = Uint32Array.BYTES_PER_ELEMENT;\n    const head = new DataView(buffer, 12, 13 * size);\n    const littleEndian = head.getUint32(0, true) === 0x04030201;\n    const glType = head.getUint32(1 * size, littleEndian);\n    if (glType !== 0) return console.warn('only compressed formats currently supported');\n    this.glInternalFormat = head.getUint32(4 * size, littleEndian);\n    let width = head.getUint32(6 * size, littleEndian);\n    let height = head.getUint32(7 * size, littleEndian);\n    this.numberOfFaces = head.getUint32(10 * size, littleEndian);\n    this.numberOfMipmapLevels = Math.max(1, head.getUint32(11 * size, littleEndian));\n    const bytesOfKeyValueData = head.getUint32(12 * size, littleEndian);\n\n    this.mipmaps = [];\n    let offset = 12 + 13 * 4 + bytesOfKeyValueData;\n    for (let level = 0; level < this.numberOfMipmapLevels; level++) {\n        const levelSize = new Int32Array(buffer, offset, 1)[0]; // size per face, since not supporting array cubemaps\n        offset += 4; // levelSize field\n        for (let face = 0; face < this.numberOfFaces; face++) {\n            const data = new Uint8Array(buffer, offset, levelSize);\n            this.mipmaps.push({ data, width, height });\n            offset += levelSize;\n            offset += 3 - ((levelSize + 3) % 4); // add padding for odd sized image\n        }\n        width = width >> 1;\n        height = height >> 1;\n    }\n}\n","import { Texture } from '../core/Texture.js';\nimport { KTXTexture } from './KTXTexture.js';\n\n// For compressed textures, generate using https://github.com/TimvanScherpenzeel/texture-compressor\n\nlet cache = {};\nconst supportedExtensions = [];\n\nexport class TextureLoader {\n    static load(\n        gl,\n        {\n            src, // string or object of extension:src key-values\n            // {\n            //     pvrtc: '...ktx',\n            //     s3tc: '...ktx',\n            //     etc: '...ktx',\n            //     etc1: '...ktx',\n            //     astc: '...ktx',\n            //     webp: '...webp',\n            //     jpg: '...jpg',\n            //     png: '...png',\n            // }\n\n            // Only props relevant to KTXTexture\n            wrapS = gl.CLAMP_TO_EDGE,\n            wrapT = gl.CLAMP_TO_EDGE,\n            anisotropy = 0,\n\n            // For regular images\n            format = gl.RGBA,\n            internalFormat = format,\n            generateMipmaps = true,\n            minFilter = generateMipmaps ? gl.NEAREST_MIPMAP_LINEAR : gl.LINEAR,\n            magFilter = gl.LINEAR,\n            premultiplyAlpha = false,\n            unpackAlignment = 4,\n            flipY = true,\n        } = {}\n    ) {\n        const support = this.getSupportedExtensions(gl);\n        let ext = 'none';\n\n        // If src is string, determine which format from the extension\n        if (typeof src === 'string') {\n            ext = src.split('.').pop().split('?')[0].toLowerCase();\n        }\n\n        // If src is object, use supported extensions and provided list to choose best option\n        // Get first supported match, so put in order of preference\n        if (typeof src === 'object') {\n            for (const prop in src) {\n                if (support.includes(prop.toLowerCase())) {\n                    ext = prop.toLowerCase();\n                    src = src[prop];\n                    break;\n                }\n            }\n        }\n\n        // Stringify props\n        const cacheID =\n            src +\n            wrapS +\n            wrapT +\n            anisotropy +\n            format +\n            internalFormat +\n            generateMipmaps +\n            minFilter +\n            magFilter +\n            premultiplyAlpha +\n            unpackAlignment +\n            flipY +\n            gl.renderer.id;\n\n        // Check cache for existing texture\n        if (cache[cacheID]) return cache[cacheID];\n\n        let texture;\n        switch (ext) {\n            case 'ktx':\n            case 'pvrtc':\n            case 's3tc':\n            case 'etc':\n            case 'etc1':\n            case 'astc':\n                // Load compressed texture using KTX format\n                texture = new KTXTexture(gl, {\n                    src,\n                    wrapS,\n                    wrapT,\n                    anisotropy,\n                    minFilter,\n                    magFilter,\n                });\n                texture.loaded = this.loadKTX(src, texture);\n                break;\n            case 'webp':\n            case 'jpg':\n            case 'jpeg':\n            case 'png':\n                texture = new Texture(gl, {\n                    wrapS,\n                    wrapT,\n                    anisotropy,\n                    format,\n                    internalFormat,\n                    generateMipmaps,\n                    minFilter,\n                    magFilter,\n                    premultiplyAlpha,\n                    unpackAlignment,\n                    flipY,\n                });\n                texture.loaded = this.loadImage(gl, src, texture);\n                break;\n            default:\n                console.warn('No supported format supplied');\n                texture = new Texture(gl);\n        }\n\n        texture.ext = ext;\n        cache[cacheID] = texture;\n        return texture;\n    }\n\n    static getSupportedExtensions(gl) {\n        if (supportedExtensions.length) return supportedExtensions;\n\n        const extensions = {\n            pvrtc: gl.renderer.getExtension('WEBGL_compressed_texture_pvrtc') || gl.renderer.getExtension('WEBKIT_WEBGL_compressed_texture_pvrtc'),\n            s3tc:\n                gl.renderer.getExtension('WEBGL_compressed_texture_s3tc') ||\n                gl.renderer.getExtension('MOZ_WEBGL_compressed_texture_s3tc') ||\n                gl.renderer.getExtension('WEBKIT_WEBGL_compressed_texture_s3tc'),\n            etc: gl.renderer.getExtension('WEBGL_compressed_texture_etc'),\n            etc1: gl.renderer.getExtension('WEBGL_compressed_texture_etc1'),\n            astc: gl.renderer.getExtension('WEBGL_compressed_texture_astc'),\n        };\n\n        for (const ext in extensions) if (extensions[ext]) supportedExtensions.push(ext);\n\n        // Check for WebP support\n        if (detectWebP) supportedExtensions.push('webp');\n\n        // Formats supported by all\n        supportedExtensions.push('png', 'jpg');\n\n        return supportedExtensions;\n    }\n\n    static loadKTX(src, texture) {\n        return fetch(src)\n            .then((res) => res.arrayBuffer())\n            .then((buffer) => texture.parseBuffer(buffer));\n    }\n\n    static loadImage(gl, src, texture) {\n        return decodeImage(src).then((imgBmp) => {\n            // Catch non POT textures and update params to avoid errors\n            if (!powerOfTwo(imgBmp.width) || !powerOfTwo(imgBmp.height)) {\n                if (texture.generateMipmaps) texture.generateMipmaps = false;\n                if (texture.minFilter === gl.NEAREST_MIPMAP_LINEAR) texture.minFilter = gl.LINEAR;\n                if (texture.wrapS === gl.REPEAT) texture.wrapS = texture.wrapT = gl.CLAMP_TO_EDGE;\n            }\n\n            texture.image = imgBmp;\n\n            // For createImageBitmap, close once uploaded\n            texture.onUpdate = () => {\n                if (imgBmp.close) imgBmp.close();\n                texture.onUpdate = null;\n            };\n\n            return imgBmp;\n        });\n    }\n\n    static clearCache() {\n        cache = {};\n    }\n}\n\nfunction detectWebP() {\n    return document.createElement('canvas').toDataURL('image/webp').indexOf('data:image/webp') == 0;\n}\n\nfunction powerOfTwo(value) {\n    return Math.log2(value) % 1 === 0;\n}\n\nfunction decodeImage(src) {\n    return new Promise((resolve) => {\n        const img = new Image();\n        img.crossOrigin = '';\n        img.src = src;\n\n        // Only chrome's implementation of createImageBitmap is fully supported\n        const isChrome = navigator.userAgent.toLowerCase().includes('chrome');\n        if (!!window.createImageBitmap && isChrome) {\n            img.onload = () => {\n                createImageBitmap(img, {\n                    imageOrientation: 'flipY',\n                    premultiplyAlpha: 'none',\n                }).then((imgBmp) => {\n                    resolve(imgBmp);\n                });\n            };\n        } else {\n            img.onload = () => resolve(img);\n        }\n    });\n}\n","import { Vec3 } from '../math/Vec3.js';\nimport { Quat } from '../math/Quat.js';\n\nconst tmpVec3A = new Vec3();\nconst tmpVec3B = new Vec3();\nconst tmpVec3C = new Vec3();\nconst tmpVec3D = new Vec3();\n\nconst tmpQuatA = new Quat();\nconst tmpQuatB = new Quat();\nconst tmpQuatC = new Quat();\nconst tmpQuatD = new Quat();\n\nexport class GLTFAnimation {\n    constructor(data, weight = 1) {\n        this.data = data;\n        this.elapsed = 0;\n        this.weight = weight;\n\n        // Set to false to not apply modulo to elapsed against duration\n        this.loop = true;\n\n        // Find starting time as exports from blender (perhaps others too) don't always start from 0\n        this.startTime = data.reduce((a, { times }) => Math.min(a, times[0]), Infinity);\n        // Get largest final time in all channels to calculate duration\n        this.endTime = data.reduce((a, { times }) => Math.max(a, times[times.length - 1]), 0);\n        this.duration = this.endTime - this.startTime;\n    }\n\n    update(totalWeight = 1, isSet) {\n        const weight = isSet ? 1 : this.weight / totalWeight;\n        const elapsed = (this.loop ? this.elapsed % this.duration : Math.min(this.elapsed, this.duration - 0.001)) + this.startTime;\n\n        this.data.forEach(({ node, transform, interpolation, times, values }) => {\n            // Get index of two time values elapsed is between\n            const prevIndex =\n                Math.max(\n                    1,\n                    times.findIndex((t) => t > elapsed)\n                ) - 1;\n            const nextIndex = prevIndex + 1;\n\n            // Get linear blend/alpha between the two\n            let alpha = (elapsed - times[prevIndex]) / (times[nextIndex] - times[prevIndex]);\n            if (interpolation === 'STEP') alpha = 0;\n\n            let prevVal = tmpVec3A;\n            let prevTan = tmpVec3B;\n            let nextTan = tmpVec3C;\n            let nextVal = tmpVec3D;\n            let size = 3;\n\n            if (transform === 'quaternion') {\n                prevVal = tmpQuatA;\n                prevTan = tmpQuatB;\n                nextTan = tmpQuatC;\n                nextVal = tmpQuatD;\n                size = 4;\n            }\n\n            if (interpolation === 'CUBICSPLINE') {\n                // Get the prev and next values from the indices\n                prevVal.fromArray(values, prevIndex * size * 3 + size * 1);\n                prevTan.fromArray(values, prevIndex * size * 3 + size * 2);\n                nextTan.fromArray(values, nextIndex * size * 3 + size * 0);\n                nextVal.fromArray(values, nextIndex * size * 3 + size * 1);\n\n                // interpolate for final value\n                prevVal = this.cubicSplineInterpolate(alpha, prevVal, prevTan, nextTan, nextVal);\n                if (size === 4) prevVal.normalize();\n            } else {\n                // Get the prev and next values from the indices\n                prevVal.fromArray(values, prevIndex * size);\n                nextVal.fromArray(values, nextIndex * size);\n\n                // interpolate for final value\n                if (size === 4) prevVal.slerp(nextVal, alpha);\n                else prevVal.lerp(nextVal, alpha);\n            }\n\n            // interpolate between multiple possible animations\n            if (size === 4) node[transform].slerp(prevVal, weight);\n            else node[transform].lerp(prevVal, weight);\n        });\n    }\n\n    cubicSplineInterpolate(t, prevVal, prevTan, nextTan, nextVal) {\n        const t2 = t * t;\n        const t3 = t2 * t;\n\n        const s2 = 3 * t2 - 2 * t3;\n        const s3 = t3 - t2;\n        const s0 = 1 - s2;\n        const s1 = s3 - t2 + t;\n\n        for (let i = 0; i < prevVal.length; i++) {\n            prevVal[i] = s0 * prevVal[i] + s1 * (1 - t) * prevTan[i] + s2 * nextVal[i] + s3 * t * nextTan[i];\n        }\n\n        return prevVal;\n    }\n}\n","import { Mesh } from '../core/Mesh.js';\nimport { Mat4 } from '../math/Mat4.js';\nimport { Texture } from '../core/Texture.js';\n\nconst tempMat4 = new Mat4();\nconst identity = new Mat4();\n\nexport class GLTFSkin extends Mesh {\n    constructor(gl, { skeleton, geometry, program, mode = gl.TRIANGLES } = {}) {\n        super(gl, { geometry, program, mode });\n        this.skeleton = skeleton;\n        this.program = program;\n        this.createBoneTexture();\n        this.animations = [];\n    }\n\n    createBoneTexture() {\n        if (!this.skeleton.joints.length) return;\n        const size = Math.max(4, Math.pow(2, Math.ceil(Math.log(Math.sqrt(this.skeleton.joints.length * 4)) / Math.LN2)));\n        this.boneMatrices = new Float32Array(size * size * 4);\n        this.boneTextureSize = size;\n        this.boneTexture = new Texture(this.gl, {\n            image: this.boneMatrices,\n            generateMipmaps: false,\n            type: this.gl.FLOAT,\n            internalFormat: this.gl.renderer.isWebgl2 ? this.gl.RGBA32F : this.gl.RGBA,\n            minFilter: this.gl.NEAREST,\n            magFilter: this.gl.NEAREST,\n            flipY: false,\n            width: size,\n        });\n    }\n\n    // addAnimation(data) {\n    //     const animation = new Animation({ objects: this.bones, data });\n    //     this.animations.push(animation);\n    //     return animation;\n    // }\n\n    // updateAnimations() {\n    //     // Calculate combined animation weight\n    //     let total = 0;\n    //     this.animations.forEach((animation) => (total += animation.weight));\n\n    //     this.animations.forEach((animation, i) => {\n    //         // force first animation to set in order to reset frame\n    //         animation.update(total, i === 0);\n    //     });\n    // }\n\n    updateUniforms() {\n        // Update bone texture\n        this.skeleton.joints.forEach((bone, i) => {\n            // Find difference between current and bind pose\n            tempMat4.multiply(bone.worldMatrix, bone.bindInverse);\n            this.boneMatrices.set(tempMat4, i * 16);\n        });\n        if (this.boneTexture) this.boneTexture.needsUpdate = true;\n    }\n\n    draw({ camera } = {}) {\n        if (!this.program.uniforms.boneTexture) {\n            Object.assign(this.program.uniforms, {\n                boneTexture: { value: this.boneTexture },\n                boneTextureSize: { value: this.boneTextureSize },\n            });\n        }\n\n        this.updateUniforms();\n\n        // Switch the world matrix with identity to ignore any transforms\n        // on the mesh itself - only use skeleton's transforms\n        const _worldMatrix = this.worldMatrix;\n        this.worldMatrix = identity;\n\n        super.draw({ camera });\n\n        // Switch back to leave identity untouched\n        this.worldMatrix = _worldMatrix;\n    }\n}\n","import { Geometry } from '../core/Geometry.js';\nimport { Transform } from '../core/Transform.js';\nimport { Texture } from '../core/Texture.js';\nimport { Mesh } from '../core/Mesh.js';\nimport { GLTFAnimation } from './GLTFAnimation.js';\nimport { GLTFSkin } from './GLTFSkin.js';\nimport { Mat4 } from '../math/Mat4.js';\nimport { NormalProgram } from './NormalProgram.js';\n\n// Supports\n// [x] Geometry\n// [ ] Sparse support\n// [x] Nodes and Hierarchy\n// [x] Instancing\n// [ ] Morph Targets\n// [x] Skins\n// [ ] Materials\n// [x] Textures\n// [x] Animation\n// [ ] Cameras\n// [ ] Extensions\n// [x] GLB support\n\n// TODO: Sparse accessor packing? For morph targets basically\n// TODO: init accessor missing bufferView with 0s\n// TODO: morph target animations\n// TODO: what to do if multiple instances are in different groups? Only uses local matrices\n// TODO: what if instancing isn't wanted? Eg collision maps\n// TODO: ie11 fallback for TextDecoder?\n\nconst TYPE_ARRAY = {\n    5121: Uint8Array,\n    5122: Int16Array,\n    5123: Uint16Array,\n    5125: Uint32Array,\n    5126: Float32Array,\n    'image/jpeg': Uint8Array,\n    'image/png': Uint8Array,\n};\n\nconst TYPE_SIZE = {\n    SCALAR: 1,\n    VEC2: 2,\n    VEC3: 3,\n    VEC4: 4,\n    MAT2: 4,\n    MAT3: 9,\n    MAT4: 16,\n};\n\nconst ATTRIBUTES = {\n    POSITION: 'position',\n    NORMAL: 'normal',\n    TANGENT: 'tangent',\n    TEXCOORD_0: 'uv',\n    TEXCOORD_1: 'uv2',\n    COLOR_0: 'color',\n    WEIGHTS_0: 'skinWeight',\n    JOINTS_0: 'skinIndex',\n};\n\nconst TRANSFORMS = {\n    translation: 'position',\n    rotation: 'quaternion',\n    scale: 'scale',\n};\n\nexport class GLTFLoader {\n    static async load(gl, src) {\n        const dir = src.split('/').slice(0, -1).join('/') + '/';\n\n        // load main description json\n        const desc = await this.parseDesc(src);\n\n        return await this.parse(gl, desc, dir);\n    }\n\n    static async parse(gl, desc, dir) {\n        if (desc.asset === undefined || desc.asset.version[0] < 2) console.warn('Only GLTF >=2.0 supported. Attempting to parse.');\n\n        // Load buffers async\n        const buffers = await this.loadBuffers(desc, dir);\n\n        // Unbind current VAO so that new buffers don't get added to active mesh\n        gl.renderer.bindVertexArray(null);\n\n        // Create gl buffers from bufferViews\n        const bufferViews = this.parseBufferViews(gl, desc, buffers);\n\n        // Create images from either bufferViews or separate image files\n        const images = this.parseImages(gl, desc, dir, bufferViews);\n\n        const textures = this.parseTextures(gl, desc, images);\n\n        // Just pass through material data for now\n        const materials = this.parseMaterials(gl, desc, textures);\n\n        // Fetch the inverse bind matrices for skeleton joints\n        const skins = this.parseSkins(gl, desc, bufferViews);\n\n        // Create geometries for each mesh primitive\n        const meshes = this.parseMeshes(gl, desc, bufferViews, materials, skins);\n\n        // Create transforms, meshes and hierarchy\n        const nodes = this.parseNodes(gl, desc, meshes, skins);\n\n        // Place nodes in skeletons\n        this.populateSkins(skins, nodes);\n\n        // Create animation handlers\n        const animations = this.parseAnimations(gl, desc, nodes, bufferViews);\n\n        // Get top level nodes for each scene\n        const scenes = this.parseScenes(desc, nodes);\n        const scene = scenes[desc.scene];\n\n        // Remove null nodes (instanced transforms)\n        for (let i = nodes.length; i >= 0; i--) if (!nodes[i]) nodes.splice(i, 1);\n\n        return {\n            json: desc,\n            buffers,\n            bufferViews,\n            images,\n            textures,\n            materials,\n            meshes,\n            nodes,\n            animations,\n            scenes,\n            scene,\n        };\n    }\n\n    static async parseDesc(src) {\n        if (!src.match(/\\.glb/)) {\n            return await fetch(src).then((res) => res.json());\n        } else {\n            return await fetch(src)\n                .then((res) => res.arrayBuffer())\n                .then((glb) => this.unpackGLB(glb));\n        }\n    }\n\n    // From https://github.com/donmccurdy/glTF-Transform/blob/e4108cc/packages/core/src/io/io.ts#L32\n    static unpackGLB(glb) {\n        // Decode and verify GLB header.\n        const header = new Uint32Array(glb, 0, 3);\n        if (header[0] !== 0x46546c67) {\n            throw new Error('Invalid glTF asset.');\n        } else if (header[1] !== 2) {\n            throw new Error(`Unsupported glTF binary version, \"${header[1]}\".`);\n        }\n        // Decode and verify chunk headers.\n        const jsonChunkHeader = new Uint32Array(glb, 12, 2);\n        const jsonByteOffset = 20;\n        const jsonByteLength = jsonChunkHeader[0];\n        if (jsonChunkHeader[1] !== 0x4e4f534a) {\n            throw new Error('Unexpected GLB layout.');\n        }\n\n        // Decode JSON.\n        const jsonText = new TextDecoder().decode(glb.slice(jsonByteOffset, jsonByteOffset + jsonByteLength));\n        const json = JSON.parse(jsonText);\n        // JSON only\n        if (jsonByteOffset + jsonByteLength === glb.byteLength) return json;\n\n        const binaryChunkHeader = new Uint32Array(glb, jsonByteOffset + jsonByteLength, 2);\n        if (binaryChunkHeader[1] !== 0x004e4942) {\n            throw new Error('Unexpected GLB layout.');\n        }\n        // Decode content.\n        const binaryByteOffset = jsonByteOffset + jsonByteLength + 8;\n        const binaryByteLength = binaryChunkHeader[0];\n        const binary = glb.slice(binaryByteOffset, binaryByteOffset + binaryByteLength);\n        // Attach binary to buffer\n        json.buffers[0].binary = binary;\n        return json;\n    }\n\n    // Threejs GLTF Loader https://github.com/mrdoob/three.js/blob/master/examples/js/loaders/GLTFLoader.js#L1085\n    static resolveURI(uri, dir) {\n        // Invalid URI\n        if (typeof uri !== 'string' || uri === '') return '';\n\n        // Host Relative URI\n        if (/^https?:\\/\\//i.test(dir) && /^\\//.test(uri)) {\n            dir = dir.replace(/(^https?:\\/\\/[^\\/]+).*/i, '$1');\n        }\n\n        // Absolute URI http://, https://, //\n        if (/^(https?:)?\\/\\//i.test(uri)) return uri;\n\n        // Data URI\n        if (/^data:.*,.*$/i.test(uri)) return uri;\n\n        // Blob URI\n        if (/^blob:.*$/i.test(uri)) return uri;\n\n        // Relative URI\n        return dir + uri;\n    }\n\n    static async loadBuffers(desc, dir) {\n        if (!desc.buffers) return null;\n        return await Promise.all(\n            desc.buffers.map((buffer) => {\n                // For GLB, binary buffer ready to go\n                if (buffer.binary) return buffer.binary;\n                const uri = this.resolveURI(buffer.uri, dir);\n                return fetch(uri).then((res) => res.arrayBuffer());\n            })\n        );\n    }\n\n    static parseBufferViews(gl, desc, buffers) {\n        if (!desc.bufferViews) return null;\n        // Clone to leave description pure\n        const bufferViews = desc.bufferViews.map((o) => Object.assign({}, o));\n\n        desc.meshes &&\n            desc.meshes.forEach(({ primitives }) => {\n                primitives.forEach(({ attributes, indices }) => {\n                    // Flag bufferView as an attribute, so it knows to create a gl buffer\n                    for (let attr in attributes) bufferViews[desc.accessors[attributes[attr]].bufferView].isAttribute = true;\n\n                    if (indices === undefined) return;\n                    bufferViews[desc.accessors[indices].bufferView].isAttribute = true;\n\n                    // Make sure indices bufferView have a target property for gl buffer binding\n                    bufferViews[desc.accessors[indices].bufferView].target = gl.ELEMENT_ARRAY_BUFFER;\n                });\n            });\n\n        // Get componentType of each bufferView from the accessors\n        desc.accessors.forEach(({ bufferView: i, componentType }) => {\n            bufferViews[i].componentType = componentType;\n        });\n\n        // Get mimetype of bufferView from images\n        desc.images &&\n            desc.images.forEach(({ uri, bufferView: i, mimeType }) => {\n                if (i === undefined) return;\n                bufferViews[i].mimeType = mimeType;\n            });\n\n        // Push each bufferView to the GPU as a separate buffer\n        bufferViews.forEach(\n            (\n                {\n                    buffer: bufferIndex, // required\n                    byteOffset = 0, // optional\n                    byteLength, // required\n                    byteStride, // optional\n                    target = gl.ARRAY_BUFFER, // optional, added above for elements\n                    name, // optional\n                    extensions, // optional\n                    extras, // optional\n\n                    componentType, // optional, added from accessor above\n                    mimeType, // optional, added from images above\n                    isAttribute,\n                },\n                i\n            ) => {\n                const TypeArray = TYPE_ARRAY[componentType || mimeType];\n                const elementBytes = TypeArray.BYTES_PER_ELEMENT;\n\n                const data = new TypeArray(buffers[bufferIndex], byteOffset, byteLength / elementBytes);\n                bufferViews[i].data = data;\n                bufferViews[i].originalBuffer = buffers[bufferIndex];\n\n                if (!isAttribute) return;\n                // Create gl buffers for the bufferView, pushing it to the GPU\n                const buffer = gl.createBuffer();\n                gl.bindBuffer(target, buffer);\n                gl.renderer.state.boundBuffer = buffer;\n                gl.bufferData(target, data, gl.STATIC_DRAW);\n                bufferViews[i].buffer = buffer;\n            }\n        );\n\n        return bufferViews;\n    }\n\n    static parseImages(gl, desc, dir, bufferViews) {\n        if (!desc.images) return null;\n        return desc.images.map(({ uri, bufferView: bufferViewIndex, mimeType, name }) => {\n            const image = new Image();\n            image.name = name;\n            if (uri) {\n                image.src = this.resolveURI(uri, dir);\n            } else if (bufferViewIndex !== undefined) {\n                const { data } = bufferViews[bufferViewIndex];\n                const blob = new Blob([data], { type: mimeType });\n                image.src = URL.createObjectURL(blob);\n            }\n            image.ready = new Promise((res) => {\n                image.onload = () => res();\n            });\n            return image;\n        });\n    }\n\n    static parseTextures(gl, desc, images) {\n        if (!desc.textures) return null;\n        return desc.textures.map(({ sampler: samplerIndex, source: sourceIndex, name, extensions, extras }) => {\n            const options = {\n                flipY: false,\n                wrapS: gl.REPEAT, // Repeat by default, opposed to OGL's clamp by default\n                wrapT: gl.REPEAT,\n            };\n            const sampler = samplerIndex !== undefined ? desc.samplers[samplerIndex] : null;\n            if (sampler) {\n                ['magFilter', 'minFilter', 'wrapS', 'wrapT'].forEach((prop) => {\n                    if (sampler[prop]) options[prop] = sampler[prop];\n                });\n            }\n            const texture = new Texture(gl, options);\n            texture.name = name;\n            const image = images[sourceIndex];\n            image.ready.then(() => (texture.image = image));\n\n            return texture;\n        });\n    }\n\n    static parseMaterials(gl, desc, textures) {\n        if (!desc.materials) return null;\n        return desc.materials.map(\n            ({\n                name,\n                extensions,\n                extras,\n                pbrMetallicRoughness = {},\n                normalTexture,\n                occlusionTexture,\n                emissiveTexture,\n                emissiveFactor = [0, 0, 0],\n                alphaMode = 'OPAQUE',\n                alphaCutoff = 0.5,\n                doubleSided = false,\n            }) => {\n                const {\n                    baseColorFactor = [1, 1, 1, 1],\n                    baseColorTexture,\n                    metallicFactor = 1,\n                    roughnessFactor = 1,\n                    metallicRoughnessTexture,\n                    //   extensions,\n                    //   extras,\n                } = pbrMetallicRoughness;\n\n                if (baseColorTexture) {\n                    baseColorTexture.texture = textures[baseColorTexture.index];\n                    // texCoord\n                }\n                if (normalTexture) {\n                    normalTexture.texture = textures[normalTexture.index];\n                    // scale: 1\n                    // texCoord\n                }\n                if (metallicRoughnessTexture) {\n                    metallicRoughnessTexture.texture = textures[metallicRoughnessTexture.index];\n                    // texCoord\n                }\n                if (occlusionTexture) {\n                    occlusionTexture.texture = textures[occlusionTexture.index];\n                    // strength 1\n                    // texCoord\n                }\n                if (emissiveTexture) {\n                    emissiveTexture.texture = textures[emissiveTexture.index];\n                    // texCoord\n                }\n\n                return {\n                    name,\n                    baseColorFactor,\n                    baseColorTexture,\n                    metallicFactor,\n                    roughnessFactor,\n                    metallicRoughnessTexture,\n                    normalTexture,\n                    occlusionTexture,\n                    emissiveTexture,\n                    emissiveFactor,\n                    alphaMode,\n                    alphaCutoff,\n                    doubleSided,\n                };\n            }\n        );\n    }\n\n    static parseSkins(gl, desc, bufferViews) {\n        if (!desc.skins) return null;\n        return desc.skins.map(\n            ({\n                inverseBindMatrices, // optional\n                skeleton, // optional\n                joints, // required\n                // name,\n                // extensions,\n                // extras,\n            }) => {\n                return {\n                    inverseBindMatrices: this.parseAccessor(inverseBindMatrices, desc, bufferViews),\n                    skeleton,\n                    joints,\n                };\n            }\n        );\n    }\n\n    static parseMeshes(gl, desc, bufferViews, materials, skins) {\n        if (!desc.meshes) return null;\n        return desc.meshes.map(\n            (\n                {\n                    primitives, // required\n                    weights, // optional\n                    name, // optional\n                    extensions, // optional\n                    extras, // optional\n                },\n                meshIndex\n            ) => {\n                // TODO: weights stuff ?\n                // Parse through nodes to see how many instances there are\n                // and if there is a skin attached\n                let numInstances = 0;\n                let skinIndex = false;\n                desc.nodes &&\n                    desc.nodes.forEach(({ mesh, skin }) => {\n                        if (mesh === meshIndex) {\n                            numInstances++;\n                            if (skin !== undefined) skinIndex = skin;\n                        }\n                    });\n\n                primitives = this.parsePrimitives(gl, primitives, desc, bufferViews, materials, numInstances).map(({ geometry, program, mode }) => {\n                    // Create either skinned mesh or regular mesh\n                    const mesh =\n                        typeof skinIndex === 'number'\n                            ? new GLTFSkin(gl, { skeleton: skins[skinIndex], geometry, program, mode })\n                            : new Mesh(gl, { geometry, program, mode });\n                    mesh.name = name;\n                    if (mesh.geometry.isInstanced) {\n                        // Tag mesh so that nodes can add their transforms to the instance attribute\n                        mesh.numInstances = numInstances;\n                        // Avoid incorrect culling for instances\n                        mesh.frustumCulled = false;\n                    }\n                    return mesh;\n                });\n\n                return {\n                    primitives,\n                    weights,\n                    name,\n                };\n            }\n        );\n    }\n\n    static parsePrimitives(gl, primitives, desc, bufferViews, materials, numInstances) {\n        return primitives.map(\n            ({\n                attributes, // required\n                indices, // optional\n                material: materialIndex, // optional\n                mode = 4, // optional\n                targets, // optional\n                extensions, // optional\n                extras, // optional\n            }) => {\n                const geometry = new Geometry(gl);\n\n                // Add each attribute found in primitive\n                for (let attr in attributes) {\n                    geometry.addAttribute(ATTRIBUTES[attr], this.parseAccessor(attributes[attr], desc, bufferViews));\n                }\n\n                // Add index attribute if found\n                if (indices !== undefined) {\n                    geometry.addAttribute('index', this.parseAccessor(indices, desc, bufferViews));\n                }\n\n                // Add instanced transform attribute if multiple instances\n                if (numInstances > 1) {\n                    geometry.addAttribute('instanceMatrix', {\n                        instanced: 1,\n                        size: 16,\n                        data: new Float32Array(numInstances * 16),\n                    });\n                }\n\n                // TODO: materials\n                const program = new NormalProgram(gl);\n                if (materialIndex !== undefined) {\n                    program.gltfMaterial = materials[materialIndex];\n                }\n\n                return {\n                    geometry,\n                    program,\n                    mode,\n                };\n            }\n        );\n    }\n\n    static parseAccessor(index, desc, bufferViews) {\n        // TODO: init missing bufferView with 0s\n        // TODO: support sparse\n\n        const {\n            bufferView: bufferViewIndex, // optional\n            byteOffset = 0, // optional\n            componentType, // required\n            normalized = false, // optional\n            count, // required\n            type, // required\n            min, // optional\n            max, // optional\n            sparse, // optional\n            // name, // optional\n            // extensions, // optional\n            // extras, // optional\n        } = desc.accessors[index];\n\n        const {\n            data, // attached in parseBufferViews\n            originalBuffer, // attached in parseBufferViews\n            buffer, // replaced to be the actual GL buffer\n            byteOffset: bufferByteOffset = 0,\n            // byteLength, // applied in parseBufferViews\n            byteStride = 0,\n            target,\n            // name,\n            // extensions,\n            // extras,\n        } = bufferViews[bufferViewIndex];\n\n        const size = TYPE_SIZE[type];\n\n        // Parse data from joined buffers\n        const TypeArray = TYPE_ARRAY[componentType];\n        const elementBytes = data.BYTES_PER_ELEMENT;\n        const componentOffset = byteOffset / elementBytes;\n        const componentStride = byteStride / elementBytes;\n        const isInterleaved = !!byteStride && componentStride !== size;\n\n        // TODO: interleaved\n        const newData = isInterleaved ? data : new TypeArray(originalBuffer, byteOffset + bufferByteOffset, count * size);\n\n        // Return attribute data\n        return {\n            data: newData,\n            size,\n            type: componentType,\n            normalized,\n            buffer,\n            stride: byteStride,\n            offset: byteOffset,\n            count,\n            min,\n            max,\n        };\n    }\n\n    static parseNodes(gl, desc, meshes, skins) {\n        if (!desc.nodes) return null;\n        const nodes = desc.nodes.map(\n            ({\n                camera, // optional\n                children, // optional\n                skin: skinIndex, // optional\n                matrix, // optional\n                mesh: meshIndex, // optional\n                rotation, // optional\n                scale, // optional\n                translation, // optional\n                weights, // optional\n                name, // optional\n                extensions, // optional\n                extras, // optional\n            }) => {\n                const node = new Transform();\n                if (name) node.name = name;\n\n                // Apply transformations\n                if (matrix) {\n                    node.matrix.copy(matrix);\n                    node.decompose();\n                } else {\n                    if (rotation) node.quaternion.copy(rotation);\n                    if (scale) node.scale.copy(scale);\n                    if (translation) node.position.copy(translation);\n                    node.updateMatrix();\n                }\n\n                // Flags for avoiding duplicate transforms and removing unused instance nodes\n                let isInstanced = false;\n                let isFirstInstance = true;\n\n                // add mesh if included\n                if (meshIndex !== undefined) {\n                    meshes[meshIndex].primitives.forEach((mesh) => {\n                        if (mesh.geometry.isInstanced) {\n                            isInstanced = true;\n                            if (!mesh.instanceCount) {\n                                mesh.instanceCount = 0;\n                            } else {\n                                isFirstInstance = false;\n                            }\n                            node.matrix.toArray(mesh.geometry.attributes.instanceMatrix.data, mesh.instanceCount * 16);\n                            mesh.instanceCount++;\n\n                            if (mesh.instanceCount === mesh.numInstances) {\n                                // Remove properties once all instances added\n                                delete mesh.numInstances;\n                                delete mesh.instanceCount;\n                                // Flag attribute as dirty\n                                mesh.geometry.attributes.instanceMatrix.needsUpdate = true;\n                            }\n                        }\n\n                        // For instances, only the first node will actually have the mesh\n                        if (isInstanced) {\n                            if (isFirstInstance) mesh.setParent(node);\n                        } else {\n                            mesh.setParent(node);\n                        }\n                    });\n                }\n\n                // Reset node if instanced to not duplicate transforms\n                if (isInstanced) {\n                    // Remove unused nodes just providing an instance transform\n                    if (!isFirstInstance) return null;\n                    // Avoid duplicate transform for node containing the instanced mesh\n                    node.matrix.identity();\n                    node.decompose();\n                }\n\n                return node;\n            }\n        );\n\n        desc.nodes.forEach(({ children = [] }, i) => {\n            // Set hierarchy now all nodes created\n            children.forEach((childIndex) => {\n                if (!nodes[childIndex]) return;\n                nodes[childIndex].setParent(nodes[i]);\n            });\n        });\n\n        return nodes;\n    }\n\n    static populateSkins(skins, nodes) {\n        if (!skins) return;\n        skins.forEach((skin) => {\n            skin.joints = skin.joints.map((i, index) => {\n                const joint = nodes[i];\n                joint.bindInverse = new Mat4(...skin.inverseBindMatrices.data.slice(index * 16, (index + 1) * 16));\n                return joint;\n            });\n            if (skin.skeleton) skin.skeleton = nodes[skin.skeleton];\n        });\n    }\n\n    static parseAnimations(gl, desc, nodes, bufferViews) {\n        if (!desc.animations) return null;\n        return desc.animations.map(\n            ({\n                channels, // required\n                samplers, // required\n                name, // optional\n                // extensions, // optional\n                // extras,  // optional\n            }) => {\n                const data = channels.map(\n                    ({\n                        sampler: samplerIndex, // required\n                        target, // required\n                        // extensions, // optional\n                        // extras, // optional\n                    }) => {\n                        const {\n                            input: inputIndex, // required\n                            interpolation = 'LINEAR',\n                            output: outputIndex, // required\n                            // extensions, // optional\n                            // extras, // optional\n                        } = samplers[samplerIndex];\n\n                        const {\n                            node: nodeIndex, // optional - TODO: when is it not included?\n                            path, // required\n                            // extensions, // optional\n                            // extras, // optional\n                        } = target;\n\n                        const node = nodes[nodeIndex];\n                        const transform = TRANSFORMS[path];\n                        const times = this.parseAccessor(inputIndex, desc, bufferViews).data;\n                        const values = this.parseAccessor(outputIndex, desc, bufferViews).data;\n\n                        return {\n                            node,\n                            transform,\n                            interpolation,\n                            times,\n                            values,\n                        };\n                    }\n                );\n\n                return {\n                    name,\n                    animation: new GLTFAnimation(data),\n                };\n            }\n        );\n    }\n\n    static parseScenes(desc, nodes) {\n        if (!desc.scenes) return null;\n        return desc.scenes.map(\n            ({\n                nodes: nodesIndices = [],\n                name, // optional\n                extensions,\n                extras,\n            }) => {\n                return nodesIndices.reduce((map, i) => {\n                    // Don't add null nodes (instanced transforms)\n                    if (nodes[i]) map.push(nodes[i]);\n                    return map;\n                }, []);\n            }\n        );\n    }\n}\n","import * as Vec4Func from './functions/Vec4Func.js';\n\nexport class Vec4 extends Array {\n    constructor(x = 0, y = x, z = x, w = x) {\n        super(x, y, z, w);\n        return this;\n    }\n\n    get x() {\n        return this[0];\n    }\n\n    get y() {\n        return this[1];\n    }\n\n    get z() {\n        return this[2];\n    }\n\n    get w() {\n        return this[3];\n    }\n\n    set x(v) {\n        this[0] = v;\n    }\n\n    set y(v) {\n        this[1] = v;\n    }\n\n    set z(v) {\n        this[2] = v;\n    }\n\n    set w(v) {\n        this[3] = v;\n    }\n\n    set(x, y, z, w) {\n        if (x.length) return this.copy(x);\n        Vec4Func.set(this, x, y, z, w);\n        return this;\n    }\n\n    copy(v) {\n        Vec4Func.copy(this, v);\n        return this;\n    }\n\n    normalize() {\n        Vec4Func.normalize(this, this);\n        return this;\n    }\n\n    fromArray(a, o = 0) {\n        this[0] = a[o];\n        this[1] = a[o + 1];\n        this[2] = a[o + 2];\n        this[3] = a[o + 3];\n        return this;\n    }\n\n    toArray(a = [], o = 0) {\n        a[o] = this[0];\n        a[o + 1] = this[1];\n        a[o + 2] = this[2];\n        a[o + 3] = this[3];\n        return a;\n    }\n}\n","import { Geometry } from '../core/Geometry.js';\nimport { Plane } from './Plane.js';\n\nexport class Box extends Geometry {\n    constructor(gl, { width = 1, height = 1, depth = 1, widthSegments = 1, heightSegments = 1, depthSegments = 1, attributes = {} } = {}) {\n        const wSegs = widthSegments;\n        const hSegs = heightSegments;\n        const dSegs = depthSegments;\n\n        const num = (wSegs + 1) * (hSegs + 1) * 2 + (wSegs + 1) * (dSegs + 1) * 2 + (hSegs + 1) * (dSegs + 1) * 2;\n        const numIndices = (wSegs * hSegs * 2 + wSegs * dSegs * 2 + hSegs * dSegs * 2) * 6;\n\n        const position = new Float32Array(num * 3);\n        const normal = new Float32Array(num * 3);\n        const uv = new Float32Array(num * 2);\n        const index = num > 65536 ? new Uint32Array(numIndices) : new Uint16Array(numIndices);\n\n        let i = 0;\n        let ii = 0;\n\n        // left, right\n        Plane.buildPlane(position, normal, uv, index, depth, height, width, dSegs, hSegs, 2, 1, 0, -1, -1, i, ii);\n        i += (dSegs + 1) * (hSegs + 1);\n        ii += dSegs * hSegs;\n\n        Plane.buildPlane(position, normal, uv, index, depth, height, -width, dSegs, hSegs, 2, 1, 0, 1, -1, i, ii);\n        i += (dSegs + 1) * (hSegs + 1);\n        ii += dSegs * hSegs;\n\n        // top, bottom\n        Plane.buildPlane(position, normal, uv, index, width, depth, height, dSegs, wSegs, 0, 2, 1, 1, 1, i, ii);\n        i += (wSegs + 1) * (dSegs + 1);\n        ii += wSegs * dSegs;\n\n        Plane.buildPlane(position, normal, uv, index, width, depth, -height, dSegs, wSegs, 0, 2, 1, 1, -1, i, ii);\n        i += (wSegs + 1) * (dSegs + 1);\n        ii += wSegs * dSegs;\n\n        // front, back\n        Plane.buildPlane(position, normal, uv, index, width, height, -depth, wSegs, hSegs, 0, 1, 2, -1, -1, i, ii);\n        i += (wSegs + 1) * (hSegs + 1);\n        ii += wSegs * hSegs;\n\n        Plane.buildPlane(position, normal, uv, index, width, height, depth, wSegs, hSegs, 0, 1, 2, 1, -1, i, ii);\n\n        Object.assign(attributes, {\n            position: { size: 3, data: position },\n            normal: { size: 3, data: normal },\n            uv: { size: 2, data: uv },\n            index: { data: index },\n        });\n\n        super(gl, attributes);\n    }\n}\n","import { Geometry } from '../core/Geometry.js';\nimport { Vec3 } from '../math/Vec3.js';\n\nexport class Sphere extends Geometry {\n    constructor(\n        gl,\n        {\n            radius = 0.5,\n            widthSegments = 16,\n            heightSegments = Math.ceil(widthSegments * 0.5),\n            phiStart = 0,\n            phiLength = Math.PI * 2,\n            thetaStart = 0,\n            thetaLength = Math.PI,\n            attributes = {},\n        } = {}\n    ) {\n        const wSegs = widthSegments;\n        const hSegs = heightSegments;\n        const pStart = phiStart;\n        const pLength = phiLength;\n        const tStart = thetaStart;\n        const tLength = thetaLength;\n\n        const num = (wSegs + 1) * (hSegs + 1);\n        const numIndices = wSegs * hSegs * 6;\n\n        const position = new Float32Array(num * 3);\n        const normal = new Float32Array(num * 3);\n        const uv = new Float32Array(num * 2);\n        const index = num > 65536 ? new Uint32Array(numIndices) : new Uint16Array(numIndices);\n\n        let i = 0;\n        let iv = 0;\n        let ii = 0;\n        let te = tStart + tLength;\n        const grid = [];\n\n        let n = new Vec3();\n\n        for (let iy = 0; iy <= hSegs; iy++) {\n            let vRow = [];\n            let v = iy / hSegs;\n            for (let ix = 0; ix <= wSegs; ix++, i++) {\n                let u = ix / wSegs;\n                let x = -radius * Math.cos(pStart + u * pLength) * Math.sin(tStart + v * tLength);\n                let y = radius * Math.cos(tStart + v * tLength);\n                let z = radius * Math.sin(pStart + u * pLength) * Math.sin(tStart + v * tLength);\n\n                position[i * 3] = x;\n                position[i * 3 + 1] = y;\n                position[i * 3 + 2] = z;\n\n                n.set(x, y, z).normalize();\n                normal[i * 3] = n.x;\n                normal[i * 3 + 1] = n.y;\n                normal[i * 3 + 2] = n.z;\n\n                uv[i * 2] = u;\n                uv[i * 2 + 1] = 1 - v;\n\n                vRow.push(iv++);\n            }\n\n            grid.push(vRow);\n        }\n\n        for (let iy = 0; iy < hSegs; iy++) {\n            for (let ix = 0; ix < wSegs; ix++) {\n                let a = grid[iy][ix + 1];\n                let b = grid[iy][ix];\n                let c = grid[iy + 1][ix];\n                let d = grid[iy + 1][ix + 1];\n\n                if (iy !== 0 || tStart > 0) {\n                    index[ii * 3] = a;\n                    index[ii * 3 + 1] = b;\n                    index[ii * 3 + 2] = d;\n                    ii++;\n                }\n                if (iy !== hSegs - 1 || te < Math.PI) {\n                    index[ii * 3] = b;\n                    index[ii * 3 + 1] = c;\n                    index[ii * 3 + 2] = d;\n                    ii++;\n                }\n            }\n        }\n\n        Object.assign(attributes, {\n            position: { size: 3, data: position },\n            normal: { size: 3, data: normal },\n            uv: { size: 2, data: uv },\n            index: { data: index },\n        });\n\n        super(gl, attributes);\n    }\n}\n","import { Geometry } from '../core/Geometry.js';\nimport { Vec3 } from '../math/Vec3.js';\n\nexport class Cylinder extends Geometry {\n    constructor(\n        gl,\n        {\n            radiusTop = 0.5,\n            radiusBottom = 0.5,\n            height = 1,\n            radialSegments = 8,\n            heightSegments = 1,\n            openEnded = false,\n            thetaStart = 0,\n            thetaLength = Math.PI * 2,\n            attributes = {},\n        } = {}\n    ) {\n        const rSegs = radialSegments;\n        const hSegs = heightSegments;\n        const tStart = thetaStart;\n        const tLength = thetaLength;\n\n        const numCaps = openEnded ? 0 : radiusBottom && radiusTop ? 2 : 1;\n        const num = (rSegs + 1) * (hSegs + 1 + numCaps) + numCaps;\n        const numIndices = rSegs * hSegs * 6 + numCaps * rSegs * 3;\n\n        const position = new Float32Array(num * 3);\n        const normal = new Float32Array(num * 3);\n        const uv = new Float32Array(num * 2);\n        const index = num > 65536 ? new Uint32Array(numIndices) : new Uint16Array(numIndices);\n\n        let i = 0;\n        let ii = 0;\n        const indexArray = [];\n\n        addHeight();\n        if (!openEnded) {\n            if (radiusTop) addCap(true);\n            if (radiusBottom) addCap(false);\n        }\n\n        function addHeight() {\n            let x, y;\n            const n = new Vec3();\n            const slope = (radiusBottom - radiusTop) / height;\n\n            for (y = 0; y <= hSegs; y++) {\n                const indexRow = [];\n                const v = y / hSegs;\n\n                const r = v * (radiusBottom - radiusTop) + radiusTop;\n                for (x = 0; x <= rSegs; x++) {\n                    const u = x / rSegs;\n                    const theta = u * tLength + tStart;\n                    const sinTheta = Math.sin(theta);\n                    const cosTheta = Math.cos(theta);\n\n                    position.set([r * sinTheta, (0.5 - v) * height, r * cosTheta], i * 3);\n                    n.set(sinTheta, slope, cosTheta).normalize();\n                    normal.set([n.x, n.y, n.z], i * 3);\n                    uv.set([u, 1 - v], i * 2);\n                    indexRow.push(i++);\n                }\n                indexArray.push(indexRow);\n            }\n\n            for (x = 0; x < rSegs; x++) {\n                for (y = 0; y < hSegs; y++) {\n                    const a = indexArray[y][x];\n                    const b = indexArray[y + 1][x];\n                    const c = indexArray[y + 1][x + 1];\n                    const d = indexArray[y][x + 1];\n\n                    index.set([a, b, d, b, c, d], ii * 3);\n                    ii += 2;\n                }\n            }\n        }\n\n        function addCap(isTop) {\n            let x;\n            const r = isTop === true ? radiusTop : radiusBottom;\n            const sign = isTop === true ? 1 : -1;\n\n            const centerIndex = i;\n            position.set([0, 0.5 * height * sign, 0], i * 3);\n            normal.set([0, sign, 0], i * 3);\n            uv.set([0.5, 0.5], i * 2);\n            i++;\n\n            for (x = 0; x <= rSegs; x++) {\n                const u = x / rSegs;\n                const theta = u * tLength + tStart;\n                const cosTheta = Math.cos(theta);\n                const sinTheta = Math.sin(theta);\n\n                position.set([r * sinTheta, 0.5 * height * sign, r * cosTheta], i * 3);\n                normal.set([0, sign, 0], i * 3);\n                uv.set([cosTheta * 0.5 + 0.5, sinTheta * 0.5 * sign + 0.5], i * 2);\n                i++;\n            }\n\n            for (x = 0; x < rSegs; x++) {\n                const j = centerIndex + x + 1;\n                if (isTop) {\n                    index.set([j, j + 1, centerIndex], ii * 3);\n                } else {\n                    index.set([j + 1, j, centerIndex], ii * 3);\n                }\n                ii++;\n            }\n        }\n\n        Object.assign(attributes, {\n            position: { size: 3, data: position },\n            normal: { size: 3, data: normal },\n            uv: { size: 2, data: uv },\n            index: { data: index },\n        });\n\n        super(gl, attributes);\n    }\n}\n","// https://github.com/mrdoob/three.js/blob/master/src/geometries/TorusGeometry.js\n\nimport { Geometry } from '../core/Geometry.js';\nimport { Vec3 } from '../math/Vec3.js';\n\nexport class Torus extends Geometry {\n    constructor(gl, { radius = 0.5, tube = 0.2, radialSegments = 8, tubularSegments = 6, arc = Math.PI * 2, attributes = {} } = {}) {\n        const num = (radialSegments + 1) * (tubularSegments + 1);\n        const numIndices = radialSegments * tubularSegments * 6;\n\n        const vertices = new Float32Array(num * 3);\n        const normals = new Float32Array(num * 3);\n        const uvs = new Float32Array(num * 2);\n        const indices = num > 65536 ? new Uint32Array(numIndices) : new Uint16Array(numIndices);\n\n        const center = new Vec3();\n        const vertex = new Vec3();\n        const normal = new Vec3();\n\n        // generate vertices, normals and uvs\n        let idx = 0;\n        for (let j = 0; j <= radialSegments; j++) {\n            for (let i = 0; i <= tubularSegments; i++, idx++) {\n                const u = (i / tubularSegments) * arc;\n                const v = (j / radialSegments) * Math.PI * 2;\n\n                // vertex\n                vertex.x = (radius + tube * Math.cos(v)) * Math.cos(u);\n                vertex.y = (radius + tube * Math.cos(v)) * Math.sin(u);\n                vertex.z = tube * Math.sin(v);\n\n                vertices.set([vertex.x, vertex.y, vertex.z], idx * 3);\n\n                // normal\n                center.x = radius * Math.cos(u);\n                center.y = radius * Math.sin(u);\n                normal.sub(vertex, center).normalize();\n\n                normals.set([normal.x, normal.y, normal.z], idx * 3);\n\n                // uv\n                uvs.set([i / tubularSegments, j / radialSegments], idx * 2);\n            }\n        }\n\n        // generate indices\n        idx = 0;\n        for (let j = 1; j <= radialSegments; j++) {\n            for (let i = 1; i <= tubularSegments; i++, idx++) {\n                // indices\n                const a = (tubularSegments + 1) * j + i - 1;\n                const b = (tubularSegments + 1) * (j - 1) + i - 1;\n                const c = (tubularSegments + 1) * (j - 1) + i;\n                const d = (tubularSegments + 1) * j + i;\n\n                // faces\n                indices.set([a, b, d, b, c, d], idx * 6);\n            }\n        }\n\n        Object.assign(attributes, {\n            position: { size: 3, data: vertices },\n            normal: { size: 3, data: normals },\n            uv: { size: 2, data: uvs },\n            index: { data: indices },\n        });\n\n        super(gl, attributes);\n    }\n}\n","export function Text({\n    font,\n    text,\n    width = Infinity,\n    align = 'left',\n    size = 1,\n    letterSpacing = 0,\n    lineHeight = 1.4,\n    wordSpacing = 0,\n    wordBreak = false,\n}) {\n    const _this = this;\n    let glyphs, buffers;\n    let fontHeight, baseline, scale;\n\n    const newline = /\\n/;\n    const whitespace = /\\s/;\n\n    {\n        parseFont();\n        createGeometry();\n    }\n\n    function parseFont() {\n        glyphs = {};\n        font.chars.forEach((d) => (glyphs[d.char] = d));\n    }\n\n    function createGeometry() {\n        fontHeight = font.common.lineHeight;\n        baseline = font.common.base;\n\n        // Use baseline so that actual text height is as close to 'size' value as possible\n        scale = size / baseline;\n\n        // Strip spaces and newlines to get actual character length for buffers\n        let chars = text.replace(/[ \\n]/g, '');\n        let numChars = chars.length;\n\n        // Create output buffers\n        buffers = {\n            position: new Float32Array(numChars * 4 * 3),\n            uv: new Float32Array(numChars * 4 * 2),\n            id: new Float32Array(numChars * 4),\n            index: new Uint16Array(numChars * 6),\n        };\n\n        // Set values for buffers that don't require calculation\n        for (let i = 0; i < numChars; i++) {\n            buffers.id[i] = i;\n            buffers.index.set([i * 4, i * 4 + 2, i * 4 + 1, i * 4 + 1, i * 4 + 2, i * 4 + 3], i * 6);\n        }\n\n        layout();\n    }\n\n    function layout() {\n        const lines = [];\n\n        let cursor = 0;\n\n        let wordCursor = 0;\n        let wordWidth = 0;\n        let line = newLine();\n\n        function newLine() {\n            const line = {\n                width: 0,\n                glyphs: [],\n            };\n            lines.push(line);\n            wordCursor = cursor;\n            wordWidth = 0;\n            return line;\n        }\n\n        let maxTimes = 100;\n        let count = 0;\n        while (cursor < text.length && count < maxTimes) {\n            count++;\n\n            const char = text[cursor];\n\n            // Skip whitespace at start of line\n            if (!line.width && whitespace.test(char)) {\n                cursor++;\n                wordCursor = cursor;\n                wordWidth = 0;\n                continue;\n            }\n\n            // If newline char, skip to next line\n            if (newline.test(char)) {\n                cursor++;\n                line = newLine();\n                continue;\n            }\n\n            const glyph = glyphs[char] || glyphs[' '];\n\n            // Find any applicable kern pairs\n            if (line.glyphs.length) {\n                const prevGlyph = line.glyphs[line.glyphs.length - 1][0];\n                let kern = getKernPairOffset(glyph.id, prevGlyph.id) * scale;\n                line.width += kern;\n                wordWidth += kern;\n            }\n\n            // add char to line\n            line.glyphs.push([glyph, line.width]);\n\n            // calculate advance for next glyph\n            let advance = 0;\n\n            // If whitespace, update location of current word for line breaks\n            if (whitespace.test(char)) {\n                wordCursor = cursor;\n                wordWidth = 0;\n\n                // Add wordspacing\n                advance += wordSpacing * size;\n            } else {\n                // Add letterspacing\n                advance += letterSpacing * size;\n            }\n\n            advance += glyph.xadvance * scale;\n\n            line.width += advance;\n            wordWidth += advance;\n\n            // If width defined\n            if (line.width > width) {\n                // If can break words, undo latest glyph if line not empty and create new line\n                if (wordBreak && line.glyphs.length > 1) {\n                    line.width -= advance;\n                    line.glyphs.pop();\n                    line = newLine();\n                    continue;\n\n                    // If not first word, undo current word and cursor and create new line\n                } else if (!wordBreak && wordWidth !== line.width) {\n                    let numGlyphs = cursor - wordCursor + 1;\n                    line.glyphs.splice(-numGlyphs, numGlyphs);\n                    cursor = wordCursor;\n                    line.width -= wordWidth;\n                    line = newLine();\n                    continue;\n                }\n            }\n\n            cursor++;\n            // Reset infinite loop catch\n            count = 0;\n        }\n\n        // Remove last line if empty\n        if (!line.width) lines.pop();\n\n        populateBuffers(lines);\n    }\n\n    function populateBuffers(lines) {\n        const texW = font.common.scaleW;\n        const texH = font.common.scaleH;\n\n        // For all fonts tested, a little offset was needed to be right on the baseline, hence 0.07.\n        let y = 0.07 * size;\n        let j = 0;\n\n        for (let lineIndex = 0; lineIndex < lines.length; lineIndex++) {\n            let line = lines[lineIndex];\n\n            for (let i = 0; i < line.glyphs.length; i++) {\n                const glyph = line.glyphs[i][0];\n                let x = line.glyphs[i][1];\n\n                if (align === 'center') {\n                    x -= line.width * 0.5;\n                } else if (align === 'right') {\n                    x -= line.width;\n                }\n\n                // If space, don't add to geometry\n                if (whitespace.test(glyph.char)) continue;\n\n                // Apply char sprite offsets\n                x += glyph.xoffset * scale;\n                y -= glyph.yoffset * scale;\n\n                // each letter is a quad. axis bottom left\n                let w = glyph.width * scale;\n                let h = glyph.height * scale;\n                buffers.position.set([x, y - h, 0, x, y, 0, x + w, y - h, 0, x + w, y, 0], j * 4 * 3);\n\n                let u = glyph.x / texW;\n                let uw = glyph.width / texW;\n                let v = 1.0 - glyph.y / texH;\n                let vh = glyph.height / texH;\n                buffers.uv.set([u, v - vh, u, v, u + uw, v - vh, u + uw, v], j * 4 * 2);\n\n                // Reset cursor to baseline\n                y += glyph.yoffset * scale;\n\n                j++;\n            }\n\n            y -= size * lineHeight;\n        }\n\n        _this.buffers = buffers;\n        _this.numLines = lines.length;\n        _this.height = _this.numLines * size * lineHeight;\n        _this.width = Math.max(...lines.map((line) => line.width));\n    }\n\n    function getKernPairOffset(id1, id2) {\n        for (let i = 0; i < font.kernings.length; i++) {\n            let k = font.kernings[i];\n            if (k.first < id1) continue;\n            if (k.second < id2) continue;\n            if (k.first > id1) return 0;\n            if (k.first === id1 && k.second > id2) return 0;\n            return k.amount;\n        }\n        return 0;\n    }\n\n    // Update buffers to layout with new layout\n    this.resize = function (options) {\n        ({ width } = options);\n        layout();\n    };\n\n    // Completely change text (like creating new Text)\n    this.update = function (options) {\n        ({ text } = options);\n        createGeometry();\n    };\n}\n","import { Program } from '../core/Program.js';\nimport { Mesh } from '../core/Mesh.js';\nimport { Texture } from '../core/Texture.js';\nimport { RenderTarget } from '../core/RenderTarget.js';\nimport { Triangle } from './Triangle.js';\n\nexport class GPGPU {\n    constructor(\n        gl,\n        {\n            // Always pass in array of vec4s (RGBA values within texture)\n            data = new Float32Array(16),\n            geometry = new Triangle(gl),\n            type, // Pass in gl.FLOAT to force it, defaults to gl.HALF_FLOAT\n        }\n    ) {\n        this.gl = gl;\n        const initialData = data;\n        this.passes = [];\n        this.geometry = geometry;\n        this.dataLength = initialData.length / 4;\n\n        // Windows and iOS only like power of 2 textures\n        // Find smallest PO2 that fits data\n        this.size = Math.pow(2, Math.ceil(Math.log(Math.ceil(Math.sqrt(this.dataLength))) / Math.LN2));\n\n        // Create coords for output texture\n        this.coords = new Float32Array(this.dataLength * 2);\n        for (let i = 0; i < this.dataLength; i++) {\n            const x = (i % this.size) / this.size; // to add 0.5 to be center pixel ?\n            const y = Math.floor(i / this.size) / this.size;\n            this.coords.set([x, y], i * 2);\n        }\n\n        // Use original data if already correct length of PO2 texture, else copy to new array of correct length\n        const floatArray = (() => {\n            if (initialData.length === this.size * this.size * 4) {\n                return initialData;\n            } else {\n                const a = new Float32Array(this.size * this.size * 4);\n                a.set(initialData);\n                return a;\n            }\n        })();\n\n        // Create output texture uniform using input float texture with initial data\n        this.uniform = {\n            value: new Texture(gl, {\n                image: floatArray,\n                target: gl.TEXTURE_2D,\n                type: gl.FLOAT,\n                format: gl.RGBA,\n                internalFormat: gl.renderer.isWebgl2 ? gl.RGBA32F : gl.RGBA,\n                wrapS: gl.CLAMP_TO_EDGE,\n                wrapT: gl.CLAMP_TO_EDGE,\n                generateMipmaps: false,\n                minFilter: gl.NEAREST,\n                magFilter: gl.NEAREST,\n                width: this.size,\n                flipY: false,\n            }),\n        };\n\n        // Create FBOs\n        const options = {\n            width: this.size,\n            height: this.size,\n            type: type || gl.HALF_FLOAT || gl.renderer.extensions['OES_texture_half_float'].HALF_FLOAT_OES,\n            format: gl.RGBA,\n            internalFormat: gl.renderer.isWebgl2 ? (type === gl.FLOAT ? gl.RGBA32F : gl.RGBA16F) : gl.RGBA,\n            minFilter: gl.NEAREST,\n            depth: false,\n            unpackAlignment: 1,\n        };\n\n        this.fbo = {\n            read: new RenderTarget(gl, options),\n            write: new RenderTarget(gl, options),\n            swap: () => {\n                let temp = this.fbo.read;\n                this.fbo.read = this.fbo.write;\n                this.fbo.write = temp;\n                this.uniform.value = this.fbo.read.texture;\n            },\n        };\n    }\n\n    addPass({ vertex = defaultVertex, fragment = defaultFragment, uniforms = {}, textureUniform = 'tMap', enabled = true } = {}) {\n        uniforms[textureUniform] = this.uniform;\n        const program = new Program(this.gl, { vertex, fragment, uniforms });\n        const mesh = new Mesh(this.gl, { geometry: this.geometry, program });\n\n        const pass = {\n            mesh,\n            program,\n            uniforms,\n            enabled,\n            textureUniform,\n        };\n\n        this.passes.push(pass);\n        return pass;\n    }\n\n    render() {\n        const enabledPasses = this.passes.filter((pass) => pass.enabled);\n\n        enabledPasses.forEach((pass, i) => {\n            this.gl.renderer.render({\n                scene: pass.mesh,\n                target: this.fbo.write,\n                clear: false,\n            });\n            this.fbo.swap();\n        });\n    }\n}\n\nconst defaultVertex = /* glsl */ `\n    attribute vec2 uv;\n    attribute vec2 position;\n\n    varying vec2 vUv;\n\n    void main() {\n        vUv = uv;\n        gl_Position = vec4(position, 0, 1);\n    }\n`;\n\nconst defaultFragment = /* glsl */ `\n    precision highp float;\n\n    uniform sampler2D tMap;\n    varying vec2 vUv;\n\n    void main() {\n        gl_FragColor = texture2D(tMap, vUv);\n    }\n`;\n","const Cache = {\n  enabled: false,\n\n  files: {},\n\n  add: function(key, file) {\n    if (this.enabled === false) return\n\n    // console.log( 'THREE.Cache', 'Adding key:', key );\n\n    this.files[key] = file\n  },\n\n  get: function(key) {\n    if (this.enabled === false) return\n\n    // console.log( 'THREE.Cache', 'Checking key:', key );\n\n    return this.files[key]\n  },\n\n  remove: function(key) {\n    delete this.files[key]\n  },\n\n  clear: function() {\n    this.files = {}\n  },\n}\n\nexport {Cache}\n","class LoadingManager {\n  constructor(onLoad, onProgress, onError) {\n    const scope = this\n\n    let isLoading = false\n    let itemsLoaded = 0\n    let itemsTotal = 0\n    let urlModifier = undefined\n    const handlers = []\n\n    // Refer to #5689 for the reason why we don't set .onStart\n    // in the constructor\n\n    this.onStart = undefined\n    this.onLoad = onLoad\n    this.onProgress = onProgress\n    this.onError = onError\n\n    this.itemStart = function(url) {\n      itemsTotal++\n\n      if (isLoading === false) {\n        if (scope.onStart !== undefined) {\n          scope.onStart(url, itemsLoaded, itemsTotal)\n        }\n      }\n\n      isLoading = true\n    }\n\n    this.itemEnd = function(url) {\n      itemsLoaded++\n\n      if (scope.onProgress !== undefined) {\n        scope.onProgress(url, itemsLoaded, itemsTotal)\n      }\n\n      if (itemsLoaded === itemsTotal) {\n        isLoading = false\n\n        if (scope.onLoad !== undefined) {\n          scope.onLoad()\n        }\n      }\n    }\n\n    this.itemError = function(url) {\n      if (scope.onError !== undefined) {\n        scope.onError(url)\n      }\n    }\n\n    this.resolveURL = function(url) {\n      if (urlModifier) {\n        return urlModifier(url)\n      }\n\n      return url\n    }\n\n    this.setURLModifier = function(transform) {\n      urlModifier = transform\n\n      return this\n    }\n\n    this.addHandler = function(regex, loader) {\n      handlers.push(regex, loader)\n\n      return this\n    }\n\n    this.removeHandler = function(regex) {\n      const index = handlers.indexOf(regex)\n\n      if (index !== -1) {\n        handlers.splice(index, 2)\n      }\n\n      return this\n    }\n\n    this.getHandler = function(file) {\n      for (let i = 0, l = handlers.length; i < l; i += 2) {\n        const regex = handlers[i]\n        const loader = handlers[i + 1]\n\n        if (regex.global) regex.lastIndex = 0 // see #17920\n\n        if (regex.test(file)) {\n          return loader\n        }\n      }\n\n      return null\n    }\n  }\n}\n\nconst DefaultLoadingManager = new LoadingManager()\n\nexport {DefaultLoadingManager, LoadingManager}\n","import {DefaultLoadingManager} from './LoadingManager.js'\n\nclass Loader {\n  constructor(manager) {\n    this.manager = manager !== undefined ? manager : DefaultLoadingManager\n    this.crossOrigin = 'anonymous'\n    this.withCredentials = false\n    this.path = ''\n    this.resourcePath = ''\n    this.requestHeader = {}\n  }\n\n  load(/* url, onLoad, onProgress, onError */) {}\n\n  loadAsync(url, onProgress) {\n    const scope = this\n\n    return new Promise(function(resolve, reject) {\n      scope.load(url, resolve, onProgress, reject)\n    })\n  }\n\n  parse(/* data */) {}\n\n  setCrossOrigin(crossOrigin) {\n    this.crossOrigin = crossOrigin\n    return this\n  }\n\n  setWithCredentials(value) {\n    this.withCredentials = value\n    return this\n  }\n\n  setPath(path) {\n    this.path = path\n    return this\n  }\n\n  setResourcePath(resourcePath) {\n    this.resourcePath = resourcePath\n    return this\n  }\n\n  setRequestHeader(requestHeader) {\n    this.requestHeader = requestHeader\n    return this\n  }\n}\n\nexport {Loader}\n","/* eslint-disable no-invalid-this */\nimport {Cache} from './Cache.js'\nimport {Loader} from './Loader.js'\n\nclass ImageLoader extends Loader {\n  constructor(manager) {\n    super(manager)\n  }\n\n  load(url, onLoad, onProgress, onError) {\n    if (this.path !== undefined) url = this.path + url\n\n    url = this.manager.resolveURL(url)\n\n    const scope = this\n\n    const cached = Cache.get(url)\n\n    if (cached !== undefined) {\n      scope.manager.itemStart(url)\n\n      setTimeout(function() {\n        if (onLoad) onLoad(cached)\n\n        scope.manager.itemEnd(url)\n      }, 0)\n\n      return cached\n    }\n\n    const image = document.createElementNS(\n      'http://www.w3.org/1999/xhtml',\n      'img',\n    )\n\n    function onImageLoad() {\n      image.removeEventListener('load', onImageLoad, false)\n      image.removeEventListener('error', onImageError, false)\n\n      Cache.add(url, this)\n\n      if (onLoad) onLoad(this)\n\n      scope.manager.itemEnd(url)\n    }\n\n    function onImageError(event) {\n      image.removeEventListener('load', onImageLoad, false)\n      image.removeEventListener('error', onImageError, false)\n\n      if (onError) onError(event)\n\n      scope.manager.itemError(url)\n      scope.manager.itemEnd(url)\n    }\n\n    image.addEventListener('load', onImageLoad, false)\n    image.addEventListener('error', onImageError, false)\n\n    if (url.substr(0, 5) !== 'data:') {\n      if (this.crossOrigin !== undefined) image.crossOrigin = this.crossOrigin\n    }\n\n    scope.manager.itemStart(url)\n\n    image.src = url\n\n    return image\n  }\n}\n\nexport {ImageLoader}\n","import {Texture} from 'ogl'\nimport {ImageLoader} from './ImageLoader.js'\nimport {Loader} from './Loader.js'\n\nclass TextureLoader extends Loader {\n  constructor({manager, gl}) {\n    super(manager)\n    this.gl = gl\n  }\n\n  load(url, onLoad, onProgress, onError) {\n    const texture = new Texture(this.gl, {\n      anisotropy: 1,\n      generateMipmaps: false,\n    })\n\n    const loader = new ImageLoader(this.manager)\n    loader.setCrossOrigin(this.crossOrigin)\n    loader.setPath(this.path)\n\n    loader.load(\n      url,\n      (image) => {\n        texture.image = image\n\n        if (onLoad !== undefined) {\n          onLoad(texture)\n        }\n      },\n      onProgress,\n      onError,\n    )\n    return texture\n  }\n}\n\nexport {TextureLoader}\n","import BaseFigure from './BaseFigure'\n\nexport default class Figure extends BaseFigure {\n  constructor({scene, renderer, el, cover}) {\n    super({scene, renderer, el, cover})\n  }\n}\n","import {Plane, Program, Mesh, Vec2} from 'ogl'\nimport {TextureLoader} from './TextureLoader/TextureLoader'\nimport {generateID} from './utils/generateID'\n\n// shaders\nimport baseFragmentOld from './baseShaders/fragment_webgl1'\nimport vertexShaderOld from './baseShaders/vertex_webgl1'\nimport baseFragmentNew from './baseShaders/fragment_webgl2'\nimport vertexShaderNew from './baseShaders/vertex_webgl2'\nimport bgCover from './baseShaders/bgCover'\n\nexport default class BaseFigure {\n  sizes = new Vec2(0, 0)\n  offset = new Vec2(0, 0)\n  time = 0\n  rendering = false\n\n  constructor({scene, renderer, el, cover}) {\n    this.scene = scene\n    this.renderer = renderer\n    this.gl = this.renderer.gl\n    this.$el = el\n    this.cover = cover\n\n    this._id = generateID(12)\n    this.$el.setAttribute('data-gl-id', this._id)\n\n    this.loader = new TextureLoader({gl: this.gl})\n    this._setupShaders()\n    this.createMesh()\n  }\n\n  _setupShaders() {\n    this.vertexShader = this.renderer.isWebgl2\n      ? vertexShaderNew\n      : vertexShaderOld\n\n    this.baseVertex = bgCover + '\\n' + this.vertexShader\n\n    this.baseFragment = this.renderer.isWebgl2\n      ? baseFragmentNew\n      : baseFragmentOld\n  }\n\n  async uploadTexture(src) {\n    return new Promise(resolve => {\n      const texture = this.loader.load(src, () => resolve(texture))\n    })\n  }\n\n  disposeTexture(texture) {\n    this.gl.deleteTexture(texture.texture)\n  }\n\n  createMaterial(opts = {}) {\n    const resolution = {\n      type: 'v2',\n      value: new Vec2(\n        this.getBoundingTexture.naturalWidth,\n        this.getBoundingTexture.naturalHeight\n      ),\n    }\n\n    const size = {\n      type: 'v2',\n      value: new Vec2(\n        this.getBoundingTexture.width,\n        this.getBoundingTexture.height\n      ),\n    }\n\n    const cover = {\n      type: 'v2',\n      value: new Vec2(this.cover.positionX, this.cover.positionY),\n    }\n\n    let baseUniforms = {\n      size,\n      cover,\n      uTime: {value: 0},\n    }\n\n    if (this.cover.state) {\n      baseUniforms = {...baseUniforms, resolution}\n    }\n\n    const finalVertex = this.cover.state ? this.baseVertex : this.vertexShader\n\n    const uniforms = {...baseUniforms, ...opts?.uniforms}\n    let vertex = finalVertex + '\\n' + opts?.vertex\n    const fragment = this.baseFragment + '\\n' + opts?.fragment\n\n    vertex = this.renderer.isWebgl2 ? '#version 300 es' + '\\n' + vertex : vertex\n\n    this.geometry = new Plane(this.renderer.gl, {\n      width: 1,\n      height: 1,\n      widthSegments: 128,\n      heightSegments: 128,\n    })\n\n    this.material = new Program(this.renderer.gl, {\n      vertex,\n      fragment,\n      uniforms,\n      transparent: true,\n      depthTest: false,\n      depthWrite: false,\n    })\n  }\n\n  async createMesh() {\n    this.$el.classList.add('js-hidden')\n\n    await this.createMaterial()\n\n    this.setSizes()\n\n    this.mesh = new Mesh(this.renderer.gl, {\n      geometry: this.geometry,\n      program: this.material,\n    })\n\n    this.mesh.position.set(this.offset.x, this.offset.y, 0)\n    this.mesh.scale.set(this.sizes.x, this.sizes.y, this.sizes.x / 2)\n\n    this.mesh.setParent(this.scene)\n    this.rendering = true\n  }\n\n  setSizes() {\n    if (!this.rendering) {\n      return\n    }\n    const {width, height, top, left} = this.getBoundingTexture\n\n    const ww = window.innerWidth\n    const wh = window.innerHeight\n\n    this.sizes.set(width, height)\n    this.offset.set(left - ww / 2 + width / 2, wh / 2 - top - height / 2)\n  }\n\n  get getBoundingTexture() {\n    const {width, height, top, left} = this.$el.getBoundingClientRect()\n    let naturalWidth\n    let naturalHeight\n\n    if (this.texture && this.cover.state) {\n      naturalWidth = this.texture.image.naturalWidth\n      naturalHeight = this.texture.image.naturalHeight\n    }\n\n    return {width, height, top, left, naturalWidth, naturalHeight}\n  }\n\n  update() {\n    if (!this.rendering) {\n      return\n    }\n    this.time++\n    const m = this.material.uniforms\n    m.uTime.value = this.time\n  }\n\n  resize() {\n    if (!this.rendering) {\n      return\n    }\n    this.setSizes()\n    this.mesh.position.set(this.offset.x, this.offset.y, 0)\n    this.mesh.scale.set(this.sizes.x, this.sizes.y, 1)\n\n    this.material.uniforms.size.value.x = this.getBoundingTexture.width\n    this.material.uniforms.size.value.y = this.getBoundingTexture.height\n  }\n\n  destroy() {\n    this.$el.classList.remove('js-hidden')\n    this.$el.removeAttribute('data-gl-id')\n    this.geometry.remove()\n    this.material.remove()\n\n    this.scene.removeChild(this.mesh)\n  }\n}\n","export const generateID = (length = 8) => {\n  let result = ''\n  const characters =\n    'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789'\n  const charactersLength = characters.length\n  for (let i = 0; i < length; i++) {\n    result += characters.charAt(Math.floor(Math.random() * charactersLength))\n  }\n  return result\n}\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.raf = exports.RAF = void 0;\r\nclass RAF {\r\n    constructor() {\r\n        this.cbArray = [];\r\n        this.animation();\r\n    }\r\n    on(cb) {\r\n        this.cbArray.push(cb);\r\n    }\r\n    off(cb) {\r\n        this.cbArray = this.cbArray.filter(e => e !== cb);\r\n    }\r\n    animation() {\r\n        this.cbArray.forEach(cb => cb());\r\n        requestAnimationFrame(this.animation.bind(this));\r\n    }\r\n}\r\nexports.RAF = RAF;\r\nconst RAFInstance = new RAF();\r\nexports.raf = {\r\n    on: (cb) => RAFInstance.on(cb),\r\n    off: (cb) => RAFInstance.off(cb),\r\n};\r\n//# sourceMappingURL=raf.js.map","/**\n * Returns a function, that, as long as it continues to be invoked, will not\n * be triggered. The function will be called after it stops being called for\n * N milliseconds. If `immediate` is passed, trigger the function on the\n * leading edge, instead of the trailing. The function also has a property 'clear' \n * that is a function which will clear the timer to prevent previously scheduled executions. \n *\n * @source underscore.js\n * @see http://unscriptable.com/2009/03/20/debouncing-javascript-methods/\n * @param {Function} function to wrap\n * @param {Number} timeout in ms (`100`)\n * @param {Boolean} whether to execute at the beginning (`false`)\n * @api public\n */\nfunction debounce(func, wait, immediate){\n  var timeout, args, context, timestamp, result;\n  if (null == wait) wait = 100;\n\n  function later() {\n    var last = Date.now() - timestamp;\n\n    if (last < wait && last >= 0) {\n      timeout = setTimeout(later, wait - last);\n    } else {\n      timeout = null;\n      if (!immediate) {\n        result = func.apply(context, args);\n        context = args = null;\n      }\n    }\n  };\n\n  var debounced = function(){\n    context = this;\n    args = arguments;\n    timestamp = Date.now();\n    var callNow = immediate && !timeout;\n    if (!timeout) timeout = setTimeout(later, wait);\n    if (callNow) {\n      result = func.apply(context, args);\n      context = args = null;\n    }\n\n    return result;\n  };\n\n  debounced.clear = function() {\n    if (timeout) {\n      clearTimeout(timeout);\n      timeout = null;\n    }\n  };\n  \n  debounced.flush = function() {\n    if (timeout) {\n      result = func.apply(context, args);\n      context = args = null;\n      \n      clearTimeout(timeout);\n      timeout = null;\n    }\n  };\n\n  return debounced;\n};\n\n// Adds compatibility for ES modules\ndebounce.debounce = debounce;\n\nmodule.exports = debounce;\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.resize = exports.Resize = void 0;\r\nconst debounce_1 = require(\"debounce\");\r\nclass Resize {\r\n    constructor() {\r\n        this.cbArray = [];\r\n        this.init();\r\n    }\r\n    bounds() {\r\n        const methods = ['resizeHandler'];\r\n        methods.forEach(fn => {\r\n            this[fn] = this[fn].bind(this);\r\n        });\r\n    }\r\n    init() {\r\n        this.bounds();\r\n        this.debounced = debounce_1.debounce(this.resizeHandler, 60);\r\n        window.addEventListener('resize', this.debounced);\r\n    }\r\n    resizeHandler() {\r\n        this.cbArray.forEach(cb => cb());\r\n    }\r\n    on(cb) {\r\n        cb();\r\n        this.cbArray.push(cb);\r\n    }\r\n    off(cb) {\r\n        this.cbArray = this.cbArray.filter(e => e !== cb);\r\n    }\r\n    destroy() {\r\n        window.removeEventListener('resize', this.resizeHandler);\r\n    }\r\n}\r\nexports.Resize = Resize;\r\nconst resizeInstance = new Resize();\r\nexports.resize = {\r\n    on: (cb) => resizeInstance.on(cb),\r\n    off: (cb) => resizeInstance.off(cb),\r\n};\r\n//# sourceMappingURL=resize.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.clamp = exports.lerp = void 0;\r\nconst lerp = (a, b, n) => {\r\n    return a * (1 - n) + b * n;\r\n};\r\nexports.lerp = lerp;\r\nconst clamp = (num, a, b) => {\r\n    return Math.max(Math.min(num, Math.max(a, b)), Math.min(a, b));\r\n};\r\nexports.clamp = clamp;\r\n//# sourceMappingURL=math.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.createNewElement = void 0;\r\nconst createNewElement = (tag, classes) => {\r\n    const elem = document.createElement(tag);\r\n    elem.classList.add(classes);\r\n    return elem;\r\n};\r\nexports.createNewElement = createNewElement;\r\n//# sourceMappingURL=createNewElement.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst mutationObserver = (target, outsideCallback) => {\r\n    const config = {\r\n        childList: true,\r\n    };\r\n    const callback = function (mutationsList) {\r\n        for (const mutation of mutationsList) {\r\n            if (mutation.type === 'childList') {\r\n                outsideCallback();\r\n                // console.log('A child node has been added or removed.')\r\n            }\r\n        }\r\n    };\r\n    const observer = new MutationObserver(callback);\r\n    observer.observe(target, config);\r\n    return () => observer.disconnect();\r\n};\r\nexports.default = mutationObserver;\r\n//# sourceMappingURL=mutationObserver.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.matrixTransform = void 0;\r\nconst matrixTransform = (params = {}) => {\r\n    var _a, _b, _c, _d, _e, _f, _g;\r\n    const def = {\r\n        scale: (_a = params.scale) !== null && _a !== void 0 ? _a : { x: 1, y: 1 },\r\n        move: (_b = params.move) !== null && _b !== void 0 ? _b : { x: 0, y: 0, z: 0 },\r\n    };\r\n    const p = Object.keys(def).map(key => {\r\n        if (typeof def[key] === 'string' || typeof def[key] === 'number') {\r\n            return { x: def[key], y: def[key], z: def[key] };\r\n        }\r\n        return def[key];\r\n    });\r\n    return `matrix3d(\n    ${(_c = p[0].x) !== null && _c !== void 0 ? _c : 1},0,0,0,\n    0,${(_d = p[0].y) !== null && _d !== void 0 ? _d : 1},0,0,\n    0,0,1,0,\n    ${(_e = p[1].x) !== null && _e !== void 0 ? _e : 0},${(_f = p[1].y) !== null && _f !== void 0 ? _f : 0},${(_g = p[1].z) !== null && _g !== void 0 ? _g : 0},1\n    )`;\r\n};\r\nexports.matrixTransform = matrixTransform;\r\n//# sourceMappingURL=matrixTransform.js.map","\"use strict\";\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.matrixTransform = exports.mutationObserver = exports.createNewElement = exports.lerp = exports.clamp = exports.resize = exports.raf = void 0;\r\nconst raf_1 = require(\"./raf/raf\");\r\nObject.defineProperty(exports, \"raf\", { enumerable: true, get: function () { return raf_1.raf; } });\r\nconst resize_1 = require(\"./resize/resize\");\r\nObject.defineProperty(exports, \"resize\", { enumerable: true, get: function () { return resize_1.resize; } });\r\nconst math_1 = require(\"./math\");\r\nObject.defineProperty(exports, \"clamp\", { enumerable: true, get: function () { return math_1.clamp; } });\r\nObject.defineProperty(exports, \"lerp\", { enumerable: true, get: function () { return math_1.lerp; } });\r\nconst createNewElement_1 = require(\"./createNewElement\");\r\nObject.defineProperty(exports, \"createNewElement\", { enumerable: true, get: function () { return createNewElement_1.createNewElement; } });\r\nconst mutationObserver_1 = __importDefault(require(\"./mutationObserver\"));\r\nexports.mutationObserver = mutationObserver_1.default;\r\nconst matrixTransform_1 = require(\"./matrixTransform\");\r\nObject.defineProperty(exports, \"matrixTransform\", { enumerable: true, get: function () { return matrixTransform_1.matrixTransform; } });\r\n//# sourceMappingURL=index.js.map","import {Renderer, Transform} from 'ogl'\nimport {resize, raf} from '@emotionagency/utils'\n\nexport default class DefaultScetch {\n  constructor($selector, opts) {\n    this.$container = document.querySelector($selector)\n    this.raf = opts.raf ?? raf\n    this.opts = opts\n\n    this.sizes = {\n      w: window.innerWidth,\n      h: window.innerHeight,\n    }\n\n    this.time = 0\n\n    this._bounds()\n  }\n\n  _bounds() {\n    const m = ['_animate', '_resize']\n    m.forEach((fn) => {\n      this[fn] = this[fn].bind(this)\n    })\n  }\n\n  _init() {\n    this.scene = new Transform()\n\n    this.renderer = new Renderer({\n      dpr: this.opts.dpr ?? 2,\n      antialias: true ?? this.opts.antialias ?? true,\n      alpha: this.opts.alpha ?? true,\n      premultipliedAlpha: this.opts.premultipliedAlpha ?? true,\n      depth: this.opts.depth ?? true,\n      stencil: this.opts.stencil ?? false,\n      preserveDrawingBuffer: this.opts.preserveDrawingBuffer ?? false,\n      powerPreference: this.opts.preserveDrawingBuffer ?? 'default',\n      autoClear: this.opts.autoClear ?? true,\n      webgl: this.opts.webgl ?? 2,\n    })\n\n    this._setupCamera()\n    this.renderer.setSize(this.sizes.w, this.sizes.h)\n    this.$container.appendChild(this.renderer.gl.canvas)\n\n    this.raf.on(this._animate)\n    resize.on(this._resize)\n  }\n\n  _setupCamera() {}\n\n  _resize() {\n    this.sizes = {...this.sizes, w: window.innerWidth, h: window.innerHeight}\n\n    this._setupCamera()\n\n    this.camera.updateMatrixWorld()\n\n    this.camera.perspective({\n      aspect: this.sizes.w / this.sizes.h,\n    })\n\n    this.renderer.setSize(this.sizes.w, this.sizes.h)\n  }\n\n  _animate() {\n    this.time++\n    this.renderer.render({scene: this.scene, camera: this.camera})\n  }\n  destroy() {\n    this.raf.off(this._animate)\n    resize.off(this._resize)\n  }\n}\n","import {Camera} from 'ogl'\nimport DefaultScetch from './DefaultScetch'\n\nconst cover = {\n  state: true,\n  positionX: 0.5,\n  positionY: 0.5,\n}\n\n// const opts = {\n// raf: '',\n// camera: {\n// near: ''\n// far: ''\n// }\n//   nodes: [\n//     {\n//       $el: '',\n//       Figure: '',\n//       cover: '',\n//     },\n//     {\n//       $el: '',\n//       Figure: '',\n//       cover: '',\n//     },\n//   ],\n// }\n\nexport default class Scetch extends DefaultScetch {\n  figures = []\n  $els = []\n\n  constructor($selector, opts = {}) {\n    super($selector, opts)\n    this._init()\n    this.addFigures(opts.nodes)\n  }\n\n  _init() {\n    super._init()\n  }\n\n  _setupCamera() {\n    super._setupCamera()\n\n    this.perspective = 800\n    const formula = 2 * Math.atan(this.sizes.h / 2 / this.perspective)\n    const fov = (180 * formula) / Math.PI\n\n    this.camera = new Camera(this.renderer.gl, {\n      fov,\n      aspect: this.sizes.w / this.sizes.h,\n      near: this.opts.camera?.near ?? 0.01,\n      far: this.opts.camera?.far ?? 10000,\n    })\n\n    this.camera.position.set(0, 0, this.perspective)\n    this.camera.lookAt([0, 0, 0])\n  }\n\n  _updatePos() {\n    this.figures.forEach((figure) => {\n      figure.setSizes()\n      figure.resize()\n      figure.update()\n    })\n  }\n\n  addFigures(nodes = []) {\n    const $els = nodes.map((node) => node.$el)\n    this.$els = [...this.$els, ...$els]\n\n    $els.length &&\n      $els.forEach((el, i) => {\n        const figureIns = new nodes[i].Figure({\n          el,\n          scene: this.scene,\n          renderer: this.renderer,\n          cover: nodes[i].cover ?? cover,\n        })\n        this.figures.push(figureIns)\n      })\n  }\n\n  removeFigure(id) {\n    this.$els = this.$els.filter(($el) => $el.dataset.glId !== id)\n\n    this.figures.find((f) => f._id === id).destroy()\n    this.figures = this.figures.filter((f) => f._id !== id)\n  }\n\n  _animate() {\n    this._updatePos()\n    super._animate()\n  }\n\n  destroy() {\n    this.figures.forEach((figure) => {\n      this.removeFigure(figure._id)\n    })\n    setTimeout(() => {\n      super.destroy()\n    }, 100)\n  }\n}\n"],"names":["length","a","x","y","z","Math","sqrt","copy","out","add","b","subtract","scale","squaredLength","normalize","len","dot","cross","ax","ay","az","bx","by","bz","angle","tempA","tempB","cosine","PI","acos","Vec3","Array","constructor","super","this","v","set","Vec3Func.set","Vec3Func.copy","va","vb","Vec3Func.add","sub","Vec3Func.subtract","multiply","Vec3Func.scale","divide","inverse","Vec3Func.length","distance","Vec3Func.distance","squaredLen","Vec3Func.squaredLength","squaredDistance","Vec3Func.squaredDistance","negate","Vec3Func.cross","Vec3Func.normalize","Vec3Func.dot","equals","applyMatrix4","mat4","m","w","Vec3Func.transformMat4","scaleRotateMatrix4","Vec3Func.scaleRotateMat4","applyQuaternion","q","qx","qy","qz","uvx","uvy","uvz","uuvx","uuvy","uuvz","w2","Vec3Func.transformQuat","Vec3Func.angle","lerp","t","Vec3Func.lerp","clone","fromArray","o","toArray","transformDirection","tempVec3","ID","ATTR_ID","isBoundsWarned","Geometry","gl","attributes","canvas","console","error","id","VAOs","drawRange","start","count","instancedCount","renderer","bindVertexArray","currentGeometry","glState","state","key","addAttribute","attr","size","type","data","Float32Array","FLOAT","Uint16Array","UNSIGNED_SHORT","UNSIGNED_INT","target","ELEMENT_ARRAY_BUFFER","ARRAY_BUFFER","normalized","stride","offset","byteLength","divisor","instanced","needsUpdate","buffer","createBuffer","updateAttribute","isInstanced","warn","min","index","max","boundBuffer","bindBuffer","bufferData","STATIC_DRAW","setIndex","value","setDrawRange","setInstancedCount","createVAO","program","attributeOrder","createVertexArray","bindAttributes","attributeLocations","forEach","location","name","numLoc","i","vertexAttribPointer","enableVertexAttribArray","vertexAttribDivisor","draw","mode","TRIANGLES","drawElementsInstanced","drawArraysInstanced","drawElements","drawArrays","getPosition","position","computeBoundingBox","array","bounds","center","radius","Infinity","l","computeBoundingSphere","maxRadiusSq","remove","deleteVertexArray","deleteBuffer","arrayCacheF32","Program","vertex","fragment","uniforms","transparent","cullFace","BACK","frontFace","CCW","depthTest","depthWrite","depthFunc","LESS","blendFunc","blendEquation","src","setBlendFunc","premultipliedAlpha","ONE","SRC_ALPHA","ONE_MINUS_SRC_ALPHA","vertexShader","createShader","VERTEX_SHADER","shaderSource","compileShader","getShaderInfoLog","addLineNumbers","fragmentShader","FRAGMENT_SHADER","createProgram","attachShader","linkProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","deleteShader","uniformLocations","Map","numUniforms","ACTIVE_UNIFORMS","uIndex","uniform","getActiveUniform","getUniformLocation","split","match","uniformName","isStructArray","structIndex","Number","structProperty","isNaN","isStruct","locations","numAttribs","ACTIVE_ATTRIBUTES","aIndex","attribute","getActiveAttrib","getAttribLocation","join","dst","srcAlpha","dstAlpha","setBlendEquation","modeRGB","modeAlpha","applyState","enable","DEPTH_TEST","disable","CULL_FACE","BLEND","setCullFace","setFrontFace","setDepthMask","setDepthFunc","use","flipFaces","textureUnit","currentProgram","useProgram","activeUniform","undefined","texture","update","setUniform","textureUnits","push","CW","deleteProgram","arrayLen","valueLen","flatten","setValue","get","slice","arraysEqual","setArray","uniform1fv","uniform1f","uniform2fv","uniform3fv","uniform4fv","uniform1iv","uniform1i","uniform2iv","uniform3iv","uniform4iv","uniformMatrix2fv","uniformMatrix3fv","uniformMatrix4fv","string","lines","warnCount","message","Renderer","document","createElement","width","height","dpr","alpha","depth","stencil","antialias","preserveDrawingBuffer","powerPreference","autoClear","webgl","color","getContext","isWebgl2","setSize","ZERO","FUNC_ADD","depthMask","premultiplyAlpha","flipY","unpackAlignment","framebuffer","viewport","activeTextureUnit","extensions","getExtension","drawBuffers","parameters","maxTextureUnits","getParameter","MAX_COMBINED_TEXTURE_IMAGE_UNITS","maxAnisotropy","MAX_TEXTURE_MAX_ANISOTROPY_EXT","Object","assign","style","setViewport","blendFuncSeparate","blendEquationSeparate","activeTexture","TEXTURE0","bindFramebuffer","FRAMEBUFFER","extension","webgl2Func","extFunc","bind","sortOpaque","renderOrder","zDepth","sortTransparent","sortUI","getRenderList","scene","camera","frustumCull","sort","renderList","updateFrustum","traverse","node","visible","frustumCulled","frustumIntersectsMesh","opaque","ui","worldMatrix","getTranslation","projectionViewMatrix","concat","render","clear","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","STENCIL_BUFFER_BIT","updateMatrixWorld","aw","bw","vec4.copy","vec4.set","vec4.normalize","Quat","onChange","identity","QuatFunc.set","rotateX","rad","sin","cos","QuatFunc.rotateX","rotateY","QuatFunc.rotateY","rotateZ","QuatFunc.rotateZ","a0","a1","a2","a3","invDot","QuatFunc.invert","conjugate","QuatFunc.copy","QuatFunc.normalize","qA","qB","QuatFunc.multiply","fromMatrix3","matrix3","fRoot","fTrace","j","k","QuatFunc.fromMat3","fromEuler","euler","order","sx","cx","sy","cy","sz","cz","QuatFunc.fromEuler","fromAxisAngle","axis","s","QuatFunc.setAxisAngle","slerp","omega","cosom","sinom","scale0","scale1","QuatFunc.slerp","a00","a01","a02","a03","a10","a11","a12","a13","a20","a21","a22","a23","a30","a31","a32","a33","b0","b1","b2","b3","getScaling","mat","m21","m22","m23","m31","m32","m33","hypot","getRotation","temp","scaling","is1","is2","is3","sm11","sm12","sm13","sm21","sm22","sm23","sm31","sm32","sm33","trace","S","Mat4","m00","m01","m02","m03","m10","m11","m12","m13","m20","m30","Mat4Func.set","translate","Mat4Func.translate","rotate","c","b00","b01","b02","b10","b11","b12","b20","b21","b22","abs","Mat4Func.rotate","Mat4Func.scale","ma","mb","Mat4Func.multiply","fromPerspective","fov","aspect","near","far","fovy","f","tan","nf","Mat4Func.perspective","fromOrthogonal","left","right","bottom","top","lr","bt","Mat4Func.ortho","fromQuaternion","x2","y2","z2","xx","yx","yy","zx","zy","zz","wx","wy","wz","Mat4Func.fromQuat","setPosition","b03","b04","b05","b06","b07","b08","b09","det","Mat4Func.invert","compose","pos","xy","xz","yz","Mat4Func.fromRotationTranslationScale","Mat4Func.getRotation","Mat4Func.getScaling","getMaxScaleOnAxis","Mat4Func.getMaxScaleOnAxis","lookAt","eye","up","eyex","eyey","eyez","upx","upy","upz","z0","z1","x0","x1","Mat4Func.targetTo","determinant","Mat4Func.determinant","tmpMat4","Euler","reorder","fromRotationMatrix","asin","atan2","EulerFunc.fromRotationMatrix","Transform","parent","children","matrix","matrixAutoUpdate","quaternion","rotation","setParent","notifyParent","removeChild","addChild","child","notifyChild","indexOf","splice","force","updateMatrix","worldMatrixNeedsUpdate","callback","decompose","invert","tempMat4","tempVec3a","tempVec3b","Camera","zoom","projectionMatrix","viewMatrix","worldPosition","orthographic","perspective","project","unproject","frustum","constant","invLen","geometry","frustumIntersectsSphere","normal","plane","Mat3","Mat3Func.set","Mat3Func.translate","Mat3Func.rotate","Mat3Func.scale","Mat3Func.multiply","fromMatrix4","Mat3Func.fromQuat","fromBasis","vec3a","vec3b","vec3c","Mat3Func.invert","getNormalMatrix","Mat3Func.normalFromMat4","Mesh","modelViewMatrix","normalMatrix","beforeRenderCallbacks","afterRenderCallbacks","onBeforeRender","onAfterRender","mesh","modelMatrix","cameraPosition","emptyPixel","Uint8Array","isPowerOf2","Texture","image","TEXTURE_2D","UNSIGNED_BYTE","format","RGBA","internalFormat","wrapS","CLAMP_TO_EDGE","wrapT","generateMipmaps","minFilter","NEAREST_MIPMAP_LINEAR","LINEAR","magFilter","anisotropy","level","createTexture","store","REPEAT","bindTexture","pixelStorei","UNPACK_FLIP_Y_WEBGL","UNPACK_PREMULTIPLY_ALPHA_WEBGL","UNPACK_ALIGNMENT","texParameteri","TEXTURE_MIN_FILTER","TEXTURE_MAG_FILTER","TEXTURE_WRAP_S","TEXTURE_WRAP_T","texParameterf","TEXTURE_MAX_ANISOTROPY_EXT","TEXTURE_CUBE_MAP","texImage2D","TEXTURE_CUBE_MAP_POSITIVE_X","ArrayBuffer","isView","isCompressedTexture","compressedTexImage2D","generateMipmap","onUpdate","RenderTarget","depthTexture","createFramebuffer","textures","framebufferTexture2D","COLOR_ATTACHMENT0","NEAREST","DEPTH_COMPONENT","DEPTH_COMPONENT16","DEPTH_ATTACHMENT","depthBuffer","createRenderbuffer","bindRenderbuffer","RENDERBUFFER","renderbufferStorage","framebufferRenderbuffer","stencilBuffer","STENCIL_INDEX8","STENCIL_ATTACHMENT","depthStencilBuffer","DEPTH_STENCIL","DEPTH_STENCIL_ATTACHMENT","NAMES","black","white","red","green","blue","fuchsia","cyan","yellow","orange","hexToRGB","hex","rgb","exec","parseInt","numberToRGB","num","parseColor","arguments","toLowerCase","Color","isArray","ColorFunc.parseColor","r","g","Vec2","Vec2Func.set","Vec2Func.add","Vec2Func.subtract","Vec2Func.scale","Vec2Func.length","Vec2Func.squaredLength","Vec2Func.cross","applyMatrix3","mat3","Vec2Func.transformMat4","Vec2Func.lerp","Plane","widthSegments","heightSegments","wSegs","hSegs","numIndices","uv","Uint32Array","buildPlane","u","uDir","vDir","ii","io","segW","segH","iy","ix","d","Triangle","tempVec2a","tempVec2b","tempVec2c","tempVec3c","tempVec3d","tempVec3e","tempVec3f","tempVec3g","tempVec3h","tempVec3i","tempVec3j","tempVec3k","_a0","_a1","_a2","_a3","getQuadraticBezierPoint","p0","c0","p1","ret","getCubicBezierPoint","c1","Curve","points","divisions","_getQuadraticBezierPoints","p","_getCubicBezierPoints","_getCatmullRomPoints","last","getCtrlPoint","pop","getPoints","CATMULLROM","CUBICBEZIER","QUADRATICBEZIER","prevPos","prevRot","prevScl","nextPos","nextRot","nextScl","Animation","objects","elapsed","weight","duration","frames","totalWeight","isSet","floorFrame","floor","blend","prevKey","nextKey","object","NormalProgram","tmp","defaultVertex","defaultFragment","KTXTexture","parseBuffer","ktx","KhronosTextureContainer","mipmaps","glInternalFormat","numberOfMipmapLevels","idCheck","BYTES_PER_ELEMENT","head","DataView","littleEndian","getUint32","numberOfFaces","bytesOfKeyValueData","levelSize","Int32Array","face","cache","supportedExtensions","detectWebP","toDataURL","powerOfTwo","log2","tmpVec3A","tmpVec3B","tmpVec3C","tmpVec3D","tmpQuatA","tmpQuatB","tmpQuatC","tmpQuatD","GLTFAnimation","loop","startTime","reduce","times","endTime","transform","interpolation","values","prevIndex","findIndex","nextIndex","prevVal","prevTan","nextTan","nextVal","cubicSplineInterpolate","t2","t3","s2","s3","s0","s1","GLTFSkin","skeleton","createBoneTexture","animations","joints","pow","ceil","log","LN2","boneMatrices","boneTextureSize","boneTexture","RGBA32F","updateUniforms","bone","bindInverse","_worldMatrix","TYPE_ARRAY","Int16Array","TYPE_SIZE","SCALAR","VEC2","VEC3","VEC4","MAT2","MAT3","MAT4","ATTRIBUTES","POSITION","NORMAL","TANGENT","TEXCOORD_0","TEXCOORD_1","COLOR_0","WEIGHTS_0","JOINTS_0","TRANSFORMS","translation","Vec4Func.set","Vec4Func.copy","Vec4Func.normalize","depthSegments","dSegs","phiStart","phiLength","thetaStart","thetaLength","pStart","pLength","tStart","tLength","iv","te","grid","n","vRow","radiusTop","radiusBottom","radialSegments","openEnded","rSegs","numCaps","indexArray","addCap","isTop","sign","centerIndex","theta","cosTheta","sinTheta","slope","indexRow","addHeight","tube","tubularSegments","arc","vertices","normals","uvs","indices","idx","element","enabled","ease","inertia","enableRotate","rotateSpeed","autoRotate","autoRotateSpeed","enableZoom","zoomSpeed","enablePan","panSpeed","minPolarAngle","maxPolarAngle","minAzimuthAngle","maxAzimuthAngle","minDistance","maxDistance","sphericalDelta","phi","sphericalTarget","spherical","panDelta","handleAutoRotate","sinPhiRadius","forcePosition","rotateStart","panStart","dollyStart","getZoomScale","mouseButtons","ORBIT","ZOOM","PAN","pan","deltaX","deltaY","el","body","targetDistance","clientHeight","panUp","dolly","dollyScale","handleMoveRotate","handleMovePan","onMouseDown","e","button","clientX","clientY","window","addEventListener","onMouseMove","onMouseUp","handleMouseMoveDolly","removeEventListener","onMouseWheel","stopPropagation","preventDefault","onTouchStart","touches","pageX","pageY","dx","dy","handleTouchStartDollyPan","onTouchMove","handleTouchMoveDollyPan","onTouchEnd","onContextMenu","passive","origin","direction","castMouse","mouse","intersectBounds","meshes","output","invWorldMat4","hits","localMaxDistance","localDistance","raycast","intersectSphere","intersectBox","hit","localPoint","point","intersectMeshes","includeUV","includeNormal","closestFaceNormal","faceNormal","barycoord","uvA","uvB","uvC","closestA","closestB","closestC","end","ai","bi","ci","intersectTriangle","localFaceNormal","localNormal","getBarycoord","sphere","ray","tca","d2","radius2","thc","t0","t1","box","tmin","tmax","tYmin","tYmax","tZmin","tZmax","invdirx","invdiry","invdirz","backfaceCulling","edge1","edge2","diff","DdN","DdQxE2","DdE1xQ","QdN","v0","v1","v2","dot00","dot01","dot02","dot11","dot12","denom","invDenom","targetOnly","options","passes","fbo","read","write","swap","resize","addPass","textureUniform","pass","enabledPasses","filter","rig","createBones","root","bones","bindPose","addAnimation","animation","total","font","text","align","letterSpacing","lineHeight","wordSpacing","wordBreak","_this","glyphs","buffers","baseline","newline","whitespace","createGeometry","common","base","numChars","replace","layout","cursor","wordCursor","wordWidth","line","newLine","char","test","glyph","kern","getKernPairOffset","advance","xadvance","numGlyphs","texW","scaleW","texH","scaleH","lineIndex","xoffset","yoffset","h","uw","vh","numLines","map","populateBuffers","id1","id2","kernings","first","second","amount","chars","falloff","dissipation","mask","HALF_FLOAT","HALF_FLOAT_OES","RGBA16F","createFBOs","velocity","tMap","uFalloff","uAlpha","uDissipation","uAspect","uMouse","uVelocity","initialData","dataLength","coords","floatArray","prev","next","side","ind","updateGeometry","uResolution","resolution","uDPR","uThickness","thickness","uColor","uMiter","miter","light","depthProgram","castMeshes","receive","cast","uniformProjection","uniformView","uniformTexture","colorProgram","isForceVisibility","load","support","getSupportedExtensions","ext","prop","includes","cacheID","loaded","loadKTX","loadImage","pvrtc","s3tc","etc","etc1","astc","fetch","then","res","arrayBuffer","Promise","resolve","img","Image","crossOrigin","isChrome","navigator","userAgent","onload","createImageBitmap","imageOrientation","imgBmp","decodeImage","close","clearCache","dir","desc","parseDesc","parse","asset","version","loadBuffers","bufferViews","parseBufferViews","images","parseImages","parseTextures","materials","parseMaterials","skins","parseSkins","parseMeshes","nodes","parseNodes","populateSkins","parseAnimations","scenes","parseScenes","json","glb","unpackGLB","header","Error","jsonChunkHeader","jsonByteLength","jsonText","TextDecoder","decode","JSON","binaryChunkHeader","binaryByteOffset","binary","resolveURI","uri","all","primitives","accessors","bufferView","isAttribute","componentType","mimeType","bufferIndex","byteOffset","TypeArray","originalBuffer","bufferViewIndex","blob","Blob","URL","createObjectURL","ready","sampler","samplerIndex","source","sourceIndex","samplers","pbrMetallicRoughness","normalTexture","occlusionTexture","emissiveTexture","emissiveFactor","alphaMode","alphaCutoff","doubleSided","baseColorFactor","baseColorTexture","metallicFactor","roughnessFactor","metallicRoughnessTexture","inverseBindMatrices","parseAccessor","weights","meshIndex","numInstances","skinIndex","skin","parsePrimitives","material","materialIndex","gltfMaterial","bufferByteOffset","byteStride","isFirstInstance","instanceCount","instanceMatrix","childIndex","joint","channels","input","inputIndex","outputIndex","nodeIndex","path","nodesIndices","Cache","files","file","DefaultLoadingManager","onLoad","onProgress","onError","scope","isLoading","itemsLoaded","itemsTotal","urlModifier","handlers","onStart","itemStart","url","itemEnd","itemError","resolveURL","setURLModifier","addHandler","regex","loader","removeHandler","getHandler","global","lastIndex","Loader","manager","withCredentials","resourcePath","requestHeader","loadAsync","reject","setCrossOrigin","setWithCredentials","setPath","setResourcePath","setRequestHeader","ImageLoader","cached","setTimeout","createElementNS","onImageLoad","onImageError","event","substr","TextureLoader","Figure","cover","sizes","time","rendering","$el","_id","result","characters","charactersLength","charAt","random","generateID","setAttribute","_setupShaders","createMesh","baseVertex","bgCover","baseFragment","uploadTexture","_this2","disposeTexture","deleteTexture","createMaterial","opts","getBoundingTexture","naturalWidth","naturalHeight","baseUniforms","positionX","positionY","uTime","finalVertex","_opts","_opts2","_opts3","_this4","classList","setSizes","ww","innerWidth","wh","innerHeight","destroy","removeAttribute","getBoundingClientRect","defineProperty","exports","RAF","cbArray","on","cb","off","requestAnimationFrame","RAFInstance","debounce","func","wait","immediate","timeout","args","context","timestamp","later","Date","now","apply","debounced","callNow","clearTimeout","flush","Resize","init","fn","debounce_1","resizeHandler","resizeInstance","tag","classes","elem","outsideCallback","observer","MutationObserver","mutationsList","mutation","observe","childList","disconnect","params","_a","_b","_c","_d","_e","_f","_g","def","move","keys","__importDefault","mod","__esModule","default","enumerable","raf_1","raf","resize_1","math_1","clamp","createNewElement_1","createNewElement","mutationObserver_1","require$$0","matrixTransform_1","matrixTransform","DefaultScetch","$selector","$container","querySelector","_bounds","_init","_setupCamera","appendChild","_animate","_resize","Scetch","figures","$els","addFigures","_DefaultScetch","atan","_this$opts$camera","_this$opts$camera2","_updatePos","figure","figureIns","removeFigure","dataset","glId","find","_this3"],"mappings":"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"}